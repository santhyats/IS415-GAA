[
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar",
    "section": "",
    "text": "Myanmar has been going through civil wars and internal conflicts for decades now. These conflicts have mainly been due to ethnic tensions and general unhappiness in the governing party. Conflicts range from battles, riots, violence against civilians, strategic developments and more. In this exercise, I will be analysing the distribution of conflicts in Myanmar.\nTo do this, I will mainly be performing quarterly KDE analysis on 4 main types of conflicts: Battles, Explosions, Violence against Civilians and Strategic Developments through the years of 2021-2024. I will also be performing the second order spatial point pattern process as well as the spatio temporal point process analysis for these segments. Let’s get started.\n\n\nThese are the packages that I will be using in this exercise.\nsf: Used in spatial data wrangling\ntidyverse: Used in data wrangling for non-spatial data\nraster: For reading, writing and manipulating raster data\ntmap: For functions relating to mapping point patterns\nspatstat: Provides functions for spatial point process analysis\nsparr: Provides functions for spatio-temporal point process analysis\n\npacman::p_load(sf, tidyverse, spatstat, sparr, tmap)"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#overview",
    "href": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#overview",
    "title": "Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar",
    "section": "",
    "text": "Myanmar has been going through civil wars and internal conflicts for decades now. These conflicts have mainly been due to ethnic tensions and general unhappiness in the governing party. Conflicts range from battles, riots, violence against civilians, strategic developments and more. In this exercise, I will be analysing the distribution of conflicts in Myanmar.\nTo do this, I will mainly be performing quarterly KDE analysis on 4 main types of conflicts: Battles, Explosions, Violence against Civilians and Strategic Developments through the years of 2021-2024. I will also be performing the second order spatial point pattern process as well as the spatio temporal point process analysis for these segments. Let’s get started.\n\n\nThese are the packages that I will be using in this exercise.\nsf: Used in spatial data wrangling\ntidyverse: Used in data wrangling for non-spatial data\nraster: For reading, writing and manipulating raster data\ntmap: For functions relating to mapping point patterns\nspatstat: Provides functions for spatial point process analysis\nsparr: Provides functions for spatio-temporal point process analysis\n\npacman::p_load(sf, tidyverse, spatstat, sparr, tmap)"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#data-preparation",
    "href": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#data-preparation",
    "title": "Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar",
    "section": "1.2 Data Preparation",
    "text": "1.2 Data Preparation\nIn this section, I will be retrieving the required data and performing the necessary data wrangling methods in order to transform the data into a form that is best suitable for our analytic needs for this exercise. The datasets used in this exercise are:\n\nMyanmar_All_2021-24.csv: A csv file downloaded from ACLED, which contains all the details of the internal conflicts in Myanmar from 2021-2024. Note that the file name has been renamed for ease of use.\nMBoundary: A shapefile downloaded from Myanmar Information Management Unit, MIMU. This shapefile maps out the boundary of Myanmar. I have also renamed this file for ease of use.\n\n\n1.2.1 Importing the Data\nFirstly, I will be importing the base map of Myanmar in shapefile format using st_read() function of the sf package. I will also transform the crs to that of Myanmar using the st_transform() function.\n\nboundary &lt;- st_read(dsn=\"data/raw\",\n                    layer = \"MBoundary\") %&gt;% \n  st_transform(crs=32646) %&gt;% \n  write_rds(\"data/rds/boundary.rds\")\n\n\nboundary&lt;-read_rds(\"data/rds/boundary.rds\")\n\nWe will make use of st_crs() function to make sure that the Coordinate Reference System has been correctly transformed to that of Myanmar.\n\nst_crs(boundary)\n\nCoordinate Reference System:\n  User input: EPSG:32646 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 46N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 46N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",93,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 90°E and 96°E, northern hemisphere between equator and 84°N, onshore and offshore. Bangladesh. Bhutan. China. Indonesia. Mongolia. Myanmar (Burma). Russian Federation.\"],\n        BBOX[0,90,84,96]],\n    ID[\"EPSG\",32646]]\n\n\nNext, I will also be Importing the regional boundaries of Myanmar and transforming the crs to that of Myanmar’s again.\n\nregions_sf &lt;- st_read(dsn=\"data/raw\",\n                      layer=\"regions\") %&gt;% \n  st_transform(crs = 32646) %&gt;% \n  write_rds(\"data/rds/regions.rds\")\n\n\nregions_sf&lt;-read_rds(\"data/rds/regions.rds\")\n\nLastly, I will be importing and reading the csv file containing the data about the conflicts into a dataframe called all_sf. This is done using the read_csv() function of the readr package. I will once again ensure that the crs of the data is transformed to that of Myanmar’s.\n\nall_sf &lt;- read_csv('data/raw/Myanmar_All_2021-24.csv') %&gt;% \n  st_as_sf(coords = c('longitude', 'latitude'),\n           crs=4326) %&gt;% \n  st_transform(crs=32646) %&gt;% \n   select(1:4, 6,19, 29, 30) \n\nst_crs(all_sf)\n\n\n\n1.2.2 Preparing the Data\nBefore we can start deriving our KDE layers, we will make sure our data is in a suitable form and is processed in a way that we need it in. I will start off by converting the date column in the aspatial data to the date format so that can be handled during computations. This is done through the as.Date() functon. I will also add in new columns called “quarters” and “num_quarters” to keep track of our quarters and its numbers. The numeric quarters column will come in handy when we are computing our Spatio Temporal KDE layers later.\n\nall_sf&lt;- all_sf %&gt;% \n  mutate(event_date = as.Date(event_date, format = \"%d %B %Y\"))\nall_sf$quarters &lt;- paste(quarters(all_sf$event_date), year(all_sf$event_date), sep=\"_\")\nall_sf$num_quarters&lt;-quarter(all_sf$event_date)\nwrite_rds(all_sf,\"data/rds/all.rds\")\n\n\nall_sf&lt;-read_rds(\"data/rds/all.rds\")\n\nBefore we can filter out the data that we need, I will be visualising the data according to the event types to observe for any patterns or similarity. To do this, I will first use tm_shape() and tm_polygons() of the tmap package to plot the base map of Myanmar, indicating all the regions. Next, I will use tm_shape() and tm_dots() together to plot out all the spatial points. Lastly, I will use tm_facets() to separate the plots according to the type of conlfict.\n\ntm_shape(boundary) + tm_polygons() + tm_shape(regions_sf) + tm_polygons() + tm_shape(all_sf) + tm_dots() + tm_facets(by='event_type', free.coords = FALSE, drop.units= TRUE)\n\n\n\n\n\n\n\n\nFrom the patterns observed above, I see that Battles, Strategic Developments, Explosions and Violence against civilians all have similar distribution of conflicts across the space. I also noted that Riots and Protests have very sparsespatial points even over the aggregated 4 year dataset. This indicates the possibility that there will be few to no spatial points available to analyse for certain quarters.\nAs such, I will be focusing my analysis on these four main categories of conflicts: Battles, Strategic Developments, Violence against Civilians and Explosions.\nI will filter out the data according to these event types using the filter() function and save them in separate sf objects.\n\nbattles_sf &lt;- all_sf %&gt;%  filter(event_type == 'Battles') %&gt;% \n  write_rds(\"data/rds/Battles/battles_sf.rds\")\n\nexp_sf &lt;- all_sf %&gt;%  filter(event_type == \"Explosions/Remote violence\") %&gt;% \n  write_rds(\"data/rds/Explosions/exp_sf.rds\")\n\ncivViolence_sf &lt;- all_sf %&gt;%  filter(event_type == \"Violence against civilians\") %&gt;% \n  write_rds(\"data/rds/Violence/civViolence_sf.rds\")\n\nstrat_dev_sf &lt;- all_sf %&gt;%  filter(event_type == 'Strategic developments') %&gt;% \n  write_rds(\"data/rds/Strat_Dev/strat_dev.rds\")\n\nI will also be creating a separate sf containing the only the timeframe and the geometry of the spatial points, to be used in our Spatio Temporal KDE layers later. This is done by using the select() functions to select only the “quarters”, “num_quarters” an d”geometry” columns from the dataframes of the respective conflict types.\n\nquart_geo_bat&lt;- battles_sf %&gt;% \n  select(3,8,10) %&gt;% \n  write_rds(\"data/rds/Battles/quart_geo_bat.rds\")\n\nquart_geo_civ &lt;- civViolence_sf %&gt;% \n  select(3,8,10) %&gt;% \n  write_rds(\"data/rds/Violence/quart_geo_civ.rds\")\n\nquart_geo_exp&lt;- exp_sf %&gt;% \n  select(3,8,10) %&gt;% \n  write_rds(\"data/rds/Explosions/quart_geo_exp.rds\")\n\nquart_geo_strat&lt;- strat_dev_sf %&gt;% \n  select(3,8,10) %&gt;% \n  write_rds(\"data/rds/Strat_Dev/quart_geo_strat.rds\")\n\nFinally, I will further split the conflict type datasets into quarterly periods. For ease of use, I will write these sf objects into rds files and save them in a compiled folder.\n\nBattlesExplosionsViolence against civilliansStrategic Developments\n\n\n\nq1_21_battles_sf &lt;- battles_sf %&gt;% \n  filter(year == '2021' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Battles/2021/q1.rds\")\n\nq2_21_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Battles/2021/q2.rds\")\n\nq3_21_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Battles/2021/q3.rds\")\n\nq4_21_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Battles/2021/q4.rds\")\n\n#2022\n\nq1_22_battles_sf &lt;- battles_sf %&gt;% \n  filter(year == '2022' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Battles/2022/q1.rds\")\n\nq2_22_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Battles/2022/q2.rds\")\n\nq3_22_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Battles/2022/q3.rds\")\n\nq4_22_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Battles/2022/q4.rds\")\n\n#2023\n\nq1_23_battles_sf &lt;- battles_sf %&gt;% \n  filter(year == '2023' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Battles/2023/q1.rds\")\n\nq2_23_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Battles/2023/q2.rds\")\n\nq3_23_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Battles/2023/q3.rds\")\n\nq4_23_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Battles/2023/q4.rds\")\n\n#2024\n\nq1_24_battles_sf &lt;- battles_sf %&gt;% \n  filter(year == '2024' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Battles/2024/q1.rds\")\n\nq2_24_battles_sf &lt;-battles_sf %&gt;% \n  filter(year == '2024') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Battles/2024/q2.rds\")\n\n\n\n\nq1_21_exp_sf &lt;- exp_sf %&gt;% \n  filter(year == '2021' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Explosions/2021/q1.rds\")\n\nq2_21_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Explosions/2021/q2.rds\")\n\nq3_21_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Explosions/2021/q3.rds\")\n\nq4_21_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Explosions/2021/q4.rds\")\n\n#2022\n\nq1_22_exp_sf &lt;- exp_sf %&gt;% \n  filter(year == '2022' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Explosions/2022/q1.rds\")\n\nq2_22_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Explosions/2022/q2.rds\")\n\nq3_22_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Explosions/2022/q3.rds\")\n\nq4_22_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Explosions/2022/q4.rds\")\n\n#2023\n\nq1_23_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2023' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Explosions/2023/q1.rds\")\n\nq2_23_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Explosions/2023/q2.rds\")\n\nq3_23_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Explosions/2023/q3.rds\")\n\nq4_23_exp_sf &lt;-battles_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Explosions/2023/q4.rds\")\n\n#2024\n\nq1_24_exp_sf &lt;- exp_sf %&gt;% \n  filter(year == '2024' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Explosions/2024/q1.rds\")\n\nq2_24_exp_sf &lt;-exp_sf %&gt;% \n  filter(year == '2024') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Explosions/2024/q2.rds\")\n\n\n\n\nq1_21_civViolence_sf &lt;- civViolence_sf %&gt;% \n  filter(year == '2021' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Violence/2021/q1.rds\")\n\nq2_21_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Violence/2021/q2.rds\")\n\nq3_21_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Violence/2021/q3.rds\")\n\nq4_21_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Violence/2021/q4.rds\")\n\n#2022\n\nq1_22_civViolence_sf &lt;- civViolence_sf %&gt;% \n  filter(year == '2022' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Violence/2022/q1.rds\")\n\nq2_22_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Violence/2022/q2.rds\")\n\nq3_22_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Violence/2022/q3.rds\")\n\nq4_22_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Violence/2022/q4.rds\")\n\n#2023\n\nq1_23_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2023' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Violence/2023/q1.rds\")\n\nq2_23_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Violence/2023/q2.rds\")\n\nq3_23_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Violence/2023/q3.rds\")\n\nq4_23_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Violence/2023/q4.rds\")\n\n#2024\n\nq1_24_civViolence_sf &lt;- civViolence_sf %&gt;% \n  filter(year == '2024' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Violence/2024/q1.rds\")\n\nq2_24_civViolence_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2024') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Violence/2024/q2.rds\")\n\n\n\n\nq1_21_strat_dev_sf &lt;- strat_dev_sf %&gt;% \n  filter(year == '2021' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2021/q1.rds\")\n\nq2_21_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2021/q2.rds\")\n\nq3_21_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2021/q3.rds\")\n\nq4_21_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2021') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2021/q4.rds\")\n\n#2022\n\nq1_22_strat_dev_sf &lt;- strat_dev_sf %&gt;% \n  filter(year == '2022' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2022/q1.rds\")\n\nq2_22_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2022/q2.rds\")\n\nq3_22_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2022/q3.rds\")\n\nq4_22_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2022') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2022/q4.rds\")\n\n#2023\n\nq1_23_strat_dev_sf &lt;-civViolence_sf %&gt;% \n  filter(year == '2023' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2023/q1.rds\")\n\nq2_23_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2023/q2.rds\")\n\nq3_23_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 3)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2023/q3.rds\")\n\nq4_23_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2023') %&gt;% \n  filter(quarter(event_date) == 4)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2023/q4.rds\")\n\n#2024\n\nq1_24_strat_dev_sf &lt;- strat_dev_sf %&gt;% \n  filter(year == '2024' ) %&gt;% \n  filter(quarter(event_date) == 1) %&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2024/q1.rds\")\n\nq2_24_strat_dev_sf &lt;-strat_dev_sf %&gt;% \n  filter(year == '2024') %&gt;% \n  filter(quarter(event_date) == 2)%&gt;%  \n  write_rds(\"data/rds/Strat_Dev/2024/q2.rds\")\n\n\n\n\n\n\n2.2 Data Wrangling\n\n2.2.1 Converting the sf objects to ppp objects\nTo derive our KDE layers, we would firstly need the sf objects to be converted to ppp objects. This is because the function that we will be using, density() of the spatstat package, only takes in objects in the ppp form. We will do this using the as.ppp() function.\n\nBattlesExplosionsStrategic DevelopmentsViolence Against Civilians\n\n\n\nbattlesQ121_ppp &lt;- as.ppp(st_coordinates(q1_21_battles_sf), st_bbox(q1_21_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ221_ppp &lt;- as.ppp(st_coordinates(q2_21_battles_sf), st_bbox(q2_21_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ321_ppp&lt;- as.ppp(st_coordinates(q3_21_battles_sf), st_bbox(q3_21_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ421_ppp&lt;-as.ppp(st_coordinates(q4_21_battles_sf), st_bbox(q4_21_battles_sf))\n\nWarning: data contain duplicated points\n\n#2022\n\nbattlesQ122_ppp &lt;- as.ppp(st_coordinates(q1_22_battles_sf), st_bbox(q1_22_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ222_ppp &lt;- as.ppp(st_coordinates(q2_22_battles_sf), st_bbox(q2_22_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ322_ppp&lt;- as.ppp(st_coordinates(q3_22_battles_sf), st_bbox(q3_22_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ422_ppp&lt;-as.ppp(st_coordinates(q4_22_battles_sf), st_bbox(q4_22_battles_sf))\n\nWarning: data contain duplicated points\n\n#2023\nbattlesQ123_ppp &lt;- as.ppp(st_coordinates(q1_23_battles_sf), st_bbox(q1_23_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ223_ppp &lt;- as.ppp(st_coordinates(q2_23_battles_sf), st_bbox(q2_23_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ323_ppp&lt;- as.ppp(st_coordinates(q3_23_battles_sf), st_bbox(q3_23_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ423_ppp&lt;-as.ppp(st_coordinates(q4_23_battles_sf), st_bbox(q4_23_battles_sf))\n\nWarning: data contain duplicated points\n\n#2024\nbattlesQ124_ppp &lt;- as.ppp(st_coordinates(q1_24_battles_sf), st_bbox(q1_24_battles_sf))\n\nWarning: data contain duplicated points\n\nbattlesQ224_ppp &lt;- as.ppp(st_coordinates(q2_24_battles_sf), st_bbox(q2_24_battles_sf))\n\nWarning: data contain duplicated points\n\n\n\n\n\nexpQ121_ppp &lt;- as.ppp(st_coordinates(q1_21_exp_sf), st_bbox(q1_21_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ221_ppp &lt;- as.ppp(st_coordinates(q2_21_exp_sf), st_bbox(q2_21_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ321_ppp&lt;- as.ppp(st_coordinates(q3_21_exp_sf), st_bbox(q3_21_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ421_ppp&lt;-as.ppp(st_coordinates(q4_21_exp_sf), st_bbox(q4_21_exp_sf))\n\nWarning: data contain duplicated points\n\n#2022\n\nexpQ122_ppp &lt;- as.ppp(st_coordinates(q1_22_exp_sf), st_bbox(q1_22_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ222_ppp &lt;- as.ppp(st_coordinates(q2_22_exp_sf), st_bbox(q2_22_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ322_ppp&lt;- as.ppp(st_coordinates(q3_22_exp_sf), st_bbox(q3_22_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ422_ppp&lt;-as.ppp(st_coordinates(q4_22_exp_sf), st_bbox(q4_22_exp_sf))\n\nWarning: data contain duplicated points\n\n#2023\nexpQ123_ppp &lt;- as.ppp(st_coordinates(q1_23_exp_sf), st_bbox(q1_23_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ223_ppp &lt;- as.ppp(st_coordinates(q2_23_exp_sf), st_bbox(q2_23_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ323_ppp&lt;- as.ppp(st_coordinates(q3_23_exp_sf), st_bbox(q3_23_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ423_ppp&lt;-as.ppp(st_coordinates(q4_23_exp_sf), st_bbox(q4_23_exp_sf))\n\nWarning: data contain duplicated points\n\n#2024\nexpQ124_ppp &lt;- as.ppp(st_coordinates(q1_24_exp_sf), st_bbox(q1_24_exp_sf))\n\nWarning: data contain duplicated points\n\nexpQ224_ppp &lt;- as.ppp(st_coordinates(q2_24_exp_sf), st_bbox(q2_24_exp_sf))\n\nWarning: data contain duplicated points\n\n\n\n\n\nstrat_devQ121_ppp &lt;- as.ppp(st_coordinates(q1_21_strat_dev_sf), st_bbox(q1_21_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ221_ppp &lt;- as.ppp(st_coordinates(q2_21_strat_dev_sf), st_bbox(q2_21_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ321_ppp&lt;- as.ppp(st_coordinates(q3_21_strat_dev_sf), st_bbox(q3_21_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ421_ppp&lt;-as.ppp(st_coordinates(q4_21_strat_dev_sf), st_bbox(q4_21_strat_dev_sf))\n\nWarning: data contain duplicated points\n\n#2022\nstrat_devQ122_ppp &lt;- as.ppp(st_coordinates(q1_22_strat_dev_sf), st_bbox(q1_22_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ222_ppp &lt;- as.ppp(st_coordinates(q2_22_strat_dev_sf), st_bbox(q2_22_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ322_ppp&lt;- as.ppp(st_coordinates(q3_22_strat_dev_sf), st_bbox(q3_22_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ422_ppp&lt;-as.ppp(st_coordinates(q4_22_strat_dev_sf), st_bbox(q4_22_strat_dev_sf))\n\nWarning: data contain duplicated points\n\n#2023\nstrat_devQ123_ppp &lt;- as.ppp(st_coordinates(q1_23_strat_dev_sf), st_bbox(q1_23_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ223_ppp &lt;- as.ppp(st_coordinates(q2_23_strat_dev_sf), st_bbox(q2_23_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ323_ppp&lt;- as.ppp(st_coordinates(q3_23_strat_dev_sf), st_bbox(q3_23_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ423_ppp&lt;-as.ppp(st_coordinates(q4_23_strat_dev_sf), st_bbox(q4_23_strat_dev_sf))\n\nWarning: data contain duplicated points\n\n#2024\nstrat_devQ124_ppp &lt;- as.ppp(st_coordinates(q1_24_strat_dev_sf), st_bbox(q1_24_strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_devQ224_ppp &lt;- as.ppp(st_coordinates(q2_24_strat_dev_sf), st_bbox(q2_24_strat_dev_sf))\n\nWarning: data contain duplicated points\n\n\n\n\n\ncivViolenceQ121_ppp &lt;- as.ppp(st_coordinates(q1_21_civViolence_sf), st_bbox(q1_21_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ221_ppp &lt;- as.ppp(st_coordinates(q2_21_civViolence_sf), st_bbox(q2_21_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ321_ppp&lt;- as.ppp(st_coordinates(q3_21_civViolence_sf), st_bbox(q3_21_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ421_ppp&lt;-as.ppp(st_coordinates(q4_21_civViolence_sf), st_bbox(q4_21_civViolence_sf))\n\nWarning: data contain duplicated points\n\n#2022\n\ncivViolenceQ122_ppp &lt;- as.ppp(st_coordinates(q1_22_civViolence_sf), st_bbox(q1_22_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ222_ppp &lt;- as.ppp(st_coordinates(q2_22_civViolence_sf), st_bbox(q2_22_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ322_ppp&lt;- as.ppp(st_coordinates(q3_22_civViolence_sf), st_bbox(q3_22_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ422_ppp&lt;-as.ppp(st_coordinates(q4_22_civViolence_sf), st_bbox(q4_22_civViolence_sf))\n\nWarning: data contain duplicated points\n\n#2023\ncivViolenceQ123_ppp &lt;- as.ppp(st_coordinates(q1_23_civViolence_sf), st_bbox(q1_23_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ223_ppp &lt;- as.ppp(st_coordinates(q2_23_civViolence_sf), st_bbox(q2_23_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ323_ppp&lt;- as.ppp(st_coordinates(q3_23_civViolence_sf), st_bbox(q3_23_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ423_ppp&lt;-as.ppp(st_coordinates(q4_23_civViolence_sf), st_bbox(q4_23_civViolence_sf))\n\nWarning: data contain duplicated points\n\n#2024\ncivViolenceQ124_ppp &lt;- as.ppp(st_coordinates(q1_24_civViolence_sf), st_bbox(q1_24_civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolenceQ224_ppp &lt;- as.ppp(st_coordinates(q2_24_civViolence_sf), st_bbox(q2_24_civViolence_sf))\n\nWarning: data contain duplicated points\n\n\n\n\n\n\n\n\n2.2.2 Converting the boundary to an owin object\nI will convert the regions_sf object to an owin object using the the as.owin() function.\n\nboundary_owin &lt;- as.owin(regions_sf)\n\nOnce we have our ppp objects and owin object, we can start combining them to one object which can then be passed through the density() function.\n\nBattlesExplosionsStrategic DevelopmentsViolence Against Civilians\n\n\n\nbattlesQ121_ppp_com&lt;- battlesQ121_ppp[boundary_owin]\nbattlesQ121_ppp_com&lt;- rescale(battlesQ121_ppp_com, 1000, \"km\") \n\n\nbattlesQ221_ppp_com&lt;- battlesQ221_ppp[boundary_owin]\nbattlesQ221_ppp_com&lt;- rescale(battlesQ221_ppp_com, 1000, \"km\") \n\n\nbattlesQ321_ppp_com&lt;- battlesQ321_ppp[boundary_owin]\nbattlesQ321_ppp_com&lt;- rescale(battlesQ321_ppp_com, 1000, \"km\") \n\nbattlesQ421_ppp_com&lt;- battlesQ421_ppp[boundary_owin]\nbattlesQ421_ppp_com&lt;- rescale(battlesQ421_ppp_com, 1000, \"km\")\n\n#2022\n \nbattlesQ122_ppp_com&lt;- battlesQ122_ppp[boundary_owin]\nbattlesQ122_ppp_com&lt;- rescale(battlesQ122_ppp_com, 1000, \"km\")\n\nbattlesQ222_ppp_com&lt;- battlesQ222_ppp[boundary_owin]\nbattlesQ222_ppp_com&lt;- rescale(battlesQ222_ppp_com, 1000, \"km\")\n\nbattlesQ322_ppp_com&lt;- battlesQ322_ppp[boundary_owin]\nbattlesQ322_ppp_com&lt;- rescale(battlesQ322_ppp_com, 1000, \"km\")\n\nbattlesQ422_ppp_com&lt;- battlesQ422_ppp[boundary_owin]\nbattlesQ422_ppp_com&lt;- rescale(battlesQ422_ppp_com, 1000, \"km\")                                                                                \n#2023\n                                      \nbattlesQ123_ppp_com&lt;- battlesQ123_ppp[boundary_owin]\nbattlesQ123_ppp_com&lt;- rescale(battlesQ123_ppp_com, 1000, \"km\")\n\nbattlesQ223_ppp_com&lt;- battlesQ223_ppp[boundary_owin]\nbattlesQ223_ppp_com&lt;- rescale(battlesQ223_ppp_com, 1000, \"km\")\n\nbattlesQ323_ppp_com&lt;- battlesQ323_ppp[boundary_owin]\nbattlesQ323_ppp_com&lt;- rescale(battlesQ323_ppp_com, 1000, \"km\")\n\nbattlesQ423_ppp_com&lt;- battlesQ423_ppp[boundary_owin]\nbattlesQ423_ppp_com&lt;- rescale(battlesQ423_ppp_com, 1000, \"km\")\n\n#2024\n\nbattlesQ124_ppp_com&lt;- battlesQ124_ppp[boundary_owin]\nbattlesQ124_ppp&lt;- rescale(battlesQ124_ppp_com, 1000, \"km\")\n\nbattlesQ224_ppp_com&lt;- battlesQ224_ppp[boundary_owin]\nbattlesQ224_ppp_com&lt;- rescale(battlesQ224_ppp_com, 1000, \"km\")\n\n\n\n\nexpQ121_ppp_com&lt;- expQ121_ppp[boundary_owin]\nexpQ121_ppp_com&lt;- rescale(expQ121_ppp_com, 1000, \"km\")\n\nexpQ221_ppp_com&lt;- expQ221_ppp[boundary_owin]\nexpQ221_ppp_com&lt;- rescale(expQ221_ppp_com, 1000, \"km\")\n\nexpQ321_ppp_com&lt;- expQ321_ppp[boundary_owin]\nexpQ321_ppp_com&lt;- rescale(expQ321_ppp_com, 1000, \"km\") \n\nexpQ421_ppp_com&lt;- expQ421_ppp[boundary_owin]\nexpQ421_ppp_com&lt;- rescale(expQ421_ppp_com, 1000, \"km\")\n\n#2022\n \nexpQ122_ppp_com&lt;- expQ122_ppp[boundary_owin]\nexpQ122_ppp_com&lt;- rescale(expQ122_ppp_com, 1000, \"km\")\n\nexpQ222_ppp_com&lt;- expQ222_ppp[boundary_owin]\nexpQ222_ppp_com&lt;- rescale(expQ222_ppp_com, 1000, \"km\")\n\nexpQ322_ppp_com&lt;- expQ322_ppp[boundary_owin]\nexpQ322_ppp_com&lt;- rescale(expQ322_ppp_com, 1000, \"km\")\n\nexpQ422_ppp_com&lt;- expQ422_ppp[boundary_owin]\nexpQ422_ppp_com&lt;- rescale(expQ422_ppp_com, 1000, \"km\") \n\n#2023\n                                      \n \nexpQ123_ppp_com&lt;- expQ123_ppp[boundary_owin]\nexpQ123_ppp&lt;- rescale(expQ123_ppp_com, 1000, \"km\")\n\n \nexpQ223_ppp_com&lt;- expQ223_ppp[boundary_owin]\nexpQ223_ppp_com&lt;- rescale(expQ223_ppp_com, 1000, \"km\")\n\n \nexpQ323_ppp_com&lt;- expQ323_ppp[boundary_owin]\nexpQ323_ppp_com&lt;- rescale(expQ323_ppp_com, 1000, \"km\")\n\n \nexpQ423_ppp_com&lt;- expQ423_ppp[boundary_owin]\nexpQ423_ppp_com&lt;- rescale(expQ423_ppp_com, 1000, \"km\")\n\n#2024\n\nexpQ124_ppp_com&lt;- expQ124_ppp[boundary_owin]\nexpQ124_ppp_com&lt;- rescale(expQ124_ppp_com, 1000, \"km\")\n\nexpQ224_ppp_com&lt;-expQ224_ppp[boundary_owin]\nexpQ224_ppp_com&lt;- rescale(expQ224_ppp_com, 1000, \"km\")\n\n\n\n\nstrat_devQ121_ppp_com&lt;- strat_devQ121_ppp[boundary_owin]\nstrat_devQ121_ppp_com&lt;- rescale(strat_devQ121_ppp_com, 1000, \"km\")\n\nstrat_devQ221_ppp_com&lt;- strat_devQ221_ppp[boundary_owin]\nstrat_devQ221_ppp_com&lt;- rescale(strat_devQ221_ppp_com, 1000, \"km\")\n\nstrat_devQ321_ppp_com&lt;- strat_devQ321_ppp[boundary_owin]\nstrat_devQ321_ppp_com&lt;- rescale(strat_devQ321_ppp_com, 1000, \"km\")\n\nstrat_devQ421_ppp_com&lt;- strat_devQ421_ppp[boundary_owin]\nstrat_devQ421_ppp_com&lt;- rescale(strat_devQ421_ppp_com, 1000, \"km\")\n\n#2022\n\nstrat_devQ122_ppp_com&lt;- strat_devQ122_ppp[boundary_owin]\nstrat_devQ122_ppp_com&lt;- rescale(strat_devQ122_ppp_com, 1000, \"km\")\n\nstrat_devQ222_ppp_com&lt;- strat_devQ222_ppp[boundary_owin]\nstrat_devQ222_ppp_com&lt;- rescale(strat_devQ222_ppp_com, 1000, \"km\")\n\nstrat_devQ322_ppp_com&lt;- strat_devQ322_ppp[boundary_owin]\nstrat_devQ322_ppp_com&lt;- rescale(strat_devQ322_ppp_com, 1000, \"km\")\n\nstrat_devQ422_ppp_com&lt;- strat_devQ422_ppp[boundary_owin]\nstrat_devQ422_ppp_com&lt;- rescale(strat_devQ422_ppp_com, 1000, \"km\")\n\n#2023\n                                      \n \nstrat_devQ123_ppp_com&lt;- strat_devQ123_ppp[boundary_owin]\nstrat_devQ123_ppp_com&lt;- rescale(strat_devQ123_ppp_com, 1000, \"km\")\n \nstrat_devQ223_ppp_com&lt;- strat_devQ223_ppp[boundary_owin]\nstrat_devQ223_ppp_com&lt;- rescale(strat_devQ223_ppp_com, 1000, \"km\")\n\nstrat_devQ323_ppp_com&lt;- strat_devQ323_ppp[boundary_owin]\nstrat_devQ323_ppp_com&lt;- rescale(strat_devQ323_ppp_com, 1000, \"km\")\n\nstrat_devQ423_ppp_com&lt;- strat_devQ423_ppp[boundary_owin]\nstrat_devQ423_ppp_com&lt;- rescale(strat_devQ423_ppp_com, 1000, \"km\")\n\n#2024\n\nstrat_devQ124_ppp_com&lt;- strat_devQ124_ppp[boundary_owin]\nstrat_devQ124_ppp_com&lt;- rescale(strat_devQ124_ppp_com, 1000, \"km\")\n\nstrat_devQ224_ppp_com&lt;-strat_devQ224_ppp[boundary_owin]\nstrat_devQ224_ppp_com&lt;- rescale(strat_devQ224_ppp_com, 1000, \"km\")\n\n\n\n\ncivViolenceQ121_ppp_com&lt;- civViolenceQ121_ppp[boundary_owin]\ncivViolenceQ121_ppp_com&lt;- rescale(civViolenceQ121_ppp_com, 1000, \"km\")\n\ncivViolenceQ221_ppp_com&lt;- civViolenceQ221_ppp[boundary_owin]\ncivViolenceQ221_ppp_com&lt;- rescale(civViolenceQ221_ppp_com, 1000, \"km\")\n \ncivViolenceQ321_ppp_com&lt;- civViolenceQ321_ppp[boundary_owin]\ncivViolenceQ321_ppp_com&lt;- rescale(civViolenceQ321_ppp_com, 1000, \"km\")\n\ncivViolenceQ421_ppp_com&lt;- civViolenceQ421_ppp[boundary_owin]\ncivViolenceQ421_ppp_com&lt;- rescale(civViolenceQ421_ppp_com, 1000, \"km\")\n\n#2022\n\ncivViolenceQ122_ppp_com&lt;- civViolenceQ122_ppp[boundary_owin]\ncivViolenceQ122_ppp_com&lt;- rescale(civViolenceQ122_ppp_com, 1000, \"km\")\n\ncivViolenceQ222_ppp_com&lt;- civViolenceQ222_ppp[boundary_owin]\ncivViolenceQ222_ppp_com&lt;- rescale(civViolenceQ222_ppp_com, 1000, \"km\")\n\ncivViolenceQ322_ppp_com&lt;- civViolenceQ322_ppp[boundary_owin]\ncivViolenceQ322_ppp_com&lt;- rescale(civViolenceQ322_ppp_com, 1000, \"km\")\n\ncivViolenceQ422_ppp_com&lt;- civViolenceQ422_ppp[boundary_owin]\ncivViolenceQ422_ppp_com&lt;- rescale(civViolenceQ422_ppp_com, 1000, \"km\")\n\n#2023\n                                      \ncivViolenceQ123_ppp_com&lt;- civViolenceQ123_ppp[boundary_owin]\ncivViolenceQ123_ppp_com&lt;- rescale(civViolenceQ123_ppp_com, 1000, \"km\")\n\ncivViolenceQ223_ppp_com&lt;- civViolenceQ223_ppp[boundary_owin]\ncivViolenceQ223_ppp_com&lt;- rescale(civViolenceQ223_ppp_com, 1000, \"km\")\n\ncivViolenceQ323_ppp_com&lt;- civViolenceQ323_ppp[boundary_owin]\ncivViolenceQ323_ppp_com&lt;- rescale(civViolenceQ323_ppp_com, 1000, \"km\")\n\ncivViolenceQ423_ppp_com&lt;- civViolenceQ423_ppp[boundary_owin]\ncivViolenceQ423_ppp_com&lt;- rescale(civViolenceQ423_ppp_com, 1000, \"km\")\n\n#2024\n\ncivViolenceQ124_ppp_com&lt;- civViolenceQ124_ppp[boundary_owin]\ncivViolenceQ124_ppp_com&lt;- rescale(civViolenceQ124_ppp_com, 1000, \"km\")\n\ncivViolenceQ224_ppp_com&lt;- civViolenceQ224_ppp[boundary_owin]\ncivViolenceQ224_ppp_com&lt;- rescale(civViolenceQ224_ppp_com, 1000, \"km\")"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#computing-the-quarterly-kde-layers",
    "href": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#computing-the-quarterly-kde-layers",
    "title": "Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar",
    "section": "1.3 Computing the quarterly KDE Layers",
    "text": "1.3 Computing the quarterly KDE Layers\nI will now use the combined ppp object to derive the quarterly KDE layers, sorted by the different conflict types. To find the optimal method for calculation of sigma, I did a couple of test plots. I first plotted the KDE layer with the bw.diggle() method of computing the sigma value:\n\nbat_q121_kde&lt;- density(battlesQ121_ppp_com, sigma=bw.diggle(battlesQ121_ppp_com), edge=TRUE, kernel=\"gaussian\") \nplot(bat_q121_kde, main=\"Battles in 1st Quarter of 2021\")\n\n\n\n\n\n\n\n\nHowever, as seen above, the map barely showed any patterns or colouring. This was probably due to the fact that the bw.diggle() was more aptly suited for datasets that leaned towards more uniform distributions. From our base plots earlier, the points had significant clustering in some areas, which was probably why this map did not reflect anything. Next, I tried the bw.ppl() method. This method is preferred for datasets where the distribution of spatial points are less homogenous, as is the case with ours.\n\nbat_q121_kde&lt;- density(battlesQ121_ppp_com, sigma=bw.ppl(battlesQ121_ppp_com), edge=TRUE, kernel=\"gaussian\") \nplot(bat_q121_kde, main=\"Battles in 1st Quarter of 2021\")\n\n\n\n\n\n\n\n\nThe result was good and enabled me to identify where a cluster of points can be seen. I decided that the bw.ppl() method was better than the bw.diggle() method to calculate sigma for our particular dataset. However, when I began plotting the quarterly layers, I quickly realised that some of the plots were once again, appearing blank. I figured this could be due to the bandwidth set by the function being too small for the quarterly data.\n\nbat_q121_kde&lt;- density(battlesQ121_ppp_com, sigma=bw.ppl(battlesQ121_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nbat_q221_kde&lt;-density(battlesQ221_ppp_com, sigma=bw.ppl(battlesQ221_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nbat_q321_kde&lt;-density(battlesQ321_ppp_com, sigma=bw.ppl(battlesQ321_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nbat_q421_kde&lt;-density(battlesQ421_ppp_com, sigma=bw.ppl(battlesQ421_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(bat_q121_kde, main=\"Battles in 1st Quarter of 2021\")\nplot(bat_q221_kde, main=\"Battles in 2nd Quarter of 2021\")\nplot(bat_q321_kde, main=\"Battles in 3rd Quarter of 2021\")\nplot(bat_q421_kde, main=\"Battles in 4th Quarter of 2021\")\n\n\n\n\n\n\n\n\nHence, I decided to try the bw.CvL() method, as it is similar to the bw.ppl() method, just with a minimised prediction error. When I plotted the maps, I was satisified with the result, and chose this as the method to go with.\n\nBattlesExplosionsStrategic DevelopmentsViolence against Civilians\n\n\n\n2021202220232024\n\n\n\nbat_q121_kde&lt;- density(battlesQ121_ppp_com, sigma=bw.CvL(battlesQ121_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nbat_q221_kde&lt;-density(battlesQ221_ppp_com, sigma=bw.CvL(battlesQ221_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nbat_q321_kde&lt;-density(battlesQ321_ppp_com, sigma=bw.CvL(battlesQ321_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nbat_q421_kde&lt;-density(battlesQ421_ppp_com, sigma=bw.CvL(battlesQ421_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(bat_q121_kde, main=\"Battles in 1st Quarter of 2021\")\nplot(bat_q221_kde, main=\"Battles in 2nd Quarter of 2021\")\nplot(bat_q321_kde, main=\"Battles in 3rd Quarter of 2021\")\nplot(bat_q421_kde, main=\"Battles in 4th Quarter of 2021\")\n\n\n\n\n\n\n\n\n\n\n\nbat_q122_kde&lt;- density(battlesQ122_ppp_com, sigma=bw.CvL(battlesQ122_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nbat_q222_kde&lt;-density(battlesQ222_ppp_com, sigma=bw.CvL(battlesQ222_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nbat_q322_kde&lt;-density(battlesQ322_ppp_com, sigma=bw.CvL(battlesQ322_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nbat_q422_kde&lt;-density(battlesQ422_ppp_com, sigma=bw.CvL(battlesQ422_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(bat_q122_kde, main=\"Battles in 1st Quarter of 2022\")\nplot(bat_q222_kde, main=\"Battles in 2nd Quarter of 2022\")\nplot(bat_q322_kde, main=\"Battles in 3rd Quarter of 2022\")\nplot(bat_q422_kde, main=\"Battles in 4th Quarter of 2022\")\n\n\n\n\n\n\n\n\n\n\n\nbat_q123_kde&lt;- density(battlesQ123_ppp_com, sigma=bw.CvL(battlesQ123_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nbat_q223_kde&lt;-density(battlesQ223_ppp_com, sigma=bw.CvL(battlesQ223_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nbat_q323_kde&lt;-density(battlesQ323_ppp_com, sigma=bw.CvL(battlesQ323_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nbat_q423_kde&lt;-density(battlesQ423_ppp_com, sigma=bw.CvL(battlesQ423_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(bat_q123_kde, main=\"Battles in 1st Quarter of 2023\")\nplot(bat_q223_kde, main=\"Battles in 2nd Quarter of 2023\")\nplot(bat_q323_kde, main=\"Battles in 3rd Quarter of 2023\")\nplot(bat_q423_kde, main=\"Battles in 4th Quarter of 2023\")\n\n\n\n\n\n\n\n\n\n\n\nbat_q124_kde&lt;- density(battlesQ124_ppp_com, sigma=bw.CvL(battlesQ124_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nbat_q224_kde&lt;-density(battlesQ224_ppp_com, sigma=bw.CvL(battlesQ224_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(1,2))\nplot(bat_q124_kde, main=\"Battles in 1st Quarter of 2024\")\nplot(bat_q224_kde, main=\"Battles in 2nd Quarter of 2024\")\n\n\n\n\n\n\n\n\n\n\n\nFor Battles, we see that the conflicts have slowly travelled to the center (Mandalay, Magwe Divisions) from the North-East (Kachin and Shan states) throughout the years 2021-2023. It also spread southward (Mon and Tenesserium States). This is due to the onset of a Military coup in Myanmar, resulting in violence in various parts of the land, including the central regions of Mandalay and Yangon (Maizland, 2022). Intensity of Battles saw a sharp decline from the last quarter of 2023 to the first two quarters of 2024.\n\n\n\n2021202220232024\n\n\n\nexp_q121_kde&lt;- density(expQ121_ppp_com, sigma=bw.CvL(expQ121_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nexp_q221_kde&lt;-density(expQ221_ppp_com, sigma=bw.CvL(expQ221_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nexp_q321_kde&lt;-density(expQ321_ppp_com, sigma=bw.CvL(expQ321_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nexp_q421_kde&lt;-density(expQ421_ppp_com, sigma=bw.CvL(expQ421_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(exp_q121_kde, main=\"Explosions in 1st Quarter of 2021\")\nplot(exp_q221_kde, main=\"Explosions in 2nd Quarter of 2021\")\nplot(exp_q321_kde, main=\"Explosions in 3rd Quarter of 2021\")\nplot(exp_q421_kde, main=\"Explosions in 4th Quarter of 2021\")\n\n\n\n\n\n\n\n\n\n\n\nexp_q122_kde&lt;- density(expQ122_ppp_com, sigma=bw.CvL(expQ122_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nexp_q222_kde&lt;-density(expQ222_ppp_com, sigma=bw.CvL(expQ222_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nexp_q322_kde&lt;-density(expQ322_ppp_com, sigma=bw.CvL(expQ322_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nexp_q422_kde&lt;-density(expQ422_ppp_com, sigma=bw.CvL(expQ422_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(exp_q122_kde, main=\"Explosions in 1st Quarter of 2022\")\nplot(exp_q222_kde, main=\"Explosions in 2nd Quarter of 2022\")\nplot(exp_q322_kde, main=\"Explosions in 3rd Quarter of 2022\")\nplot(exp_q422_kde, main=\"Explosions in 4th Quarter of 2022\")\n\n\n\n\n\n\n\n\n\n\n\nexp_q123_kde&lt;- density(expQ123_ppp_com, sigma=bw.CvL(expQ123_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nexp_q223_kde&lt;-density(expQ223_ppp_com, sigma=bw.CvL(expQ223_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nexp_q323_kde&lt;-density(expQ323_ppp_com, sigma=bw.CvL(expQ323_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nexp_q423_kde&lt;-density(expQ423_ppp_com, sigma=bw.CvL(expQ423_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(exp_q123_kde, main=\"Explosions in 1st Quarter of 2023\")\nplot(exp_q223_kde, main=\"Explosions in 2nd Quarter of 2023\")\nplot(exp_q323_kde, main=\"Explosions in 3rd Quarter of 2023\")\nplot(exp_q423_kde, main=\"Explosions in 4th Quarter of 2023\")\n\n\n\n\n\n\n\n\n\n\n\nexp_q124_kde&lt;- density(expQ124_ppp_com, sigma=bw.CvL(expQ124_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nexp_q224_kde&lt;-density(expQ224_ppp_com, sigma=bw.CvL(expQ224_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\n\npar(mfrow=c(1,2))\nplot(exp_q124_kde, main=\"Explosions in 1st Quarter of 2024\")\nplot(exp_q224_kde, main=\"Explosions in 2nd Quarter of 2024\")\n\n\n\n\n\n\n\n\n\n\n\nAs for Explosions, we see that it peaked in intensity in 2022-2023, and was also concentrated in the central regions of Myanmar.\n\n\n\n2021202220232024\n\n\n\nstrat_dev_q121_kde&lt;- density(strat_devQ121_ppp_com, sigma=bw.CvL(strat_devQ121_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nstrat_dev_q221_kde&lt;-density(strat_devQ221_ppp_com, sigma=bw.CvL(strat_devQ221_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nstrat_dev_q321_kde&lt;-density(strat_devQ321_ppp_com, sigma=bw.CvL(strat_devQ321_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nstrat_dev_q421_kde&lt;-density(strat_devQ421_ppp_com, sigma=bw.CvL(strat_devQ421_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(strat_dev_q121_kde, main=\"Strategic Developments in 1st Quarter of 2021\")\nplot(strat_dev_q221_kde, main=\"Strategic Developments in 2nd Quarter of 2021\")\nplot(strat_dev_q321_kde, main=\"Strategic Developments in 3rd Quarter of 2021\")\nplot(strat_dev_q421_kde, main=\"Strategic Developments in 4th Quarter of 2021\")\n\n\n\n\n\n\n\n\n\n\n\nstrat_dev_q122_kde&lt;- density(strat_devQ122_ppp_com, sigma=bw.CvL(strat_devQ122_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nstrat_dev_q222_kde&lt;-density(strat_devQ222_ppp_com, sigma=bw.CvL(strat_devQ222_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nstrat_dev_q322_kde&lt;-density(strat_devQ322_ppp_com, sigma=bw.CvL(strat_devQ322_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nstrat_dev_q422_kde&lt;-density(strat_devQ422_ppp_com, sigma=bw.CvL(strat_devQ422_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(strat_dev_q122_kde, main=\"Strategic Developments in 1st Quarter of 2022\")\nplot(strat_dev_q222_kde, main=\"Strategic Developments in 2nd Quarter of 2022\")\nplot(strat_dev_q322_kde, main=\"Strategic Developments in 3rd Quarter of 2022\")\nplot(strat_dev_q422_kde, main=\"Strategic Developments in 4th Quarter of 2022\")\n\n\n\n\n\n\n\n\n\n\n\nstrat_dev_q123_kde&lt;- density(strat_devQ123_ppp_com, sigma=bw.CvL(strat_devQ123_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nstrat_dev_q223_kde&lt;-density(strat_devQ223_ppp_com, sigma=bw.CvL(strat_devQ223_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nstrat_dev_q323_kde&lt;-density(strat_devQ323_ppp_com, sigma=bw.CvL(strat_devQ323_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\nstrat_dev_q423_kde&lt;-density(strat_devQ423_ppp_com, sigma=bw.CvL(strat_devQ423_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(strat_dev_q123_kde, main=\"Strategic Developments in 1st Quarter of 2023\")\nplot(strat_dev_q223_kde, main=\"Strategic Developments in 2nd Quarter of 2023\")\nplot(strat_dev_q323_kde, main=\"Strategic Developments in 3rd Quarter of 2023\")\nplot(strat_dev_q423_kde, main=\"Strategic Developments in 4th Quarter of 2023\")\n\n\n\n\n\n\n\n\n\n\n\nstrat_dev_q124_kde&lt;- density(strat_devQ124_ppp_com, sigma=bw.CvL(strat_devQ124_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\nstrat_dev_q224_kde&lt;-density(strat_devQ224_ppp_com, sigma=bw.CvL(strat_devQ224_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\n\npar(mfrow=c(1,2))\nplot(strat_dev_q124_kde, main=\"Strategic Developments in 1st Quarter of 2024\")\nplot(strat_dev_q224_kde, main=\"Strategic Developments in 2nd Quarter of 2024\")\n\n\n\n\n\n\n\n\n\n\n\nStrategic Developments seem to still be ongoing even as late as the 2nd quarter of this year, after having increased in 2022. It is also to be noted that as for Strategic Developments, it is only concentrated in the central regions of Myanmar and not so much on the outskirts.\n\n\n\n2021202220232024\n\n\n\ncivViolence_q121_kde&lt;- density(civViolenceQ121_ppp_com, sigma=bw.CvL(civViolenceQ121_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\ncivViolence_q221_kde&lt;-density(civViolenceQ221_ppp_com, sigma=bw.CvL(civViolenceQ221_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\ncivViolence_q321_kde&lt;-density(civViolenceQ321_ppp_com, sigma=bw.CvL(civViolenceQ321_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\ncivViolence_q421_kde&lt;-density(civViolenceQ421_ppp_com, sigma=bw.CvL(civViolenceQ421_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(civViolence_q121_kde, main=\"Violence Against Civilians in 1st Quarter of 2021\")\nplot(civViolence_q221_kde, main=\"Violence Against Civilians in 2nd Quarter of 2021\")\nplot(civViolence_q321_kde, main=\"Violence Against Civilians in 3rd Quarter of 2021\")\nplot(civViolence_q421_kde, main=\"Violence Against Civilians in 4th Quarter of 2021\")\n\n\n\n\n\n\n\n\n\n\n\ncivViolence_q122_kde&lt;- density(civViolenceQ122_ppp_com, sigma=bw.CvL(civViolenceQ122_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\ncivViolence_q222_kde&lt;-density(civViolenceQ222_ppp_com, sigma=bw.CvL(civViolenceQ222_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\ncivViolence_q322_kde&lt;-density(civViolenceQ322_ppp_com, sigma=bw.CvL(civViolenceQ322_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\ncivViolence_q422_kde&lt;-density(civViolenceQ422_ppp_com, sigma=bw.CvL(civViolenceQ422_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(civViolence_q122_kde, main=\"Violence Against Civilians in 1st Quarter of 2022\")\nplot(civViolence_q222_kde, main=\"Violence Against Civilians in 2nd Quarter of 2022\")\nplot(civViolence_q322_kde, main=\"Violence Against Civilians in 3rd Quarter of 2022\")\nplot(civViolence_q422_kde, main=\"Violence Against Civilians in 4th Quarter of 2022\")\n\n\n\n\n\n\n\n\n\n\n\ncivViolence_q123_kde&lt;- density(civViolenceQ123_ppp_com, sigma=bw.CvL(civViolenceQ123_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\ncivViolence_q223_kde&lt;-density(civViolenceQ223_ppp_com, sigma=bw.CvL(civViolenceQ223_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\ncivViolence_q323_kde&lt;-density(civViolenceQ323_ppp_com, sigma=bw.CvL(civViolenceQ323_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\ncivViolence_q423_kde&lt;-density(civViolenceQ423_ppp_com, sigma=bw.CvL(civViolenceQ423_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\npar(mfrow=c(2,2))\nplot(civViolence_q123_kde, main=\"Violence Against Civilians in 1st Quarter of 2023\")\nplot(civViolence_q223_kde, main=\"Violence Against Civilians in 2nd Quarter of 2023\")\nplot(civViolence_q323_kde, main=\"Violence Against Civilians in 3rd Quarter of 2023\")\nplot(civViolence_q423_kde, main=\"Violence Against Civilians in 4th Quarter of 2023\")\n\n\n\n\n\n\n\n\n\n\n\ncivViolence_q124_kde&lt;- density(civViolenceQ124_ppp_com, sigma=bw.CvL(civViolenceQ124_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\ncivViolence_q224_kde&lt;-density(civViolenceQ224_ppp_com, sigma=bw.CvL(civViolenceQ224_ppp_com), edge=TRUE, kernel=\"gaussian\")\n\n\n\npar(mfrow=c(1,2))\nplot(civViolence_q124_kde, main=\"Violence Against Civilians in 1st Quarter of 2024\")\nplot(civViolence_q224_kde, main=\"Violence Against Civilians in 2nd Quarter of 2024\")\n\n\n\n\n\n\n\n\n\n\n\nViolence Against the civilians can be observed in the central and southern regions of Myanmar througout all the quarters, with the concentration once again, being at the central region. There appears to be a brief reduction in the intensity of the attacks in the 3rd quarter of 2022."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#computing-second-order-spatial-point-process-analysis",
    "href": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#computing-second-order-spatial-point-process-analysis",
    "title": "Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar",
    "section": "1.4 Computing Second Order Spatial point Process analysis",
    "text": "1.4 Computing Second Order Spatial point Process analysis\nIn this section, I will be computing the quarterly second order spatial point process analysis for each of the conflict types. I will be using the K- function to compute the analysis. This is because as seen from our KDE layers, density of points are on different scales for the different quarters and the K-function will allow us to analyse the spatial point with different scales.\n\nBattlesExplosions\n\n\n\n\n\n\n\n\n\n\n\nexp_ppp&lt;- as.ppp(st_coordinates(exp_sf), st_bbox(exp_sf))\n\nWarning: data contain duplicated points\n\nexp_ppp_com&lt;- exp_ppp[boundary_owin]\nexp_ppp_com&lt;-rescale(exp_ppp_com, 1000, 'km')\n\n\nexp_g = Gest(exp_ppp_com) \nexp_g.csr &lt;- envelope(exp_ppp_com, Gest, nsim = 99)\n\nGenerating 99 simulations of CSR  ...\n1, 2, \n[14:11 remaining, estimate finish 2024-09-22 19:00:58]\n3, \n[14:43 remaining, estimate finish 2024-09-22 19:01:40]\n4, \n[14:26 remaining, estimate finish 2024-09-22 19:01:32]\n5, \n[14:18 remaining, estimate finish 2024-09-22 19:01:33]\n6, \n[13:59 remaining, estimate finish 2024-09-22 19:01:23]\n7, \n[13:43 remaining, estimate finish 2024-09-22 19:01:16]\n8, \n[13:30 remaining, estimate finish 2024-09-22 19:01:11]\n9, \n[13:17 remaining, estimate finish 2024-09-22 19:01:07]\n10, \n[13:06 remaining, estimate finish 2024-09-22 19:01:04]\n11, \n[12:55 remaining, estimate finish 2024-09-22 19:01:01]\n12, \n[12:46 remaining, estimate finish 2024-09-22 19:01:02]\n13, \n[12:37 remaining, estimate finish 2024-09-22 19:01:02]\n14, \n[12:27 remaining, estimate finish 2024-09-22 19:01:00]\n15, \n[12:19 remaining, estimate finish 2024-09-22 19:01:01]\n16, \n[12:11 remaining, estimate finish 2024-09-22 19:01:01]\n17, \n[12:01 remaining, estimate finish 2024-09-22 19:01:00]\n18, \n[11:52 remaining, estimate finish 2024-09-22 19:01:00]\n19, \n[11:42 remaining, estimate finish 2024-09-22 19:00:59]\n20, \n[11:33 remaining, estimate finish 2024-09-22 19:00:59]\n21, \n[11:25 remaining, estimate finish 2024-09-22 19:00:59]\n22, \n[11:16 remaining, estimate finish 2024-09-22 19:00:59]\n23, \n[11:08 remaining, estimate finish 2024-09-22 19:01:00]\n24, \n[10:59 remaining, estimate finish 2024-09-22 19:01:00]\n25, \n[10:50 remaining, estimate finish 2024-09-22 19:01:00]\n26, \n[11:09 remaining, estimate finish 2024-09-22 19:01:37]\n27, \n[11:34 remaining, estimate finish 2024-09-22 19:02:23]\n28, \n[11:31 remaining, estimate finish 2024-09-22 19:02:32]\n29, \n[11:54 remaining, estimate finish 2024-09-22 19:03:18]\n30, \n[12:12 remaining, estimate finish 2024-09-22 19:03:59]\n31, \n[12:31 remaining, estimate finish 2024-09-22 19:04:42]\n32, \n[12:29 remaining, estimate finish 2024-09-22 19:04:54]\n33, \n[12:14 remaining, estimate finish 2024-09-22 19:04:49]\n34, \n[12:00 remaining, estimate finish 2024-09-22 19:04:44]\n35, \n[11:54 remaining, estimate finish 2024-09-22 19:04:53]\n36, \n[11:47 remaining, estimate finish 2024-09-22 19:04:58]\n37, \n[11:47 remaining, estimate finish 2024-09-22 19:05:17]\n38, \n[11:48 remaining, estimate finish 2024-09-22 19:05:36]\n39, \n[11:50 remaining, estimate finish 2024-09-22 19:05:58]\n40, \n[11:36 remaining, estimate finish 2024-09-22 19:05:55]\n41, \n[11:21 remaining, estimate finish 2024-09-22 19:05:49]\n42, \n[11:06 remaining, estimate finish 2024-09-22 19:05:43]\n43, \n[10:51 remaining, estimate finish 2024-09-22 19:05:37]\n44, \n[10:35 remaining, estimate finish 2024-09-22 19:05:30]\n45, \n[10:20 remaining, estimate finish 2024-09-22 19:05:24]\n46, \n[10:07 remaining, estimate finish 2024-09-22 19:05:21]\n47, \n[10:07 remaining, estimate finish 2024-09-22 19:05:43]\n48, \n[10:07 remaining, estimate finish 2024-09-22 19:06:05]\n49, \n[10:07 remaining, estimate finish 2024-09-22 19:06:28]\n50, \n[10:05 remaining, estimate finish 2024-09-22 19:06:49]\n51,  [9:51 remaining] 52,  [9:41 remaining] 53,  [9:37 remaining] 54,  [9:33 remaining] 55,  [9:23 remaining] 56,  [9:07 remaining] 57,  [8:51 remaining] 58,  [8:41 remaining] 59,  [8:35 remaining] 60,  [8:27 remaining] 61,  [8:11 remaining] 62,  [7:55 remaining] 63,  [7:40 remaining] 64,  [7:24 remaining] 65,  [7:09 remaining] 66,  [6:55 remaining] 67,  [6:40 remaining] 68,  [6:26 remaining] 69,  [6:12 remaining] 70,\n [6:01 remaining] 71,  [5:52 remaining] 72,  [5:43 remaining] 73,  [5:35 remaining] 74,  [5:21 remaining] 75,  [5:06 remaining] 76,  [4:52 remaining] 77,  [4:39 remaining] 78,  [4:25 remaining] 79,  [4:11 remaining] 80,  [3:58 remaining] 81,  [3:45 remaining] 82,  [3:31 remaining] 83,  [3:18 remaining] 84,  [3:05 remaining] 85,  [2:52 remaining] 86,  [2:39 remaining] 87,  [2:28 remaining] 88,  [2:16 remaining] 89,  [2:03 remaining] 90,\n [1:50 remaining] 91,  [1:38 remaining] 92,  [1:25 remaining] 93,  [1:13 remaining] 94,  [1:01 remaining] 95,  [49 sec remaining] 96,  [37 sec remaining] 97,  [25 sec remaining] 98,  [13 sec remaining] \n99.\n\nDone.\n\nplot(exp_g.csr)\n\n\n\n\n\n\n\n\n\nStrategic Developments\n\nstrat_dev_ppp&lt;- as.ppp(st_coordinates(strat_dev_sf), st_bbox(strat_dev_sf))\n\nWarning: data contain duplicated points\n\nstrat_dev_ppp_com&lt;- strat_dev_ppp[boundary_owin]\nstrat_dev_ppp_com&lt;-rescale(strat_dev_ppp_com, 1000, 'km')\n\n\nstrat_dev_g = Gest(strat_dev_ppp_com) \nstrat_dev_g.csr &lt;- envelope(strat_dev_ppp_com, Gest, nsim = 99)\n\nGenerating 99 simulations of CSR  ...\n1, 2, \n[35:55 remaining, estimate finish 2024-09-22 19:44:36]\n3, \n[38:36 remaining, estimate finish 2024-09-22 19:47:42]\n4, \n[38:31 remaining, estimate finish 2024-09-22 19:48:02]\n5, \n[38:42 remaining, estimate finish 2024-09-22 19:48:39]\n6, \n[38:18 remaining, estimate finish 2024-09-22 19:48:40]\n7, \n[38:07 remaining, estimate finish 2024-09-22 19:48:55]\n8, \n[37:14 remaining, estimate finish 2024-09-22 19:48:24]\n9, \n[37:07 remaining, estimate finish 2024-09-22 19:48:43]\n10, \n[36:50 remaining, estimate finish 2024-09-22 19:48:51]\n11, \n[36:34 remaining, estimate finish 2024-09-22 19:49:01]\n12, \n[36:16 remaining, estimate finish 2024-09-22 19:49:10]\n13, \n[35:18 remaining, estimate finish 2024-09-22 19:48:32]\n14, \n[33:10 remaining, estimate finish 2024-09-22 19:46:33]\n15, \n[31:22 remaining, estimate finish 2024-09-22 19:44:54]\n16, \n[29:48 remaining, estimate finish 2024-09-22 19:43:29]\n17, \n[28:24 remaining, estimate finish 2024-09-22 19:42:15]\n18, \n[27:06 remaining, estimate finish 2024-09-22 19:41:06]\n19, \n[25:56 remaining, estimate finish 2024-09-22 19:40:04]\n20, \n[24:52 remaining, estimate finish 2024-09-22 19:39:10]\n21, \n[23:55 remaining, estimate finish 2024-09-22 19:38:22]\n22, \n[23:02 remaining, estimate finish 2024-09-22 19:37:37]\n23, \n[22:12 remaining, estimate finish 2024-09-22 19:36:56]\n24, \n[21:27 remaining, estimate finish 2024-09-22 19:36:19]\n25, \n[20:43 remaining, estimate finish 2024-09-22 19:35:45]\n26, \n[20:03 remaining, estimate finish 2024-09-22 19:35:13]\n27, \n[19:26 remaining, estimate finish 2024-09-22 19:34:45]\n28, \n[18:51 remaining, estimate finish 2024-09-22 19:34:19]\n29, \n[18:17 remaining, estimate finish 2024-09-22 19:33:54]\n30, \n[17:44 remaining, estimate finish 2024-09-22 19:33:30]\n31, \n[17:14 remaining, estimate finish 2024-09-22 19:33:08]\n32, \n[16:45 remaining, estimate finish 2024-09-22 19:32:49]\n33, \n[16:18 remaining, estimate finish 2024-09-22 19:32:30]\n34, \n[15:53 remaining, estimate finish 2024-09-22 19:32:15]\n35, \n[15:31 remaining, estimate finish 2024-09-22 19:32:03]\n36, \n[15:08 remaining, estimate finish 2024-09-22 19:31:51]\n37, \n[14:45 remaining, estimate finish 2024-09-22 19:31:37]\n38, \n[14:23 remaining, estimate finish 2024-09-22 19:31:24]\n39, \n[14:25 remaining, estimate finish 2024-09-22 19:31:51]\n40, \n[14:27 remaining, estimate finish 2024-09-22 19:32:19]\n41, \n[14:24 remaining, estimate finish 2024-09-22 19:32:39]\n42, \n[14:23 remaining, estimate finish 2024-09-22 19:33:01]\n43, \n[14:12 remaining, estimate finish 2024-09-22 19:33:09]\n44, \n[14:00 remaining, estimate finish 2024-09-22 19:33:15]\n45, \n[13:57 remaining, estimate finish 2024-09-22 19:33:37]\n46, \n[13:53 remaining, estimate finish 2024-09-22 19:33:58]\n47, \n[13:44 remaining, estimate finish 2024-09-22 19:34:11]\n48, \n[13:21 remaining, estimate finish 2024-09-22 19:33:57]\n49, \n[13:00 remaining, estimate finish 2024-09-22 19:33:47]\n50, \n[12:55 remaining, estimate finish 2024-09-22 19:34:07]\n51, \n[12:46 remaining, estimate finish 2024-09-22 19:34:22]\n52, \n[12:37 remaining, estimate finish 2024-09-22 19:34:38]\n53, \n[12:28 remaining, estimate finish 2024-09-22 19:34:52]\n54, \n[12:13 remaining, estimate finish 2024-09-22 19:34:55]\n55, \n[11:51 remaining, estimate finish 2024-09-22 19:34:42]\n56, \n[11:29 remaining, estimate finish 2024-09-22 19:34:29]\n57, \n[11:08 remaining, estimate finish 2024-09-22 19:34:16]\n58, \n[10:47 remaining, estimate finish 2024-09-22 19:34:04]\n59, \n[10:26 remaining, estimate finish 2024-09-22 19:33:53]\n60, \n[10:06 remaining, estimate finish 2024-09-22 19:33:41]\n61,  [9:46 remaining] 62,  [9:32 remaining] 63,  [9:22 remaining] 64,  [9:06 remaining] 65,  [8:54 remaining] 66,  [8:44 remaining] 67,  [8:32 remaining] 68,  [8:18 remaining] 69,  [7:59 remaining] 70,  [7:40 remaining] 71,  [7:21 remaining] 72,  [7:09 remaining] 73,  [6:56 remaining] 74,  [6:43 remaining] 75,  [6:29 remaining] 76,  [6:16 remaining] 77,  [6:02 remaining] 78,  [5:48 remaining] 79,  [5:29 remaining] 80,\n [5:11 remaining] 81,  [4:53 remaining] 82,  [4:35 remaining] 83,  [4:17 remaining] 84,  [4:00 remaining] 85,  [3:43 remaining] 86,  [3:28 remaining] 87,  [3:13 remaining] 88,  [2:56 remaining] 89,  [2:40 remaining] 90,  [2:25 remaining] 91,  [2:09 remaining] 92,  [1:52 remaining] 93,  [1:35 remaining] 94,  [1:19 remaining] 95,  [1:03 remaining] 96,  [47 sec remaining] 97,  [31 sec remaining] 98,  [16 sec remaining] \n99.\n\nDone.\n\nplot(strat_dev_g.csr)\n\n\n\n\n\n\n\n\n\n\nCivilian Violence\n\ncivViolence_ppp&lt;- as.ppp(st_coordinates(civViolence_sf), st_bbox(civViolence_sf))\n\nWarning: data contain duplicated points\n\ncivViolence_ppp_com&lt;- civViolence_ppp[boundary_owin]\ncivViolence_ppp_com&lt;-rescale(civViolence_ppp_com, 1000, 'km')\n\n\ncivViolence_g.csr &lt;- envelope(civViolence_ppp_com, Gest, nsim = 99)\n\nGenerating 99 simulations of CSR  ...\n1, 2,  [7:54 remaining] 3,\n [7:52 remaining] 4,  [7:39 remaining] 5,  [7:34 remaining] 6,\n [7:21 remaining] 7,  [7:16 remaining] 8,  [7:55 remaining] 9,\n [7:58 remaining] 10,  [8:45 remaining] 11,  [9:46 remaining] 12,\n\n[10:28 remaining, estimate finish 2024-09-22 19:45:33]\n13, \n[10:48 remaining, estimate finish 2024-09-22 19:46:05]\n14, \n[11:21 remaining, estimate finish 2024-09-22 19:46:51]\n15, \n[10:52 remaining, estimate finish 2024-09-22 19:46:27]\n16, \n[10:26 remaining, estimate finish 2024-09-22 19:46:06]\n17, \n[10:04 remaining, estimate finish 2024-09-22 19:45:49]\n18,  [9:46 remaining] 19,  [9:27 remaining] 20,\n [9:10 remaining] 21,  [8:56 remaining] 22,  [8:42 remaining] 23,\n [8:45 remaining] 24,  [9:00 remaining] 25,  [9:08 remaining] 26,\n [8:52 remaining] 27,  [8:58 remaining] 28,  [9:06 remaining] 29,\n [9:09 remaining] 30,  [9:13 remaining] 31,  [9:16 remaining] 32,\n [9:18 remaining] 33,  [9:21 remaining] 34,  [9:21 remaining] 35,\n [9:12 remaining] 36,  [8:56 remaining] 37,  [8:41 remaining] 38,\n [8:27 remaining] 39,  [8:13 remaining] 40,  [8:00 remaining] 41,\n [7:47 remaining] 42,  [7:34 remaining] 43,  [7:22 remaining] 44,\n [7:10 remaining] 45,  [6:58 remaining] 46,  [6:47 remaining] 47,\n [6:42 remaining] 48,  [6:41 remaining] 49,  [6:39 remaining] 50,\n [6:36 remaining] 51,  [6:33 remaining] 52,  [6:30 remaining] 53,\n [6:27 remaining] 54,  [6:23 remaining] 55,  [6:18 remaining] 56,\n [6:13 remaining] 57,  [6:08 remaining] 58,  [6:03 remaining] 59,\n [5:57 remaining] 60,  [5:51 remaining] 61,  [5:45 remaining] 62,\n [5:38 remaining] 63,  [5:32 remaining] 64,  [5:25 remaining] 65,\n [5:17 remaining] 66,  [5:10 remaining] 67,  [5:03 remaining] 68,\n [4:55 remaining] 69,  [4:43 remaining] 70,  [4:32 remaining] 71,\n [4:21 remaining] 72,  [4:10 remaining] 73,  [3:59 remaining] 74,\n [3:48 remaining] 75,  [3:37 remaining] 76,  [3:27 remaining] 77,\n [3:17 remaining] 78,  [3:06 remaining] 79,  [2:56 remaining] 80,\n [2:47 remaining] 81,  [2:37 remaining] 82,  [2:27 remaining] 83,\n [2:18 remaining] 84,  [2:08 remaining] 85,  [1:59 remaining] 86,\n [1:50 remaining] 87,  [1:41 remaining] 88,  [1:32 remaining] 89,\n [1:24 remaining] 90,  [1:15 remaining] 91,  [1:06 remaining] 92,\n [58 sec remaining] 93,  [50 sec remaining] 94,  [42 sec remaining] 95,\n [33 sec remaining] 96,  [25 sec remaining] 97,  [17 sec remaining] 98,\n [9 sec remaining] \n99.\n\nDone.\n\nplot(civViolence_g.csr)\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the plots above, we can further confirm that there is significant clustering of the spatial points for all four conflict types. This is because the black line (the observed G-function of our data) is well above the red dashed line (which indicates G function under Complete Spatial Randomness). This means that the pattern observed in the dataset differs significantly from the pattern of randomly spaced points, indicating the presence of clusters."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#computing-spatio-temporal-kde-layers",
    "href": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#computing-spatio-temporal-kde-layers",
    "title": "Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar",
    "section": "1.5 Computing Spatio-Temporal KDE Layers",
    "text": "1.5 Computing Spatio-Temporal KDE Layers\n\nBattlesExplosionsStrategic DevelopmentsViolence Against Civilians\n\n\n\n2021202220232024\n\n\n\nbattle_st_21&lt;- quart_geo_bat %&gt;% \n  filter(year==\"2021\") %&gt;% \n  select(2,3)\n\nbattle_21_ppp&lt;- as.ppp(battle_st_21, coordinates=battle_st_21)\nbattle_21_owin&lt;- battle_21_ppp[boundary_owin]\n\nbattles_st_21_kde&lt;- spattemp.density(battle_21_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(battle_st_21$num_quarters)\n\n\nfor (i in tims2){\n  plot(battles_st_21_kde, i,\n  main = paste('STKDE of Q', i, \" 2021\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbattle_st_22&lt;- quart_geo_bat %&gt;% \n  filter(year==\"2022\") %&gt;% \n  select(2,3)\n\nbattle_22_ppp&lt;- as.ppp(battle_st_22, coordinates=battle_st_22)\nbattle_22_owin&lt;- battle_22_ppp[boundary_owin]\n\nbattles_st_22_kde&lt;- spattemp.density(battle_22_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\nfor (i in tims2){\n  plot(battles_st_22_kde, i,\n  main = paste('STKDE of Q', i, \" 2022\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbattle_st_23&lt;- quart_geo_bat %&gt;% \n  filter(year==\"2023\") %&gt;% \n  select(2,3)\n\nbattle_23_ppp&lt;- as.ppp(battle_st_23, coordinates=battle_st_23)\nbattle_23_owin&lt;- battle_23_ppp[boundary_owin]\n\nbattles_st_23_kde&lt;- spattemp.density(battle_23_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\nfor (i in tims2){\n  plot(battles_st_23_kde, i,\n  main = paste('STKDE of Q', i, \" 2023\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbattle_st_24&lt;- quart_geo_bat %&gt;% \n  filter(year==\"2024\") %&gt;% \n  select(2,3)\n\nbattle_24_ppp&lt;- as.ppp(battle_st_24, coordinates=battle_st_24)\nbattle_24_owin&lt;- battle_24_ppp[boundary_owin]\n\nbattles_st_24_kde&lt;- spattemp.density(battle_24_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(battle_st_24$num_quarters)\n\nfor (i in tims2){\n  plot(battles_st_24_kde, i,\n  main = paste('STKDE of Q', i, \" 2024\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2021202220232024\n\n\n\nExp_st_21&lt;- quart_geo_exp %&gt;% \n  filter(year==\"2021\") %&gt;% \n  select(2,3)\n\nExp_21_ppp&lt;- as.ppp(Exp_st_21, coordinates=Exp_st_21)\nExp_21_owin&lt;- Exp_21_ppp[boundary_owin]\n\nExp_st_21_kde&lt;- spattemp.density(Exp_21_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(Exp_st_21$num_quarters)\n\n\nfor (i in tims2){\n  plot(Exp_st_21_kde, i,\n  main = paste('STKDE of Q', i, \" 2021\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExp_st_22&lt;- quart_geo_exp %&gt;% \n  filter(year==\"2022\") %&gt;% \n  select(2,3)\n\nExp_22_ppp&lt;- as.ppp(Exp_st_22, coordinates=Exp_st_22)\nExp_22_owin&lt;- Exp_22_ppp[boundary_owin]\n\nExp_st_22_kde&lt;- spattemp.density(Exp_22_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(Exp_st_22$num_quarters)\n\n\nfor (i in tims2){\n  plot(Exp_st_22_kde, i,\n  main = paste('STKDE of Q', i, \" 2022\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExp_st_23&lt;- quart_geo_exp %&gt;% \n  filter(year==\"2023\") %&gt;% \n  select(2,3)\n\nExp_23_ppp&lt;- as.ppp(Exp_st_23, coordinates=Exp_st_23)\nExp_23_owin&lt;- Exp_23_ppp[boundary_owin]\n\nExp_st_23_kde&lt;- spattemp.density(Exp_23_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(Exp_st_23$num_quarters)\n\n\nfor (i in tims2){\n  plot(Exp_st_23_kde, i,\n  main = paste('STKDE of Q', i, \" 2023\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExp_st_24&lt;- quart_geo_exp %&gt;% \n  filter(year==\"2024\") %&gt;% \n  select(2,3)\n\nExp_24_ppp&lt;- as.ppp(Exp_st_24, coordinates=Exp_st_24)\nExp_24_owin&lt;- Exp_24_ppp[boundary_owin]\n\nExp_st_24_kde&lt;- spattemp.density(Exp_24_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(Exp_st_24$num_quarters)\n\nfor (i in tims2){\n  plot(Exp_st_24_kde, i,\n  main = paste('STKDE of Q', i, \" 2024\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2021202220232024\n\n\n\nstrat_dev_st_21&lt;- quart_geo_strat %&gt;% \n  filter(year==\"2021\") %&gt;% \n  select(2,3)\n\nstrat_dev_21_ppp&lt;- as.ppp(strat_dev_st_21, coordinates=strat_dev_st_21)\nstrat_dev_21_owin&lt;- strat_dev_21_ppp[boundary_owin]\n\nstrat_dev_st_21_kde&lt;- spattemp.density(strat_dev_21_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(strat_dev_st_21$num_quarters)\n\n\nfor (i in tims2){\n  plot(strat_dev_st_21_kde, i,\n  main = paste('STKDE of Q', i, \" 2021\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstrat_dev_st_22&lt;- quart_geo_strat %&gt;% \n  filter(year==\"2022\") %&gt;% \n  select(2,3)\n\nstrat_dev_22_ppp&lt;- as.ppp(strat_dev_st_22, coordinates=strat_dev_st_22)\nstrat_dev_22_owin&lt;- strat_dev_22_ppp[boundary_owin]\n\nstrat_dev_st_22_kde&lt;- spattemp.density(strat_dev_22_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(strat_dev_st_22$num_quarters)\n\n\nfor (i in tims2){\n  plot(strat_dev_st_22_kde, i,\n  main = paste('STKDE of Q', i, \" 2022\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstrat_dev_st_23&lt;- quart_geo_strat %&gt;% \n  filter(year==\"2023\") %&gt;% \n  select(2,3)\n\nstrat_dev_23_ppp&lt;- as.ppp(strat_dev_st_23, coordinates=strat_dev_st_23)\nstrat_dev_23_owin&lt;- strat_dev_23_ppp[boundary_owin]\n\nstrat_dev_st_23_kde&lt;- spattemp.density(strat_dev_23_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(strat_dev_st_23$num_quarters)\n\n\nfor (i in tims2){\n  plot(strat_dev_st_23_kde, i,\n  main = paste('STKDE of Q', i, \" 2023\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstrat_dev_st_24&lt;- quart_geo_strat %&gt;% \n  filter(year==\"2024\") %&gt;% \n  select(2,3)\n\nstrat_dev_24_ppp&lt;- as.ppp(strat_dev_st_24, coordinates=strat_dev_st_24)\nstrat_dev_24_owin&lt;- strat_dev_24_ppp[boundary_owin]\n\nstrat_dev_st_24_kde&lt;- spattemp.density(strat_dev_24_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(strat_dev_st_24$num_quarters)\n\nfor (i in tims2){\n  plot(strat_dev_st_24_kde, i,\n  main = paste('STKDE of Q', i, \" 2024\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2021202220232024\n\n\n\nciv_st_21&lt;- quart_geo_civ %&gt;% \n  filter(year==\"2021\") %&gt;% \n  select(2,3)\n\nciv_21_ppp&lt;- as.ppp(civ_st_21, coordinates=civ_st_21)\nciv_21_owin&lt;- civ_21_ppp[boundary_owin]\n\nciv_st_21_kde&lt;- spattemp.density(civ_21_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(civ_st_21$num_quarters)\n\n\nfor (i in tims2){\n  plot(civ_st_21_kde, i,\n  main = paste('STKDE of Q', i, \" 2021\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nciv_st_22&lt;- quart_geo_civ %&gt;% \n  filter(year==\"2022\") %&gt;% \n  select(2,3)\nciv_22_ppp&lt;- as.ppp(civ_st_22, coordinates=civ_st_22)\nciv_22_owin&lt;- civ_22_ppp[boundary_owin]\n\nciv_st_22_kde&lt;- spattemp.density(civ_22_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(civ_st_22$num_quarters)\n\n\nfor (i in tims2){\n  plot(civ_st_22_kde, i,\n  main = paste('STKDE of Q', i, \" 2022\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nciv_st_23&lt;- quart_geo_civ %&gt;% \n  filter(year==\"2023\") %&gt;% \n  select(2,3)\n\nciv_23_ppp&lt;- as.ppp(civ_st_23, coordinates=civ_st_23)\nciv_23_owin&lt;- civ_23_ppp[boundary_owin]\n\nciv_st_23_kde&lt;- spattemp.density(civ_23_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(civ_st_23$num_quarters)\n\n\nfor (i in tims2){\n  plot(civ_st_23_kde, i,\n  main = paste('STKDE of Q', i, \" 2023\", sep=\"\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nciv_st_24&lt;- quart_geo_civ %&gt;% \n  filter(year==\"2024\") %&gt;% \n  select(2,3)\n\nciv_24_ppp&lt;- as.ppp(civ_st_24, coordinates=civ_st_24)\nciv_24_owin&lt;- civ_24_ppp[boundary_owin]\n\nciv_st_24_kde&lt;- spattemp.density(civ_24_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\ntims2&lt;-unique(civ_st_24$num_quarters)\n\n\nfor (i in tims2){\n  plot(civ_st_24_kde, i,\n  main = paste('STKDE of Q', i, \" 2024\", sep=\"\"))\n}"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#second-order-spatio-temporal-kde",
    "href": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#second-order-spatio-temporal-kde",
    "title": "Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar",
    "section": "1.6 Second-Order Spatio-Temporal KDE",
    "text": "1.6 Second-Order Spatio-Temporal KDE\nIn this section, I will be computing the Second Order Spatio Temporal KDE Layers.\n\nBattlesExplosionsStrategic DevelopmentsViolence Against Civilians\n\n\n\nbattles_sost&lt;- quart_geo_bat %&gt;% \n  select(2,3)\nbattles_sost_ppp&lt;- as.ppp(battles_sost, coordinates= battles_sost)\nbattles_sost_owin&lt;- battles_sost_ppp[boundary_owin]\nbattles_sost.csr &lt;- envelope(battles_sost_owin, Gest, nsim = 99)\n\nGenerating 99 simulations of CSR  ...\n1, 2, \n[14:26 remaining, estimate finish 2024-09-22 20:05:10]\n3, \n[18:01 remaining, estimate finish 2024-09-22 20:08:58]\n4, \n[21:35 remaining, estimate finish 2024-09-22 20:12:51]\n5, \n[19:57 remaining, estimate finish 2024-09-22 20:11:23]\n6, \n[18:49 remaining, estimate finish 2024-09-22 20:10:25]\n7, \n[18:08 remaining, estimate finish 2024-09-22 20:09:54]\n8, \n[17:37 remaining, estimate finish 2024-09-22 20:09:33]\n9, \n[17:06 remaining, estimate finish 2024-09-22 20:09:12]\n10, \n[16:39 remaining, estimate finish 2024-09-22 20:08:55]\n11, \n[16:21 remaining, estimate finish 2024-09-22 20:08:47]\n12, \n[15:58 remaining, estimate finish 2024-09-22 20:08:34]\n13, \n[15:43 remaining, estimate finish 2024-09-22 20:08:29]\n14, \n[15:27 remaining, estimate finish 2024-09-22 20:08:24]\n15, \n[15:12 remaining, estimate finish 2024-09-22 20:08:19]\n16, \n[16:06 remaining, estimate finish 2024-09-22 20:09:35]\n17, \n[17:13 remaining, estimate finish 2024-09-22 20:11:09]\n18, \n[17:59 remaining, estimate finish 2024-09-22 20:12:20]\n19, \n[18:48 remaining, estimate finish 2024-09-22 20:13:37]\n20, \n[19:21 remaining, estimate finish 2024-09-22 20:14:35]\n21, \n[19:51 remaining, estimate finish 2024-09-22 20:15:31]\n22, \n[20:05 remaining, estimate finish 2024-09-22 20:16:09]\n23, \n[20:23 remaining, estimate finish 2024-09-22 20:16:51]\n24, \n[20:37 remaining, estimate finish 2024-09-22 20:17:31]\n25, \n[20:45 remaining, estimate finish 2024-09-22 20:18:03]\n26, \n[20:55 remaining, estimate finish 2024-09-22 20:18:39]\n27, \n[20:58 remaining, estimate finish 2024-09-22 20:19:08]\n28, \n[20:49 remaining, estimate finish 2024-09-22 20:19:19]\n29, \n[20:09 remaining, estimate finish 2024-09-22 20:18:48]\n30, \n[19:43 remaining, estimate finish 2024-09-22 20:18:35]\n31, \n[19:43 remaining, estimate finish 2024-09-22 20:19:00]\n32, \n[19:40 remaining, estimate finish 2024-09-22 20:19:20]\n33, \n[19:33 remaining, estimate finish 2024-09-22 20:19:37]\n34, \n[19:28 remaining, estimate finish 2024-09-22 20:19:56]\n35, \n[19:23 remaining, estimate finish 2024-09-22 20:20:16]\n36, \n[19:12 remaining, estimate finish 2024-09-22 20:20:27]\n37, \n[18:58 remaining, estimate finish 2024-09-22 20:20:34]\n38, \n[18:24 remaining, estimate finish 2024-09-22 20:20:08]\n39, \n[17:58 remaining, estimate finish 2024-09-22 20:19:56]\n40, \n[17:50 remaining, estimate finish 2024-09-22 20:20:12]\n41, \n[17:31 remaining, estimate finish 2024-09-22 20:20:10]\n42, \n[16:59 remaining, estimate finish 2024-09-22 20:19:47]\n43, \n[16:29 remaining, estimate finish 2024-09-22 20:19:26]\n44, \n[16:01 remaining, estimate finish 2024-09-22 20:19:07]\n45, \n[15:33 remaining, estimate finish 2024-09-22 20:18:47]\n46, \n[15:05 remaining, estimate finish 2024-09-22 20:18:29]\n47, \n[14:39 remaining, estimate finish 2024-09-22 20:18:12]\n48, \n[14:14 remaining, estimate finish 2024-09-22 20:17:55]\n49, \n[13:48 remaining, estimate finish 2024-09-22 20:17:37]\n50, \n[13:23 remaining, estimate finish 2024-09-22 20:17:22]\n51, \n[12:59 remaining, estimate finish 2024-09-22 20:17:06]\n52, \n[12:36 remaining, estimate finish 2024-09-22 20:16:51]\n53, \n[12:13 remaining, estimate finish 2024-09-22 20:16:36]\n54, \n[11:50 remaining, estimate finish 2024-09-22 20:16:22]\n55, \n[11:28 remaining, estimate finish 2024-09-22 20:16:08]\n56, \n[11:07 remaining, estimate finish 2024-09-22 20:15:56]\n57, \n[10:47 remaining, estimate finish 2024-09-22 20:15:45]\n58, \n[10:28 remaining, estimate finish 2024-09-22 20:15:36]\n59, \n[10:09 remaining, estimate finish 2024-09-22 20:15:26]\n60,  [9:50 remaining] 61,  [9:31 remaining] 62,  [9:12 remaining] 63,  [8:54 remaining] 64,  [8:36 remaining] 65,  [8:19 remaining] 66,  [8:01 remaining] 67,  [7:44 remaining] 68,  [7:26 remaining] 69,  [7:09 remaining] 70,  [6:53 remaining] 71,  [6:36 remaining] 72,  [6:20 remaining] 73,  [6:04 remaining] 74,  [5:48 remaining] 75,  [5:32 remaining] 76,  [5:17 remaining] 77,  [5:01 remaining] 78,  [4:46 remaining] 79,\n [4:31 remaining] 80,  [4:16 remaining] 81,  [4:02 remaining] 82,  [3:48 remaining] 83,  [3:33 remaining] 84,  [3:19 remaining] 85,  [3:05 remaining] 86,  [2:51 remaining] 87,  [2:38 remaining] 88,  [2:24 remaining] 89,  [2:11 remaining] 90,  [1:57 remaining] 91,  [1:44 remaining] 92,  [1:30 remaining] 93,  [1:17 remaining] 94,  [1:04 remaining] 95,  [51 sec remaining] 96,  [38 sec remaining] 97,  [25 sec remaining] 98,  [13 sec remaining] \n99.\n\nDone.\n\nplot(battles_sost.csr)\n\n\n\n\n\n\n\n\n\n\n\nexp_sost&lt;- quart_geo_exp %&gt;% \n  select(2,3)\nexp_sost_ppp&lt;- as.ppp(exp_sost, coordinates= exp_sost)\nexp_sost_owin&lt;- exp_sost_ppp[boundary_owin]\nexp_sost.csr &lt;- envelope(exp_sost_owin, Gest, nsim = 99)\n\nGenerating 99 simulations of CSR  ...\n1, 2, \n[13:57 remaining, estimate finish 2024-09-22 20:25:37]\n3, \n[14:02 remaining, estimate finish 2024-09-22 20:25:52]\n4, \n[14:14 remaining, estimate finish 2024-09-22 20:26:12]\n5, \n[14:03 remaining, estimate finish 2024-09-22 20:26:11]\n6, \n[13:48 remaining, estimate finish 2024-09-22 20:26:05]\n7, \n[13:44 remaining, estimate finish 2024-09-22 20:26:09]\n8, \n[13:39 remaining, estimate finish 2024-09-22 20:26:14]\n9, \n[13:39 remaining, estimate finish 2024-09-22 20:26:24]\n10, \n[13:37 remaining, estimate finish 2024-09-22 20:26:31]\n11, \n[13:41 remaining, estimate finish 2024-09-22 20:26:46]\n12, \n[13:43 remaining, estimate finish 2024-09-22 20:26:59]\n13, \n[13:33 remaining, estimate finish 2024-09-22 20:26:59]\n14, \n[13:27 remaining, estimate finish 2024-09-22 20:27:02]\n15, \n[13:16 remaining, estimate finish 2024-09-22 20:27:00]\n16, \n[13:07 remaining, estimate finish 2024-09-22 20:27:01]\n17, \n[12:58 remaining, estimate finish 2024-09-22 20:27:02]\n18, \n[12:48 remaining, estimate finish 2024-09-22 20:27:01]\n19, \n[12:35 remaining, estimate finish 2024-09-22 20:26:57]\n20, \n[12:25 remaining, estimate finish 2024-09-22 20:26:56]\n21, \n[12:14 remaining, estimate finish 2024-09-22 20:26:54]\n22, \n[12:06 remaining, estimate finish 2024-09-22 20:26:56]\n23, \n[11:55 remaining, estimate finish 2024-09-22 20:26:54]\n24, \n[11:46 remaining, estimate finish 2024-09-22 20:26:54]\n25, \n[11:36 remaining, estimate finish 2024-09-22 20:26:53]\n26, \n[11:27 remaining, estimate finish 2024-09-22 20:26:55]\n27, \n[11:21 remaining, estimate finish 2024-09-22 20:26:58]\n28, \n[11:13 remaining, estimate finish 2024-09-22 20:27:01]\n29, \n[11:06 remaining, estimate finish 2024-09-22 20:27:04]\n30, \n[10:58 remaining, estimate finish 2024-09-22 20:27:06]\n31, \n[10:50 remaining, estimate finish 2024-09-22 20:27:09]\n32, \n[10:40 remaining, estimate finish 2024-09-22 20:27:08]\n33, \n[10:30 remaining, estimate finish 2024-09-22 20:27:07]\n34, \n[10:21 remaining, estimate finish 2024-09-22 20:27:07]\n35, \n[10:11 remaining, estimate finish 2024-09-22 20:27:07]\n36, \n[10:30 remaining, estimate finish 2024-09-22 20:27:52]\n37, \n[10:46 remaining, estimate finish 2024-09-22 20:28:33]\n38, \n[10:37 remaining, estimate finish 2024-09-22 20:28:35]\n39, \n[10:34 remaining, estimate finish 2024-09-22 20:28:48]\n40, \n[10:21 remaining, estimate finish 2024-09-22 20:28:44]\n41, \n[10:08 remaining, estimate finish 2024-09-22 20:28:39]\n42,  [9:55 remaining] 43,  [9:55 remaining] 44, \n[10:01 remaining, estimate finish 2024-09-22 20:29:23]\n45, \n[10:04 remaining, estimate finish 2024-09-22 20:29:48]\n46,  [9:54 remaining] 47,  [9:58 remaining] 48,  [10:00 remaining] 49, \n[10:02 remaining, estimate finish 2024-09-22 20:31:11]\n50,  [9:49 remaining] 51,  [9:33 remaining] 52,  [9:21 remaining] 53,  [9:21 remaining] 54,  [9:18 remaining] 55,  [9:15 remaining] 56,  [9:10 remaining] 57,  [9:04 remaining] 58,  [8:58 remaining] 59,  [8:51 remaining] 60,  [8:44 remaining] 61,  [8:37 remaining] 62,  [8:29 remaining] 63,  [8:20 remaining] 64,  [8:11 remaining] 65,  [8:02 remaining] 66,  [7:52 remaining] 67,  [7:41 remaining] 68,  [7:29 remaining] 69,\n [7:12 remaining] 70,  [6:59 remaining] 71,  [6:49 remaining] 72,  [6:38 remaining] 73,  [6:22 remaining] 74,  [6:05 remaining] 75,  [5:48 remaining] 76,  [5:32 remaining] 77,  [5:16 remaining] 78,  [5:00 remaining] 79,  [4:44 remaining] 80,  [4:28 remaining] 81,  [4:13 remaining] 82,  [3:58 remaining] 83,  [3:43 remaining] 84,  [3:28 remaining] 85,  [3:13 remaining] 86,  [2:58 remaining] 87,  [2:44 remaining] 88,  [2:29 remaining] 89,\n [2:15 remaining] 90,  [2:01 remaining] 91,  [1:47 remaining] 92,  [1:34 remaining] 93,  [1:20 remaining] 94,  [1:06 remaining] 95,  [53 sec remaining] 96,  [39 sec remaining] 97,  [26 sec remaining] 98,  [13 sec remaining] \n99.\n\nDone.\n\nplot(exp_sost.csr)\n\n\n\n\n\n\n\n\n\n\n\nstrat_dev_sost&lt;- quart_geo_strat %&gt;% \n  select(2,3)\nstrat_dev_sost_ppp&lt;- as.ppp(strat_dev_sost, coordinates= strat_dev_sost)\nstrat_dev_sost_owin&lt;- strat_dev_sost_ppp[boundary_owin]\nstrat_dev_sost.csr &lt;- envelope(strat_dev_sost_owin, Gest, nsim = 99)\n\nGenerating 99 simulations of CSR  ...\n1, 2, \n[14:24 remaining, estimate finish 2024-09-22 20:47:41]\n3, \n[13:53 remaining, estimate finish 2024-09-22 20:47:18]\n4, \n[13:46 remaining, estimate finish 2024-09-22 20:47:20]\n5, \n[13:33 remaining, estimate finish 2024-09-22 20:47:15]\n6, \n[13:26 remaining, estimate finish 2024-09-22 20:47:17]\n7, \n[13:13 remaining, estimate finish 2024-09-22 20:47:12]\n8, \n[13:04 remaining, estimate finish 2024-09-22 20:47:12]\n9, \n[12:53 remaining, estimate finish 2024-09-22 20:47:10]\n10, \n[12:45 remaining, estimate finish 2024-09-22 20:47:10]\n11, \n[12:36 remaining, estimate finish 2024-09-22 20:47:10]\n12, \n[12:30 remaining, estimate finish 2024-09-22 20:47:13]\n13, \n[13:42 remaining, estimate finish 2024-09-22 20:48:45]\n14, \n[15:12 remaining, estimate finish 2024-09-22 20:50:39]\n15, \n[16:15 remaining, estimate finish 2024-09-22 20:52:05]\n16, \n[17:06 remaining, estimate finish 2024-09-22 20:53:19]\n17, \n[17:48 remaining, estimate finish 2024-09-22 20:54:24]\n18, \n[18:20 remaining, estimate finish 2024-09-22 20:55:18]\n19, \n[18:50 remaining, estimate finish 2024-09-22 20:56:12]\n20, \n[19:22 remaining, estimate finish 2024-09-22 20:57:09]\n21, \n[19:50 remaining, estimate finish 2024-09-22 20:58:02]\n22, \n[20:09 remaining, estimate finish 2024-09-22 20:58:46]\n23, \n[19:40 remaining, estimate finish 2024-09-22 20:58:29]\n24, \n[19:52 remaining, estimate finish 2024-09-22 20:59:05]\n25, \n[20:00 remaining, estimate finish 2024-09-22 20:59:37]\n26, \n[20:07 remaining, estimate finish 2024-09-22 21:00:08]\n27, \n[20:09 remaining, estimate finish 2024-09-22 21:00:33]\n28, \n[20:01 remaining, estimate finish 2024-09-22 21:00:46]\n29, \n[19:36 remaining, estimate finish 2024-09-22 21:00:34]\n30, \n[19:34 remaining, estimate finish 2024-09-22 21:00:54]\n31, \n[19:28 remaining, estimate finish 2024-09-22 21:01:10]\n32, \n[19:27 remaining, estimate finish 2024-09-22 21:01:35]\n33, \n[19:17 remaining, estimate finish 2024-09-22 21:01:46]\n34, \n[18:42 remaining, estimate finish 2024-09-22 21:01:20]\n35, \n[18:09 remaining, estimate finish 2024-09-22 21:00:56]\n36, \n[17:38 remaining, estimate finish 2024-09-22 21:00:33]\n37, \n[17:07 remaining, estimate finish 2024-09-22 21:00:11]\n38, \n[16:37 remaining, estimate finish 2024-09-22 20:59:50]\n39, \n[16:08 remaining, estimate finish 2024-09-22 20:59:30]\n40, \n[15:41 remaining, estimate finish 2024-09-22 20:59:11]\n41, \n[15:15 remaining, estimate finish 2024-09-22 20:58:53]\n42, \n[14:50 remaining, estimate finish 2024-09-22 20:58:37]\n43, \n[14:37 remaining, estimate finish 2024-09-22 20:58:43]\n44, \n[14:31 remaining, estimate finish 2024-09-22 20:59:00]\n45, \n[14:26 remaining, estimate finish 2024-09-22 20:59:19]\n46, \n[14:14 remaining, estimate finish 2024-09-22 20:59:27]\n47, \n[13:49 remaining, estimate finish 2024-09-22 20:59:10]\n48, \n[13:25 remaining, estimate finish 2024-09-22 20:58:55]\n49, \n[13:03 remaining, estimate finish 2024-09-22 20:58:42]\n50, \n[12:55 remaining, estimate finish 2024-09-22 20:58:57]\n51, \n[12:45 remaining, estimate finish 2024-09-22 20:59:09]\n52, \n[12:35 remaining, estimate finish 2024-09-22 20:59:21]\n53, \n[12:25 remaining, estimate finish 2024-09-22 20:59:36]\n54, \n[12:16 remaining, estimate finish 2024-09-22 20:59:50]\n55, \n[12:05 remaining, estimate finish 2024-09-22 21:00:01]\n56, \n[11:53 remaining, estimate finish 2024-09-22 21:00:13]\n57, \n[11:41 remaining, estimate finish 2024-09-22 21:00:23]\n58, \n[11:28 remaining, estimate finish 2024-09-22 21:00:32]\n59, \n[11:15 remaining, estimate finish 2024-09-22 21:00:41]\n60, \n[11:03 remaining, estimate finish 2024-09-22 21:00:53]\n61, \n[10:49 remaining, estimate finish 2024-09-22 21:01:01]\n62, \n[10:35 remaining, estimate finish 2024-09-22 21:01:10]\n63, \n[10:16 remaining, estimate finish 2024-09-22 21:01:05]\n64,  [9:55 remaining] 65,  [9:34 remaining] 66,  [9:13 remaining] 67,  [8:52 remaining] 68,  [8:32 remaining] 69,  [8:12 remaining] 70,  [7:52 remaining] 71,  [7:33 remaining] 72,  [7:14 remaining] 73,  [6:55 remaining] 74,  [6:36 remaining] 75,  [6:18 remaining] 76,  [6:00 remaining] 77,  [5:42 remaining] 78,  [5:25 remaining] 79,  [5:08 remaining] 80,  [4:51 remaining] 81,  [4:34 remaining] 82,  [4:17 remaining] 83,\n [4:01 remaining] 84,  [3:45 remaining] 85,  [3:29 remaining] 86,  [3:13 remaining] 87,  [2:57 remaining] 88,  [2:42 remaining] 89,  [2:26 remaining] 90,  [2:11 remaining] 91,  [1:56 remaining] 92,  [1:41 remaining] 93,  [1:26 remaining] 94,  [1:11 remaining] 95,  [57 sec remaining] 96,  [43 sec remaining] 97,  [28 sec remaining] 98,  [14 sec remaining] \n99.\n\nDone.\n\nplot(strat_dev_sost.csr)\n\n\n\n\n\n\n\n\n\n\n\ncivViolence_sost&lt;- quart_geo_civ %&gt;% \n  select(2,3)\ncivViolence_sost_ppp&lt;- as.ppp(civViolence_sost, coordinates= civViolence_sost)\ncivViolence_sost_owin&lt;- civViolence_sost_ppp[boundary_owin]\ncivViolence_sost.csr &lt;- envelope(civViolence_sost_owin, Gest, nsim = 99)\n\nGenerating 99 simulations of CSR  ...\n1, 2,  [7:15 remaining] 3,\n [7:10 remaining] 4,  [7:02 remaining] 5,  [7:01 remaining] 6,\n [6:57 remaining] 7,  [6:53 remaining] 8,  [6:47 remaining] 9,\n [6:44 remaining] 10,  [6:39 remaining] 11,  [6:34 remaining] 12,\n [6:30 remaining] 13,  [6:28 remaining] 14,  [6:24 remaining] 15,\n [6:19 remaining] 16,  [6:15 remaining] 17,  [6:12 remaining] 18,\n [6:07 remaining] 19,  [6:03 remaining] 20,  [5:58 remaining] 21,\n [5:54 remaining] 22,  [5:50 remaining] 23,  [5:45 remaining] 24,\n [5:41 remaining] 25,  [5:37 remaining] 26,  [5:32 remaining] 27,\n [5:27 remaining] 28,  [5:23 remaining] 29,  [5:19 remaining] 30,\n [5:14 remaining] 31,  [5:10 remaining] 32,  [5:05 remaining] 33,\n [5:01 remaining] 34,  [4:56 remaining] 35,  [4:51 remaining] 36,\n [4:47 remaining] 37,  [4:43 remaining] 38,  [4:38 remaining] 39,\n [4:33 remaining] 40,  [4:28 remaining] 41,  [4:24 remaining] 42,\n [4:21 remaining] 43,  [4:19 remaining] 44,  [4:23 remaining] 45,\n [4:18 remaining] 46,  [4:13 remaining] 47,  [4:08 remaining] 48,\n [4:03 remaining] 49,  [3:58 remaining] 50,  [3:53 remaining] 51,\n [3:49 remaining] 52,  [3:44 remaining] 53,  [3:39 remaining] 54,\n [3:35 remaining] 55,  [3:30 remaining] 56,  [3:25 remaining] 57,\n [3:20 remaining] 58,  [3:15 remaining] 59,  [3:10 remaining] 60,\n [3:06 remaining] 61,  [3:01 remaining] 62,  [2:59 remaining] 63,\n [2:59 remaining] 64,  [2:58 remaining] 65,  [2:57 remaining] 66,\n [2:56 remaining] 67,  [2:54 remaining] 68,  [2:51 remaining] 69,\n [2:49 remaining] 70,  [2:43 remaining] 71,  [2:40 remaining] 72,\n [2:37 remaining] 73,  [2:34 remaining] 74,  [2:31 remaining] 75,\n [2:27 remaining] 76,  [2:20 remaining] 77,  [2:14 remaining] 78,\n [2:07 remaining] 79,  [2:01 remaining] 80,  [1:55 remaining] 81,\n [1:48 remaining] 82,  [1:42 remaining] 83,  [1:36 remaining] 84,\n [1:30 remaining] 85,  [1:23 remaining] 86,  [1:17 remaining] 87,\n [1:11 remaining] 88,  [1:05 remaining] 89,  [59 sec remaining] 90,\n [53 sec remaining] 91,  [47 sec remaining] 92,  [41 sec remaining] 93,\n [35 sec remaining] 94,  [29 sec remaining] 95,  [23 sec remaining] 96,\n [17 sec remaining] 97,  [12 sec remaining] 98,  [6 sec remaining] \n99.\n\nDone.\n\nplot(civViolence_sost.csr)\n\n\n\n\n\n\n\n\n\n\n\nThe plots above further proves that the spatial points across the quarters reflect a clustered pattern."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "",
    "text": "In this Hands-on, I will be exploring how to compute Global Measures of Spatial Autocorrelation (GMSA) using the spdep package.\nIn spatial policy, one of the main development objective of the local government and planners is to ensure equal distribution of development in the province. Our task in this study, hence, is to apply appropriate spatial statistical methods to discover if development are even distributed geographically. If the answer is No. Then, our next question will be “is there sign of spatial clustering?”. And, if the answer for this question is yes, then our next question will be “where are these clusters?”\nIn this case study, we are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Provice, People Republic of China.\nFirst and foremost, I will download the necessary packages, mainly sf, tidyverse, spdep and tmap.\n\npacman:: p_load(sf, spdep, tidyverse, tmap )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#overview",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "",
    "text": "In this Hands-on, I will be exploring how to compute Global Measures of Spatial Autocorrelation (GMSA) using the spdep package.\nIn spatial policy, one of the main development objective of the local government and planners is to ensure equal distribution of development in the province. Our task in this study, hence, is to apply appropriate spatial statistical methods to discover if development are even distributed geographically. If the answer is No. Then, our next question will be “is there sign of spatial clustering?”. And, if the answer for this question is yes, then our next question will be “where are these clusters?”\nIn this case study, we are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Provice, People Republic of China.\nFirst and foremost, I will download the necessary packages, mainly sf, tidyverse, spdep and tmap.\n\npacman:: p_load(sf, spdep, tidyverse, tmap )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#study-area-and-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#study-area-and-data",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "6.2 Study Area and Data",
    "text": "6.2 Study Area and Data\nFor this exercise, I will use 2 data sets:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\n\n6.2.1 Importing the data\nFirst, I will use the st_read() function of the sf package to import the shapefiles into our R environment.\n\nhunan3 &lt;- st_read(dsn=\"data/geospatial\",\n                  layer=\"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\santhyats\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\nI will also read the csv file into our environment using the read_csv() function.\n\nhunan2012_3&lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nLastly, I will perform a relational join to join the attributes from the hunan2012_3 dataframe to the hunan3 dataframe. This is done by using the left_join() function of the dplyr package.\n\nhunan3 &lt;- left_join(hunan3,hunan2012_3) %&gt;% \n select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\n\n6.2.2 Visualising Regional Development Indicators\nIn this section, we will plot a chloropeth map that will show us the distribution of GDPPC 2012. This will be done using the qtm() function of the tmap package.\n\nequal &lt;- tm_shape(hunan3) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan3) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "6.3 Global Measures of Spatial Autocorrelation",
    "text": "6.3 Global Measures of Spatial Autocorrelation\n\n6.3.1 Computing Contiguity Spatial Weights\nBefore we can compute the global spatial autocorrelation, we would first need to derive the spatial weights of the study area. Spatial weights are the neighbourhood relationships between the spatial units.\nWe will derive the contiguity neighbours list using the poly2nb() function of the spdep package. By default, this function returns a matrice of neighbours of the spatial untis, derived by the Queen’s method.\n\nwm_q3 &lt;- poly2nb(hunan3, \n                queen=TRUE)\nsummary(wm_q3)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nFrom the summary above, we see that there are a total of 88 spatial regions in hunan and the most connected region has 11 links. There are also 2 least connected regions with only one neighbour each.\n\n\n6.3.2 Row-standardized Weights Matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q3 &lt;- nb2listw(wm_q3, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q3\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation--morans-test",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation--morans-test",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "6.4 Global Measures of Spatial Autocorrelation- Moran’s Test",
    "text": "6.4 Global Measures of Spatial Autocorrelation- Moran’s Test\n\n6.4.1 Moran’s I Test\nIn this section, we will be performing the Maron’s I statistics test using the moran.test() function of the spdep package.\n\nmoran.test(hunan3$GDPPC, \n           listw=rswm_q3, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan3$GDPPC  \nweights: rswm_q3    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nFrom the statistics derived above, we see that the p-value is extremely small and that the alternate hypothesis is greater, enabling us to reject the null hypothesis (which states that there is no correlation between the weighted spatial units) and conclude that there is significant spatial autocorrelation between the weighted spatial units. This is further corroborated by the positive value of the Moran I Statistic.\nIn context, this means that counties with similar GDPPC Values are more close to one another spatially as compared to counties that have varying levels.\n\n\n6.4.2 Computing Monte Carlo Moran’s I Statistic\nWe will now perform the Monte Carlo Simulation for the Moran’s I Statistic using the moran.mc() function, also from the spdep package.\n\nset.seed(1234)\nbperm= moran.mc(hunan3$GDPPC, \n                listw=rswm_q3, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan3$GDPPC \nweights: rswm_q3  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nFrom the statistics above, we once again see that the p-value is lower than 0.05, and we can reject the null hypothesis and accept the claim that the weighted spatial units are positively autocorrelated.\n\n\n6.4.3 Visualising Monte Carlo Moran’s I\nIt is always a good practice for us the examine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below.\nIn the code chunk below hist() and abline() of R Graphics are used.\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\",)\nabline(v=0, \n       col=\"purple\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation--gearys-c",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation--gearys-c",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "6.5 Global Measures of Spatial Autocorrelation- Geary’s C",
    "text": "6.5 Global Measures of Spatial Autocorrelation- Geary’s C\n\n6.5.1 Geary’s C Test\nIn this section, I will be performing the Geary’s C test using the geary.test() function, also from the spdep package.\n\ngeary.test(hunan3$GDPPC, listw=rswm_q3)\n\n\n    Geary C test under randomisation\n\ndata:  hunan3$GDPPC \nweights: rswm_q3   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\nFrom the statistics above, I see that the Geary C statistic has a postivie value and the p-value is very small. This indicates that the null hypothesis (which states that the weighted spatial units are randomly distributed) is rejected and the weighted spatial units are concluded to be spatially correlated.\n\n\n6.5.2 Computing Monte Carlo Geary’s C\nWe will perform the permutations of the Monte Carlo simulation using the geary.mc() function of the spdep package.\n\nset.seed(1234)\nbperm=geary.mc(hunan3$GDPPC, \n               listw=rswm_q3, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan3$GDPPC \nweights: rswm_q3  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n6.5.3 Visualising the Monte Carlo Geary’s C\nWe will once again plot a histogram to reveal the distribution of the values in the Monte Carlo simulation.\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatial-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatial-correlogram",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "6.6 Spatial Correlogram",
    "text": "6.6 Spatial Correlogram\nSpatial Correlograms are plots that show how correlated pairs of spatial observations are when you increase the distance (lag) between them - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance. In this section, we will be plotting the coreelograms for the two tests that we have explored so far.\n\n6.6.1 Compute Moran I’s Correlogram\nTo achieve this, we will be using the sp.correlogram() function of the spdep package.\n\nMI_corr &lt;- sp.correlogram(wm_q3, \n                          hunan3$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\n\n\n\nFrom the plot above, we see that as the distance increases, the distribution of the values of the Moran I’s test becomes more negative, indicating that with larger distances, the spatial autocorrelation of the weighted spatial units decrease.\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan3$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n6.6.2 Computing Geary C’s Correlogram\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\nGC_corr &lt;- sp.correlogram(wm_q3, \n                          hunan3$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\n\n\n\nSimilarly, we will derive the analysis report\n\nprint(GC_corr)\n\nSpatial correlogram for hunan3$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#local-measures-of-spatial-autocorrelation",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#local-measures-of-spatial-autocorrelation",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "6.7 Local Measures of Spatial Autocorrelation",
    "text": "6.7 Local Measures of Spatial Autocorrelation\n\n6.7.1 Computing Local Moran’s I\nTo compute local Moran’s I, the localmoran() function of spdep will be used. It computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\nThe code chunks below are used to compute local Moran’s I of GDPPC2012 at the county level.\n\nfips &lt;- order(hunan3$County)\nlocalMI &lt;- localmoran(hunan3$GDPPC, rswm_q3)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nlocalmoran() function returns a matrix of values whose columns are:\n\nIi: the local Moran’s I statistics\nE.Ii: the expectation of local moran statistic under the randomisation hypothesis\nVar.Ii: the variance of local moran statistic under the randomisation hypothesis\nZ.Ii:the standard deviate of local moran statistic\nPr(): the p-value of local moran statistic\n\nWe can make use of the printCoefmat() to list the contents of the local Moran matrix.\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan3$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n\n6.7.2 Mapping the Local Moran’s I map\nBefore we map the Local Moran I map, we will first append the Moran I dataframe to the hunan dataframe.\n\nhunan.localMI &lt;- cbind(hunan3,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\nWe will now plot the chloropeth map of local Moran I’s values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n6.7.3 Mapping Local Moran I’s p-values\nThe choropleth shows there is evidence for both positive and negative Ii values. However, it is useful to consider the p-values for each of these values. The code chunks below produce a choropleth map of Moran’s I p-values by using functions of tmap package.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Purples\", \n          title = \"Local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n6.7.4 Mapping both Moran’s I- and p- values\nFor more effective interpretation, we can plot both maps side-by-side.\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-a-lisa-cluster-map",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-a-lisa-cluster-map",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "6.8 Creating a LISA Cluster Map",
    "text": "6.8 Creating a LISA Cluster Map\nThe LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n\n6.8.1 Plotting the Moran Scatter Plot\nThe Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\nWe will use the moran.plot() function of the spdep package to plot the scatterplot.\n\nnci &lt;- moran.plot(hunan3$GDPPC, rswm_q3,\n                  labels=as.character(hunan3$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\n\n\nThe top right corner belongs to areas that have high GDPPC and are surrounded by other areas that have the average level of GDPPC. \n\n\n6.8.2 Plotting Moran Scatterplot with standardised variable\nFirst we will use scale() to centers and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations. as.vector() function at the end ensures that the output will be in a vector format.\n\nhunan3$Z.GDPPC &lt;- scale(hunan3$GDPPC) %&gt;% \n  as.vector \n\nWe will now once again plot the scatterplot.\n\nnci2 &lt;- moran.plot(hunan3$Z.GDPPC, rswm_q3,\n                   labels=as.character(hunan3$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\n6.8.3 Preparing LISA map classes\nBelow are the steps to prepare a LISA cluster map\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\nNext, we derive the spatially lagged variable of interest (i.e. GDPPC) and center it around its mean.\n\nhunan3$lag_GDPPC &lt;- lag.listw(rswm_q3, hunan3$GDPPC)\nDV &lt;- hunan3$lag_GDPPC - mean(hunan3$lag_GDPPC)     \n\nThis is followed by centering the local Moran’s around the mean.\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\nNext, we will set a statistical significance level for the local Moran.\n\nsignif &lt;- 0.05       \n\nThese four command lines below define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.\n\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 1\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 2\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\nLastly, place non-significant Moran in the category 0.\n\nquadrant[localMI[,5]&gt;signif] &lt;- 0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-a-lisa-map",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-a-lisa-map",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "6.9 Plotting a LISA map",
    "text": "6.9 Plotting a LISA map\nNow, we can plot a LISA map using the code chunk below.\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\n\n\nWe can also plot the local Moran’s value and it’s corresponding p-values beside each other.\n\ngdppc &lt;- qtm(hunan3, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#hot-spot-and-cold-spot-area-analysis",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "7.0 Hot Spot and Cold Spot Area Analysis",
    "text": "7.0 Hot Spot and Cold Spot Area Analysis\nBeside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot and/or cold spot areas.\n\n7.0.1 Getis and Ord’s G statistic\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord’s G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics\n\n\n\n7.0.2 Deriving Distance-based Weights Matrix\nFirst, we need to define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord we are defining neighbours based on distance.\nThere are two type of distance-based proximity matrix, they are:\n\nfixed distance weight matrix; and\nadaptive distance weight matrix.\n\n\n7.0.2.1 Deriving the centroid\nFirst, we will derive the centroid of each of the polygons found in the hunan3 dataframe so that we can construct a connectivity graph.\n\nlongitude &lt;- map_dbl(hunan3$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan3$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\n\n\n\n7.0.2.2 Determining the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\n7.0.2.3 Computing fixed distance weight matrix\nNow, we will compute the distance weight matrix by using dnearneigh() as shown in the code chunk below.\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nNext, nb2listw() is used to convert the output to a spatial weights object.\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n\n7.0.3 Computing Adaptive Distance Weights Matrix\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nWe once again convert the output to a spatial weights object\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-gi-statistics",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-gi-statistics",
    "title": "6 Global and Local measures of Spatial Association",
    "section": "7.1 Computing Gi statistics",
    "text": "7.1 Computing Gi statistics\n\n7.1.1 Gi Statistics using fixed distance\n\nfips &lt;- order(hunan3$County)\ngi.fixed &lt;- localG(hunan3$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan3$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below.\n\nhunan.gi &lt;- cbind(hunan3, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\nIn fact, the code chunk above performs three tasks. First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n\n\n7.1.2 Mapping Gi values with fixed distance weights\n\ngdppc &lt;- qtm(hunan3, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n7.1.3 Gi Statistics using adaptive distance\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\nfips &lt;- order(hunan3$County)\ngi.adaptive &lt;- localG(hunan3$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan3, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\n7.1.4 Mapping Gi statistics with adaptive distance weights\nIt is time for us to visualise the locations of hot spot and cold spot areas. The choropleth mapping functions of tmap package will be used to map the Gi values.\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc&lt;- qtm(hunan3, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#overall-learnings",
    "href": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#overall-learnings",
    "title": "Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar",
    "section": "1.7 Overall Learnings",
    "text": "1.7 Overall Learnings\nThis exercise has allowed me to revisit and revise the various different concepts and functions that we had learnt in class and in the past Hands-on Exercises. Being completely on my own, it has forced me to move out of my comfort zone and learn concepts in my own way. To summarise, I would say my main takeaways are:\n\nAcquiring real-world data and being able to observe it in order to identify what needs to be handled and processed for our analytical needs (formatting of date columns, dropping of columns etc.)\nImporting datasets of different types (shapefiles, csv files) into r for analysis\nHandling real-world data and being able to convert it to desirable formats\nIdentifying the suitable formats that the input data needs to be in, in order to perform the different analysis methods (ppp and owin objects etc.)\nFiguring out the most suitable methods to derive KDE layers on a real-word dataset according to the characteristics of the dataset\nBeing able to understand and somewhat explain the first order and second-order analysis plots\n\nAnd some further non-technical learnings:\n\nNeat and efficient ways to present the data and the plots."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#references",
    "href": "Take-Home_Exercises/Take-Home_Ex01/Take-Home_Ex01.html#references",
    "title": "Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar",
    "section": "1.8 References",
    "text": "1.8 References\n\nMaizland, L. (2022, January 31). Myanmar’s troubled history: coups, military rule, and ethnic conflict. Council on Foreign Relations. https://www.cfr.org/backgrounder/myanmar-history-coup-military-rule-ethnic-conflict-rohingya"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415: Geospatial Analytics and Applications",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics Homepage! In this website, you will find all the coursework prepared by me in this course :) :&gt;"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "In this exercise, we will be exploring a new package, sfdep.\n\npacman::p_load(sf, tidyverse, tmap, sfdep)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#loading-in-the-necessary-packages",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#loading-in-the-necessary-packages",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "In this exercise, we will be exploring a new package, sfdep.\n\npacman::p_load(sf, tidyverse, tmap, sfdep)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#importing-the-data",
    "title": "In-class Exercise 6",
    "section": "2.1 importing the data",
    "text": "2.1 importing the data\n\n2.1.1 Importing the Hunan shapefiles\n\nhunan4&lt;-st_read(dsn=\"data/geospatial\", \n                layer=\"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\santhyats\\IS415-GAA\\In-class_Ex\\In-class_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n2.1.2 importing the csv file\n\nhunan4_2012&lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n2.1.3 Performing a left join of the sf dataframes\n\nhunan4_GDPPC&lt;- left_join(hunan4, hunan4_2012) %&gt;% \n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#global-measures-of-spatial-association",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#global-measures-of-spatial-association",
    "title": "In-class Exercise 6",
    "section": "2.2 Global measures of spatial association",
    "text": "2.2 Global measures of spatial association\n\n2.2.1 Deriving queen contiguity weights sfdep methods\n\nwm_q4&lt;- hunan4_GDPPC %&gt;% \n  mutate(nb=st_contiguity(geometry),\n         wt= st_weights(nb, \n                        style='W'),\n         .before=1)\n\nThe st_contiguity() function of the sfdep package helps to add the neighbours to a dataframe instead of printing out the matrix. The .before attribute adds the new columns to the front of the sf table instead of the default back of the sf.\n\n\n2.2.2 Computing Global Moran’s I\n\nmoranI&lt;- global_moran(wm_q4$GDPPC,\n                      wm_q4$nb,\n                      wm_q4$wt)\n\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\n\n\n2.2.3 Performing the Global Moran’s I Test\n\nglobal_moran_test(wm_q4$GDPPC,\n                  wm_q4$nb,\n                  wm_q4$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nThe p-value is incredibly small, indictaing that we reject the null hypothesis and conclude that the relationship between the neighbours differ significantly from the values as observed under a randomly spatially distributed neighbours. Next, looking at the Moran I statistic value of 0.3007, we can see that there is clustering present among the spatial units.\n\n\n2.2.4 Performing Global Moran I’s permutation Test\n\nset.seed(1234)\nglobal_moran_perm(wm_q4$GDPPC,\n                  wm_q4$nb,\n                  wm_q4$wt,\n                  nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nSetting the seed allows us to ensure that our computations are reproducible. This allows us to get the same value every time we run the code chunk or render the document.\nFrom the results, we see that the p-value is once again really small, confirming that we will reject the null hypothesis…."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#computing-local-morans-i",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#computing-local-morans-i",
    "title": "In-class Exercise 6",
    "section": "2.3 Computing Local Moran’s I",
    "text": "2.3 Computing Local Moran’s I\n\nlisa&lt;- wm_q4 %&gt;% \n  mutate(local_moran = local_moran(GDPPC, nb, wt, nsim=99),\n         .before=1) %&gt;% \n  unnest(local_moran)\n\nunnest() expands a column-list of dataframes to rows and columns.\n2.3.1 Visualising Local Moran’s I\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) + \n  tm_fill(\"ii\") +\n  tm_borders(alpha = 0.5) + \ntm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\",\n            main.title.size= 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n2.3.2 Visualising LISA map\nLISA Map helps us to visualise outliers and clusters. High-Low and Low-High categories are considered as outliers whereas High-High and Low-Low categories are considered the clusters. The LISA map is an in interpreted map by combining the local Moran I’s statistic of geographical areas and their respective p-values.\n\nlisa_sig&lt;- lisa %&gt;% \n  filter(p_ii &lt; 0.05)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  \n  tm_shape(lisa_sig) +\n  tm_fill(\"mean\") +\n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#computing-local-g-statistics",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#computing-local-g-statistics",
    "title": "In-class Exercise 6",
    "section": "2.4 Computing Local G-statistics",
    "text": "2.4 Computing Local G-statistics\nG-statistics allow us to observe for hot and cold spots\n\nwm_idw&lt;- hunan4_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry, scale=1, alpha=1),\n         .before=1)\n\n! Polygon provided. Using point on surface.\n\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n\n\n\nHCSA&lt;- wm_idw %&gt;% \n  mutate(local_GI = local_gstar_perm(\n    GDPPC, nb, wt, nsim = 99), \n    .before = 1) %&gt;% \n  unnest(local_GI)\n\n\n2.4.1 Visualising the Gi* statistics\n\nHCSA_sig &lt;- HCSA %&gt;% \n  filter(p_sim &lt;0.05)\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_shape(HCSA)+\n  tm_polygons() +\n  tm_borders(alpha=0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "",
    "text": "Drug use in Thailand is a prevalent problem and has been on the rise in recent years. Being in the drug trafficking routes from the Golden Triangle, the major source of methamphetamine in Southeast Asia, it has naturally faced an increased frequency of this crisis. In this exercise, I will be analysing the distribution of drug-related offences in Thailand at the provincial level and observing for any spatial patterns in them. I will also be performing deploying appropriate analysis methods to observe for presence of hot and cold spots."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#overview",
    "href": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#overview",
    "title": "Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "",
    "text": "Drug use in Thailand is a prevalent problem and has been on the rise in recent years. Being in the drug trafficking routes from the Golden Triangle, the major source of methamphetamine in Southeast Asia, it has naturally faced an increased frequency of this crisis. In this exercise, I will be analysing the distribution of drug-related offences in Thailand at the provincial level and observing for any spatial patterns in them. I will also be performing deploying appropriate analysis methods to observe for presence of hot and cold spots."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#getting-started",
    "href": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#getting-started",
    "title": "Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "2.1 Getting Started",
    "text": "2.1 Getting Started\n\n2.1.1 Loading the necessary packages\nFirst and foremost, I will load the packages that we will be using in this exercise using the p_load() function of pacman. The packages we will use in this exercise are the following:\nsf: Used in spatial data wrangling\ntidyverse: Used in data wrangling for non-spatial data\ntmap: For functions relating to mapping point patterns\nsfdep: Functions that support Exploratory Data Analysis and is compatible with the sf and tidyverse packages\n\npacman::p_load(sf, tidyverse, tmap, sfdep)\n\n\n\n2.1.2 Loading in the Datasets\nThese are the datafiles I will be using for this exercise:\n\nThai_Drug_Offences_2017-2022.csv is a csv file containing the data about the locations of drug offences in Thailand.\nThai_Admin1_2022 is a shapefile that contains the provincial boundaries of Thailand.\n\nI will first load in the csv file using the read_csv() function, and save it into the Thai_doff dataframe. After looking at the downloaded data, I will be able to select only the columns that are needed for this exercise.\nI will further group rows according to the province and total up the number of cases for each province. This is done with the help of the group_by() function to group the rows according to the province, and then using the summarise() and sum() functions to sum up the number of cases in each province and save it in a new column called ‘total_count’.\n\nThai_doff &lt;- read_csv(\"data/aspatial/Thai_Drug_Offences_2017-2022.csv\") %&gt;%\n  select(1, 2, 3, 5)\n\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nThai_doff &lt;- Thai_doff %&gt;% \n  group_by(fiscal_year, province_en) %&gt;% \n  summarise('total_count'= sum(`no_cases`))\n\n`summarise()` has grouped output by 'fiscal_year'. You can override using the\n`.groups` argument.\n\n\nNext, I will load in the shapefile and save it to Thai_bounds using the st_read() function. After observing the dataframe, I will also drop the columns that are not needed for our analysis.\n\nThai_bounds &lt;- st_read(dsn = \"data/geospatial\",\n                       layer = \"Thai_Admin1_2022\") %&gt;%\n  select(1:3, 17)\n\nReading layer `Thai_Admin1_2022' from data source \n  `C:\\santhyats\\IS415-GAA\\Take-Home_Exercises\\Take-Home_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\n\nFinally, I will perform a left join of the Thai_bounds dataframe to the Thai_doff dataframe using the province names. This will be done using the left_join() function.\n\nThai_doff&lt;- left_join(Thai_doff, Thai_bounds, by= c(\"province_en\" = \"ADM1_EN\")) %&gt;% \n  drop_na()\n\n\n\n2.1.3 Visualising the Data Over the Years\nI will now plot the layers on a chloropleth map to observe the distribution of the drug offences in Thailand. The following functions are used to achieve this:\n\ntm_shape() to plot the provincial boundaries,\ntm_fill() to map out the the variable of interest- the number of drug abuse cases\ntm_borders(), tm_layout() to format the look of the maps.\n\nBut when I tried to plot the maps, I encountered an error indicating that Thai_doff was not an sf object. I checked the type of object and found that it is a list!\n\ntypeof(Thai_doff)\n\n[1] \"list\"\n\n\nAs such, I will convert the object to a sf dataframe before continuing. To do this, I will use the data.frame() function.\n\nThai_doff &lt;- Thai_doff %&gt;% st_as_sf()\n\n\ntm_shape(Thai_doff) +\n  tm_fill(\"total_count\",\n          n = 5,\n          style = \"quantile\",\n          palette = \"Purples\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\") +\n  tm_facets(by = 'fiscal_year')\n\n\n\n\n\n\n\n\nBefore we can proceed, I will create new data frames by segmenting our Thai_doff by years. This will help us in our analysis the spatial autocorrelation over time later on.\n\nyears &lt;- list(17, 18, 19, 20, 21, 22)\n\nfor (i in years) {\n  \n  vars &lt;- paste('Thai_doff_', i, sep = '') \n  assign(vars, \n         Thai_doff %&gt;% \n           filter(fiscal_year == paste('20', i, sep = '')))\n         \n}"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#computing-weights-of-the-study-area",
    "href": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#computing-weights-of-the-study-area",
    "title": "Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "2.2 Computing Weights of the Study Area",
    "text": "2.2 Computing Weights of the Study Area\nThe first step in our analysis will be to come up with the spatial weights for our study area. Since our study area is constant over the time period and there was no change in the provincial boundaries of Thailand during the years 2017-2022, we can compute the spatial weights just once at the start of our analysis and use it for our yearly calculations.\n\n2.2.1 Computing the Contiguity Spatial Weights\nI will use the st_contiguity() method from the sfdep package to derive the spatial neighbours of the spatial units and st_weights() is used to compute their respective weights and save it as a new variable.\n\n  Thai_doff_wm&lt;- Thai_doff_17 %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         wt= st_weights(nb, \n                        style='W'),\n         .before=1)\n\nWhen I tried this, I encountered an error indicating the presence of units with no neighbours. Hence, I computed the neighbours list of the spatial units by themselves to identify the exact units causing the errors.\n\nThai_doff_wm&lt;- st_contiguity(Thai_doff_17$geometry)\n\nThai_doff_wm\n\nNeighbour list object:\nNumber of regions: 75 \nNumber of nonzero links: 330 \nPercentage nonzero weights: 5.866667 \nAverage number of links: 4.4 \n1 region with no links:\n46\n2 disjoint connected subgraphs\n\n\nFrom the results above, we see that region 46 is the spatial unit with no neighbours, and that there are 2 disjoint clusters of spatial units-likely due to this unlinked region. Referring to the corresponding province name of the 46th spatial region in the geometry column of the Thai_doff_17 dataframe:\n\nThai_doff_17$province_en[46]\n\n[1] \"Phuket\"\n\n\nWe see that the region is Phuket. This corroborates with the fact that Phuket is an island off of the coast of mainland Thailand, thus falling out of the connected administrative boundaries. Since I do want to keep Phuket in the analysis, I will handle this issue by manually setting the neighbour of Phuket. I will set it to be region 37, Phang Nga, since it is geographically closest to Phuket. I will include an extra codeline to capture this, while keeping the rest of the code from earlier.\n\nThai_doff_wm &lt;- Thai_doff_17 %&gt;% \n  mutate(nb = st_contiguity(geometry), .before=1)\n\nThai_doff_wm$nb[[46]] &lt;- as.integer(37)\n\nThai_doff_wm &lt;- Thai_doff_wm %&gt;%\n  mutate(wt = st_weights(nb, style = 'W'), \n         .before = 1) %&gt;% \n  select(1,2)"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#global-measures-of-spatial-autocorrelation",
    "href": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#global-measures-of-spatial-autocorrelation",
    "title": "Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "2.3 Global Measures of Spatial Autocorrelation",
    "text": "2.3 Global Measures of Spatial Autocorrelation\n\n2.2.3 Performing the Moran I’s Test by Year\nFor this section, I will be conducting the Moran I’s Test and the Moran I’s Permutations test for the dataset according to each year.\n\n201720182019202020212022\n\n\n\nGlobal Moran’s I TestMoran I’s Permutation Test\n\n\n\nglobal_moran_test(Thai_doff_17$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.2891, p-value = 0.01104\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.127509970      -0.013513514       0.003795253 \n\n\n\n\n\nset.seed(982)\nglobal_moran_perm(Thai_doff_17$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt,\n                  nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.12751, observed rank = 96, p-value = 0.08\nalternative hypothesis: two.sided\n\n\nFrom the results above, we see that the Global Moran I’s statistic is 0.128. This indicates that the spatial units with drug abuse cases were mildly positively correlated to one another in 2017. In simple terms, the spatial areas displayed clusters that had mild similarities to one another.\n\n\n\n\n\n\nGlobal Moran I’s TestMoran I’s Permutation Test\n\n\n\nglobal_moran_test(Thai_doff_18$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.0134, p-value = 0.02203\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.111791008      -0.013513514       0.003873097 \n\n\n\n\n\nset.seed(1235)\nglobal_moran_perm(Thai_doff_18$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt,\n                  nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.11179, observed rank = 94, p-value = 0.12\nalternative hypothesis: two.sided\n\n\nFrom the results, a p-value of 0.02203 is observed. With a p-value that is lower than the level of significance of 0.05, we can reject the null hypothesis and conclude that the spatial units are positively autocorrelated and hence display clustering. Moran I’s statistic of 0.112 indicates a mild positive relationship between the units.\n\n\n\n\n\n\nGlobal Moran I’s TestMoran I’s Permutation Test\n\n\n\nglobal_moran_test(Thai_doff_19$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.3502, p-value = 0.009381\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.15065681       -0.01351351        0.00487949 \n\n\n\n\n\nset.seed(1236)\nglobal_moran_perm(Thai_doff_19$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt,\n                  nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.15066, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nThe small p-value indicates that the results differ significantly than what would be observed under randomisation. The results for the Moran I’s statistics once again reflect the presence of mild clustering among the spatial units with the positive value of 0.151.\n\n\n\n\n\n\nGlobal Moran I’s TestMoran I’s Permutation’s Test\n\n\n\nglobal_moran_test(Thai_doff_20$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 1.8872, p-value = 0.02957\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.125756486      -0.013513514       0.005446309 \n\n\n\n\n\nset.seed(1237)\nglobal_moran_perm(Thai_doff_20$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt,\n                  nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.12576, observed rank = 99, p-value = 0.02\nalternative hypothesis: two.sided\n\n\nThe results observed in 2020 is similar to the previous years.\n\n\n\n\n\n\nGlobal Moran I’s TestMoran I’s Permutations Test\n\n\n\nglobal_moran_test(Thai_doff_21$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.7545, p-value = 0.002939\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.200458201      -0.013513514       0.006034402 \n\n\n\n\n\nset.seed(1238)\nglobal_moran_perm(Thai_doff_21$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt,\n                  nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.20046, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\n\n\n\nGlobal Moran I’s TestMoran I’s Permutations Test\n\n\n\nglobal_moran_test(Thai_doff_22$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.922, p-value = 0.001739\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.216964758      -0.013513514       0.006221729 \n\n\n\n\n\nset.seed(1238)\nglobal_moran_perm(Thai_doff_20$total_count,\n                  Thai_doff_wm$nb,\n                  Thai_doff_wm$wt,\n                  nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.12576, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#local-measures-of-spatial-autocorrelation",
    "href": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#local-measures-of-spatial-autocorrelation",
    "title": "Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "2.4 Local Measures of Spatial Autocorrelation",
    "text": "2.4 Local Measures of Spatial Autocorrelation\n\n2.4.1 Local Moran’s I\nIn this section, I will be computing the Local Moran’s I statistics for the drug related offences and visualising them on maps. To achieve this, I will be using the local_moran() function of the sfdep package.\n\nlocal_moran17 &lt;- Thai_doff_17 %&gt;% \n mutate(local_moran = local_moran(total_count, Thai_doff_wm$nb, Thai_doff_wm$wt, nsim=99),\n         .before=1) %&gt;% \n  unnest(local_moran, names_sep = \"_\")\n\nlocal_moran18 &lt;- Thai_doff_18 %&gt;% \n mutate(local_moran = local_moran(total_count, Thai_doff_wm$nb, Thai_doff_wm$wt, nsim=99),\n         .before=1) %&gt;% \n  unnest(local_moran, names_sep = \"_\")\n\nlocal_moran19 &lt;- Thai_doff_19 %&gt;% \n mutate(local_moran = local_moran(total_count, Thai_doff_wm$nb, Thai_doff_wm$wt, nsim=99),\n         .before=1) %&gt;% \n  unnest(local_moran, names_sep = \"_\")\n\nlocal_moran20 &lt;- Thai_doff_20 %&gt;% \n mutate(local_moran = local_moran(total_count, Thai_doff_wm$nb, Thai_doff_wm$wt, nsim=99),\n         .before=1) %&gt;% \n  unnest(local_moran, names_sep = \"_\")\n\nlocal_moran21 &lt;- Thai_doff_21 %&gt;% \n mutate(local_moran = local_moran(total_count, Thai_doff_wm$nb, Thai_doff_wm$wt, nsim=99),\n         .before=1) %&gt;% \n  unnest(local_moran, names_sep = \"_\")\n\nlocal_moran22 &lt;- Thai_doff_22 %&gt;% \n mutate(local_moran = local_moran(total_count, Thai_doff_wm$nb, Thai_doff_wm$wt, nsim=99),\n         .before=1) %&gt;% \n  unnest(local_moran, names_sep = \"_\")\n\nWe will now plot these statistics on maps using functions of the tmap package.\n\n201720182019202020212022\n\n\n\ntmap_mode(\"plot\") +\ntm_shape(local_moran17) + \n  tm_fill(\"local_moran_ii\") +\n  tm_borders(alpha = 0.5) + \ntm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"2017\",\n            main.title.size= 1)\n\ntmap mode set to plotting\n\n\nVariable(s) \"local_moran_ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")  +\ntm_shape(local_moran18) + \n  tm_fill(\"local_moran_ii\") +\n  tm_borders(alpha = 0.5) + \ntm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"2018\",\n            main.title.size= 1)\n\ntmap mode set to plotting\n\n\nVariable(s) \"local_moran_ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\") +\ntm_shape(local_moran19) + \n  tm_fill(\"local_moran_ii\") +\n  tm_borders(alpha = 0.5) + \ntm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"2019\",\n            main.title.size= 1)\n\ntmap mode set to plotting\n\n\nVariable(s) \"local_moran_ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\") +\ntm_shape(local_moran20) + \n  tm_fill(\"local_moran_ii\") +\n  tm_borders(alpha = 0.5) + \ntm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"2020\",\n            main.title.size= 1)\n\ntmap mode set to plotting\n\n\nVariable(s) \"local_moran_ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\") +\ntm_shape(local_moran21) + \n  tm_fill(\"local_moran_ii\") +\n  tm_borders(alpha = 0.5) + \ntm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"2021\",\n            main.title.size= 1)\n\ntmap mode set to plotting\n\n\nVariable(s) \"local_moran_ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\") +\ntm_shape(local_moran22) + \n  tm_fill(\"local_moran_ii\") +\n  tm_borders(alpha = 0.5) + \ntm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"2022\",\n            main.title.size= 1)\n\ntmap mode set to plotting\n\n\nVariable(s) \"local_moran_ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\nI see that throughout the years, more regions become positively autocorrelated, reflected by the darker orange areas in 2018 becoming green over the years. This indicates that areas with drastically different drug abuse cases in the earlier years, became more positively correlated with their neighbours as the years progressed. This may indicate that the drug abuse practices might have influenced neighbouring areas.\n\n\n2.4.2 Visualising the LISA maps by Year\nI will now plot the LISA maps by year. To do this, I will first filter out the values that are significantly smaller than the significance level of 0.05. I will then plot it with the Local Moran I’s statistic.\n\n201720182019202020212022\n\n\n\nlisa_sig17&lt;- local_moran17 %&gt;% \n  filter(local_moran_p_ii &lt; 0.05)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(Thai_doff_17) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  \n  tm_shape(lisa_sig17) +\n  tm_fill(\"local_moran_mean\") +\n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\n\n\n\nlisa_sig18&lt;- local_moran18 %&gt;% \n  filter(local_moran_p_ii &lt; 0.05)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(local_moran18) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  \n  tm_shape(lisa_sig18) +\n  tm_fill(\"local_moran_mean\") +\n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\n\n\n\nlisa_sig19&lt;- local_moran19 %&gt;% \n  filter(local_moran_p_ii &lt; 0.05)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(local_moran19) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  \n  tm_shape(lisa_sig19) +\n  tm_fill(\"local_moran_mean\") +\n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\n\n\n\nlisa_sig20&lt;- local_moran20 %&gt;% \n  filter(local_moran_p_ii &lt; 0.05)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(local_moran20) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  \n  tm_shape(lisa_sig20) +\n  tm_fill(\"local_moran_mean\") +\n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\n\n\n\nlisa_sig21&lt;- local_moran21 %&gt;% \n  filter(local_moran_p_ii &lt; 0.05)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(local_moran21) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  \n  tm_shape(lisa_sig21) +\n  tm_fill(\"local_moran_mean\") +\n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\n\n\n\nlisa_sig22&lt;- local_moran22 %&gt;% \n  filter(local_moran_p_ii &lt; 0.05)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(local_moran22) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  \n  tm_shape(lisa_sig22) +\n  tm_fill(\"local_moran_mean\") +\n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the LISA maps, I observe a dip in the number of clusters of drug abuse cases from 2017 to 2018, and there seems to be minimal change in the years 2018 and 2019. However, from 2019-2020, I see more clusters of spatial units with similar number of drug abuse cases forming. In 2021, there appears to be a cold spot for drug-related offences in the western provinces. In the following year, while the cluster of cold spots have decreased, a new cluster of hotspots is observed in the North Eastern provinces."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#hotcold-spot-analysis",
    "href": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#hotcold-spot-analysis",
    "title": "Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "2.5 Hot/Cold Spot Analysis",
    "text": "2.5 Hot/Cold Spot Analysis\nWe will first come up with a new weights matrix using the inverse distance method. To do this, we will follow our previous method, but instead of using st_weights() to come up with the weights, we will be using st_inverse_distance().\n\nThai_doff_wm_idw&lt;- Thai_doff_17 %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry, scale=1, alpha=1),\n         .before=1)\n\n! Polygon provided. Using point on surface.\n\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nℹ In group 1: `fiscal_year = 2017`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n\n\nOnce we have our new dataframe containing the inverse distance weights matrix of the spatial units, we can go on to calculate the Gi* statistic for the drug abuse cases for each of the years. Following that, we will map them on different plots.\n\n2.5.1 Computing the Gi* Statistics\n\n201720182019202020212022\n\n\n\nhcsa17&lt;- Thai_doff_17%&gt;% \n  mutate(local_GI = local_gstar_perm(\n    total_count, Thai_doff_wm_idw$nb, Thai_doff_wm_idw$wt, nsim = 99), \n    .before = 1) %&gt;% \n  unnest(local_GI)\n\n\n\n\nhcsa18&lt;- Thai_doff_18%&gt;% \n  mutate(local_GI = local_gstar_perm(\n    total_count, Thai_doff_wm_idw$nb, Thai_doff_wm_idw$wt, nsim = 99), \n    .before = 1) %&gt;% \n  unnest(local_GI)\n\n\n\n\nhcsa19&lt;- Thai_doff_19%&gt;% \n  mutate(local_GI = local_gstar_perm(\n    total_count, Thai_doff_wm_idw$nb, Thai_doff_wm_idw$wt, nsim = 99), \n    .before = 1) %&gt;% \n  unnest(local_GI)\n\n\n\n\nhcsa20&lt;- Thai_doff_20%&gt;% \n  mutate(local_GI = local_gstar_perm(\n    total_count, Thai_doff_wm_idw$nb, Thai_doff_wm_idw$wt, nsim = 99), \n    .before = 1) %&gt;% \n  unnest(local_GI)\n\n\n\n\nhcsa21&lt;- Thai_doff_21%&gt;% \n  mutate(local_GI = local_gstar_perm(\n    total_count, Thai_doff_wm_idw$nb, Thai_doff_wm_idw$wt, nsim = 99), \n    .before = 1) %&gt;% \n  unnest(local_GI)\n\n\n\n\nhcsa22&lt;- Thai_doff_22%&gt;% \n  mutate(local_GI = local_gstar_perm(\n    total_count, Thai_doff_wm_idw$nb, Thai_doff_wm_idw$wt, nsim = 99), \n    .before = 1) %&gt;% \n  unnest(local_GI)\n\n\n\n\n\n\n2.5.2 Visualising the Gi* Statistic\nI will now be plotting the Gi* Statistic on maps so we can better visualise the hot spot and cold spot areas of drug abuse cases in Thailand over the 6 years.\n\n201720182019202020212022\n\n\n\nHCSA_sig17 &lt;- hcsa17 %&gt;% \n  filter(p_sim &lt;0.05)\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_shape(hcsa17)+\n  tm_polygons() +\n  tm_borders(alpha=0.5) +\n  tm_shape(HCSA_sig17) +\n  tm_fill(\"gi_star\",\n          palette = \"-RdYlGn\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\nHCSA_sig18 &lt;- hcsa18 %&gt;% \n  filter(p_sim &lt;0.05)\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_shape(hcsa18)+\n  tm_polygons() +\n  tm_borders(alpha=0.5) +\n  tm_shape(HCSA_sig18) +\n  tm_fill(\"gi_star\",\n          palette = \"-RdYlGn\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\nHCSA_sig19 &lt;- hcsa19 %&gt;% \n  filter(p_sim &lt;0.05)\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_shape(hcsa19)+\n  tm_polygons() +\n  tm_borders(alpha=0.5) +\n  tm_shape(HCSA_sig19) +\n  tm_fill(\"gi_star\",\n          palette = \"-RdYlGn\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\nHCSA_sig20 &lt;- hcsa20 %&gt;% \n  filter(p_sim &lt;0.05)\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_shape(hcsa20)+\n  tm_polygons() +\n  tm_borders(alpha=0.5) +\n  tm_shape(HCSA_sig20) +\n  tm_fill(\"gi_star\",\n          palette = \"-RdYlGn\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\nHCSA_sig21 &lt;- hcsa21 %&gt;% \n  filter(p_sim &lt;0.05)\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_shape(hcsa21)+\n  tm_polygons() +\n  tm_borders(alpha=0.5) +\n  tm_shape(HCSA_sig21) +\n  tm_fill(\"gi_star\",\n          palette = \"-RdYlGn\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\n\n\n\nHCSA_sig22 &lt;- hcsa22 %&gt;% \n  filter(p_sim &lt;0.05)\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_shape(hcsa22)+\n  tm_polygons() +\n  tm_borders(alpha=0.5) +\n  tm_shape(HCSA_sig22) +\n  tm_fill(\"gi_star\",\n          palette = \"-RdYlGn\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\nThe Gi* statistics plot once again confirm the cold and hotspots observed by the LISA plots earlier. However, it further reveals a cold spot in the Northern Central provinces in 2017. These cold spots drop drastically in the years 2018-2019, further corroborating the pattern revealed by the Local Moran I plots regarding the increase in the drug abuse cases in the neighbouring spatial units.\nI also observe that the capital city of Bangkok had been a hotspot for drug abuse in the years 2017-2020, but not in 2021-2022."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "7 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "In this hands-on exercise, I will be exploring two different analysis methods:\n\nhierarchical cluster analysis; and\nspatially constrained cluster analysis.\n\nThese methods are mainly used to help achieve Geographical Segmentaion. Geographical segmentation is the process of splitting a region into geographical units based on certain factors or variables. Thus, in this exercise, I will be using geographically referenced multivariate data to split a region into different homogeneous segments.\n\n\nIn this exercise, the region of interest will be Shan State in Myanmar. I will be splitting this region into homogeneous segments on the basis of different means of Communication Technology: Radio, Television, Land Line Phone, Mobile Phone, Computer and Internet at home.\n\n\n\nTwo data sets will be used in this study. They are:\n\nMyanmar Township Boundary Data (i.e. myanmar_township_boundaries) : This is a GIS data in ESRI shapefile format. It consists of township boundary information of Myanmar. The spatial data are captured in polygon features.\nShan-ICT.csv: This is an extract of The 2014 Myanmar Population and Housing Census Myanmar at the township level.\n\n\n\n\nFirstly, we will install the necessary packages needed for this exercise. The R packages needed for this exercise are as follows:\n\nSpatial data handling\n\nsf, rgdal and spdep\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\nMultivariate data visualisation and analysis\n\ncoorplot, ggpubr, and heatmaply\n\nCluster analysis\n\ncluster\nClustGeo\n\n\n\npacman::p_load(sf, rgdal, sfdep, tidyverse, tmap, corrplot, ggpubr, heatmaply, cluster, ClustGeo, psych,factoextra)\n\nWarning: package 'rgdal' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\nWarning: 'BiocManager' not available.  Could not check Bioconductor.\n\nPlease use `install.packages('BiocManager')` and then retry.\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'rgdal'\n\n\nWarning in pacman::p_load(sf, rgdal, sfdep, tidyverse, tmap, corrplot, ggpubr, : Failed to install/load:\nrgdal\n\n\n\n\n\nFirst, I will be importing the geospatial data (Township Boundaries Shapefile) and saving it into our R environment. st_read() function of the sf package is used to do this.\n\nshan_sf &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"myanmar_township_boundaries\") %&gt;% \n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\santhyats\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\nNext, we will import the aspatial data and save it in our R environment. I will use the read_csv() function of the readr package to do this.\n\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\nRows: 55 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): District Pcode, District Name, Township Pcode, Township Name\ndbl (7): Total households, Radio, Television, Land line phone, Mobile phone,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nThe unit of measurement of the values are number of household. Using these values directly will be bias by the underlying total number of households. In general, the townships with relatively higher total number of households will also have higher number of households owning radio, TV, etc.\nIn order to overcome this problem, we will derive the penetration rate of each ICT variable by using the code chunk below.\n\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*100) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*100) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*100) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*100) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*100) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*100) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\nWe can now view the summary statistics of the newly derived dataframe/\n\nsummary(ict_derived)\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 2.105  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:13.895  \n Median : 3559   Median : 244.0   Median : 316.0   Median :21.095  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :21.568  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:26.807  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :48.452  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :11.60   Min.   : 0.278   Min.   : 3.642   Min.   :0.3278  \n 1st Qu.:45.02   1st Qu.: 2.284   1st Qu.:19.014   1st Qu.:1.1832  \n Median :51.72   Median : 3.759   Median :30.527   Median :1.8970  \n Mean   :50.95   Mean   : 5.109   Mean   :31.405   Mean   :2.4393  \n 3rd Qu.:60.64   3rd Qu.: 6.972   3rd Qu.:42.843   3rd Qu.:2.9897  \n Max.   :84.25   Max.   :18.149   Max.   :73.543   Max.   :9.2402  \n  INTERNET_PR     \n Min.   : 0.1041  \n 1st Qu.: 0.8617  \n Median : 2.2829  \n Mean   : 3.0644  \n 3rd Qu.: 4.1281  \n Max.   :11.7985"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#overview",
    "title": "7 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "In this hands-on exercise, I will be exploring two different analysis methods:\n\nhierarchical cluster analysis; and\nspatially constrained cluster analysis.\n\nThese methods are mainly used to help achieve Geographical Segmentaion. Geographical segmentation is the process of splitting a region into geographical units based on certain factors or variables. Thus, in this exercise, I will be using geographically referenced multivariate data to split a region into different homogeneous segments.\n\n\nIn this exercise, the region of interest will be Shan State in Myanmar. I will be splitting this region into homogeneous segments on the basis of different means of Communication Technology: Radio, Television, Land Line Phone, Mobile Phone, Computer and Internet at home.\n\n\n\nTwo data sets will be used in this study. They are:\n\nMyanmar Township Boundary Data (i.e. myanmar_township_boundaries) : This is a GIS data in ESRI shapefile format. It consists of township boundary information of Myanmar. The spatial data are captured in polygon features.\nShan-ICT.csv: This is an extract of The 2014 Myanmar Population and Housing Census Myanmar at the township level.\n\n\n\n\nFirstly, we will install the necessary packages needed for this exercise. The R packages needed for this exercise are as follows:\n\nSpatial data handling\n\nsf, rgdal and spdep\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\nMultivariate data visualisation and analysis\n\ncoorplot, ggpubr, and heatmaply\n\nCluster analysis\n\ncluster\nClustGeo\n\n\n\npacman::p_load(sf, rgdal, sfdep, tidyverse, tmap, corrplot, ggpubr, heatmaply, cluster, ClustGeo, psych,factoextra)\n\nWarning: package 'rgdal' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\nWarning: 'BiocManager' not available.  Could not check Bioconductor.\n\nPlease use `install.packages('BiocManager')` and then retry.\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'rgdal'\n\n\nWarning in pacman::p_load(sf, rgdal, sfdep, tidyverse, tmap, corrplot, ggpubr, : Failed to install/load:\nrgdal\n\n\n\n\n\nFirst, I will be importing the geospatial data (Township Boundaries Shapefile) and saving it into our R environment. st_read() function of the sf package is used to do this.\n\nshan_sf &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"myanmar_township_boundaries\") %&gt;% \n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\santhyats\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\nNext, we will import the aspatial data and save it in our R environment. I will use the read_csv() function of the readr package to do this.\n\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\nRows: 55 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): District Pcode, District Name, Township Pcode, Township Name\ndbl (7): Total households, Radio, Television, Land line phone, Mobile phone,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nThe unit of measurement of the values are number of household. Using these values directly will be bias by the underlying total number of households. In general, the townships with relatively higher total number of households will also have higher number of households owning radio, TV, etc.\nIn order to overcome this problem, we will derive the penetration rate of each ICT variable by using the code chunk below.\n\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*100) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*100) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*100) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*100) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*100) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*100) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\nWe can now view the summary statistics of the newly derived dataframe/\n\nsummary(ict_derived)\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 2.105  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:13.895  \n Median : 3559   Median : 244.0   Median : 316.0   Median :21.095  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :21.568  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:26.807  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :48.452  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :11.60   Min.   : 0.278   Min.   : 3.642   Min.   :0.3278  \n 1st Qu.:45.02   1st Qu.: 2.284   1st Qu.:19.014   1st Qu.:1.1832  \n Median :51.72   Median : 3.759   Median :30.527   Median :1.8970  \n Mean   :50.95   Mean   : 5.109   Mean   :31.405   Mean   :2.4393  \n 3rd Qu.:60.64   3rd Qu.: 6.972   3rd Qu.:42.843   3rd Qu.:2.9897  \n Max.   :84.25   Max.   :18.149   Max.   :73.543   Max.   :9.2402  \n  INTERNET_PR     \n Min.   : 0.1041  \n 1st Qu.: 0.8617  \n Median : 2.2829  \n Mean   : 3.0644  \n 3rd Qu.: 4.1281  \n Max.   :11.7985"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#exploratory-data-analysis-eda",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#exploratory-data-analysis-eda",
    "title": "7 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "7.1 Exploratory Data Analysis (EDA)",
    "text": "7.1 Exploratory Data Analysis (EDA)\n\n7.1.1 Statistical Graphs\nWe can plot the distribution of the variables (i.e. Number of households with radio) by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\nHistogram is useful to identify the overall distribution of the data values (i.e. left skew, right skew or normal distribution). Here, I have used one of our newly derived columns, RADIO_PR, as an example.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\")\n\n\n\n\n\n\n\n\nWe can also make use of Boxplots to detect if there are outliers.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"navy\")\n\n\n\n\n\n\n\n\nFrom these plots, we can observe that the distribution of the penetration rates by Radio is slightly right-skewed and there is one value that is observed to be an outlier.\nI will now plot the histograms for the rest of the derived values by using the code chunk below. ggarrange() of the ggplot package is used to control the layout of the output plots.\n\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\")\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\")\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\")\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\")\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\")\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\")\n\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)\n\n\n\n\n\n\n\n\nWe can observe that the distribution of penetration rates of computers, internet and landline phones are very much right skewed. That of radio and mobile phone penetration rates are slightly right skewed while the distribution of penetration rates of TV appear to be more normally distributed.\n\n\n7.1.2 Chloropeth Maps\nBefore we can prepare the choropleth map, we need to combine both the geospatial data object (i.e. shan_sf) and aspatial data.frame object (i.e. ict_derived) into one. This will be performed by using the left_join function of dplyr package. The shan_sf simple feature data.frame will be used as the base data object and the ict_derived data.frame will be used as the join table.\nThe code chunks below is used to perform the task. The unique identifier used to join both data objects is TS_PCODE.\n\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n  \nwrite_rds(shan_sf, \"data/rds/shan_sf.rds\")\nshan_sf &lt;- read_rds(\"data/rds/shan_sf.rds\")\n\nTo have a quick look at the distribution of Radio penetration rate of Shan State at township level, a choropleth map will be prepared.\nThe code chunks below are used to prepare the choroplethby using the qtm() function of tmap package.\n\nqtm(shan_sf, \"RADIO_PR\")\n\n\n\n\n\n\n\n\nIn order to reveal the distribution shown in the choropleth map above are bias to the underlying total number of households at the townships, we will create two choropleth maps, one for the total number of households (i.e. TT_HOUSEHOLDS.map) and one for the total number of household with Radio (RADIO.map) by using the code chunk below.\n\nTT_HOUSEHOLDS.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\n\n\n\n\nNotice that the choropleth maps above clearly show that townships with relatively larger number ot households are also showing relatively higher number of radio ownership.\nNow let us plot the choropleth maps showing the dsitribution of total number of households and Radio penetration rate by using the code chunk below.\n\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)\n\n\n\n\n\n\n\n\nWe can now observe that they are not completely positively correlated. Areas with larger number of households do not necessarily have larger penetration rates."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#correlation-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#correlation-analysis",
    "title": "7 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "7.2 Correlation Analysis",
    "text": "7.2 Correlation Analysis\nBefore we perform cluster analysis, it is important for us to ensure that the cluster variables are not highly correlated.\nIn this section, you will learn how to use corrplot.mixed() function of corrplot package to visualise and analyse the correlation of the input variables.\n\ncluster_vars.cor = cor(ict_derived[,12:17])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\nThe correlation plot above shows that COMPUTER_PR and INTERNET_PR are highly correlated. This suggest that only one of them should be used in the cluster analysis instead of both."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#hierarchy-cluster-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#hierarchy-cluster-analysis",
    "title": "7 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "7.3 Hierarchy Cluster Analysis",
    "text": "7.3 Hierarchy Cluster Analysis\n\n7.3.1 Extracting Clustering Variables\n\ncluster_vars &lt;- shan_sf %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 28.61852 55.41313   3.530618  26.06944    1.215939\n2    Pindaya 41.74647 50.51300   1.983584  16.23917    1.288190\n3    Ywangan 48.45215 26.05734   1.193591  12.02856    0.441465\n4   Pinlaung 23.16499 54.17189   2.854454  24.94903    1.376255\n5     Mabein 44.94903 70.86423   7.275255  39.26089    1.645042\n6      Kalaw 28.07624 61.16204   4.206478  40.87951    2.963160\n7      Pekon 31.86118 53.58494   3.983270  21.48476    1.897032\n8   Lawksawk 38.71017 63.00035   3.151366  32.05686    2.176677\n9  Nawnghkio 34.93359 54.79456   3.844960  32.30201    1.576465\n10   Kyaukme 21.09548 60.11773   3.958267  37.24930    3.094709\n\n\nThe final clustering variables list does not include variable INTERNET_PR because it is highly correlated with variable COMPUTER_PR. Next, we will change the rows by township name instead of row number by using the code chunk below.\n\nrow.names(cluster_vars) &lt;- cluster_vars$\"TS.x\"\nhead(cluster_vars,10)\n\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 28.61852 55.41313   3.530618  26.06944    1.215939\nPindaya     Pindaya 41.74647 50.51300   1.983584  16.23917    1.288190\nYwangan     Ywangan 48.45215 26.05734   1.193591  12.02856    0.441465\nPinlaung   Pinlaung 23.16499 54.17189   2.854454  24.94903    1.376255\nMabein       Mabein 44.94903 70.86423   7.275255  39.26089    1.645042\nKalaw         Kalaw 28.07624 61.16204   4.206478  40.87951    2.963160\nPekon         Pekon 31.86118 53.58494   3.983270  21.48476    1.897032\nLawksawk   Lawksawk 38.71017 63.00035   3.151366  32.05686    2.176677\nNawnghkio Nawnghkio 34.93359 54.79456   3.844960  32.30201    1.576465\nKyaukme     Kyaukme 21.09548 60.11773   3.958267  37.24930    3.094709\n\n\nWe will now delete the TS.x field since it is redundant.\n\nshan_ict &lt;- select(cluster_vars, c(2:6))\nhead(shan_ict, 10)\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   28.61852 55.41313   3.530618  26.06944    1.215939\nPindaya   41.74647 50.51300   1.983584  16.23917    1.288190\nYwangan   48.45215 26.05734   1.193591  12.02856    0.441465\nPinlaung  23.16499 54.17189   2.854454  24.94903    1.376255\nMabein    44.94903 70.86423   7.275255  39.26089    1.645042\nKalaw     28.07624 61.16204   4.206478  40.87951    2.963160\nPekon     31.86118 53.58494   3.983270  21.48476    1.897032\nLawksawk  38.71017 63.00035   3.151366  32.05686    2.176677\nNawnghkio 34.93359 54.79456   3.844960  32.30201    1.576465\nKyaukme   21.09548 60.11773   3.958267  37.24930    3.094709\n\nwrite_rds(shan_ict, \"data/rds/shan_ict.rds\")\n\n\n\n7.3.2 Data Standardisation\nIn general, multiple variables will be used in cluster analysis. It is not unusual their values range are different. In order to avoid the cluster analysis result being baised to clustering variables with large values, it is useful to standardise the input variables before performing cluster analysis.\n\n7.3.2.1 Min-Max Standardisation\nIn the code chunk below, normalize() of heatmaply package is used to stadardise the clustering variables by using Min-Max method. The summary()  function is then used to display the summary statistics of the standardised clustering variables.\n\nshan_ict.std &lt;- normalize(shan_ict)\nsummary(shan_ict.std)\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000  \n\n\nThe value ranges of the clustering variables are now 0-1.\n\n\n7.3.2.2 Z-score Standardisation\nZ-score standardisation can be performed easily by using scale() of Base R. The code chunk below will be used to stadardisE the clustering variables by using Z-score method. describe() of the psych package is used instead of summary().\n\nshan_ict.z &lt;- scale(shan_ict)\ndescribe(shan_ict.z)\n\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13\n\n\n** It is important to note that Z-score standardisation method should only be used if all variables are assumed to be normally distributed.\n\n\n\n7.3.3 Visualising the standardised clustering variables\nBeside reviewing the summary statistics of the standardised clustering variables, it is also a good practice to visualise their distribution graphically. The code chunk below plot the scaled Radio_PR field.\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"lavender\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\n\nBoth methods of standardisation work well if the distribution of the original variable is similar/close to a normal distribution, and would give similar results after standardising.\nWe can also plot density maps to visualise the distribution.\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"lavender\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"lavender\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"lavender\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\n\n7.3.4 Computing Proximity Matrix\nIn R, many packages provide functions to calculate distance matrix. We will compute the proximity matrix by using dist() of R. dist() supports six distance proximity calculations, they are: euclidean, maximum, manhattan, canberra, binary and minkowski. The default is euclidean proximity matrix.\nThe code chunk below is used to compute the proximity matrix using euclidean method.\n\nproxmat &lt;- dist(shan_ict, method = 'euclidean')\nproxmat\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    17.186828                                                  \nYwangan    38.188259 25.731610                                        \nPinlaung    5.746286 20.863519 40.005492                              \nMabein     26.337099 31.345776 52.914689 31.266966                    \nKalaw      16.005997 30.251785 49.953297 18.196406 19.814085          \nPekon       5.961977 11.791580 33.650410  9.461225 28.226877 21.191531\nLawksawk   14.011550 20.432952 43.216535 19.257320 13.036525 14.001101\nNawnghkio   8.907103 18.064047 37.787702 13.927495 20.463154 12.774787\nKyaukme    14.402475 31.101487 50.589191 13.967966 26.488283  7.942225\nMuse       56.301629 70.411252 89.944137 57.158335 45.327410 41.246033\nLaihka     14.187227 29.861288 49.183321 10.110150 34.500222 19.734633\nMongnai    11.586190 25.849346 42.271934  6.452387 35.886053 20.034668\nMawkmai    43.492968 43.799577 39.703752 39.811227 69.324602 56.259200\nKutkai      9.761092 21.281775 36.011861  7.807733 34.055064 20.493018\nMongton    19.267961 28.335574 36.123257 16.342143 42.516902 26.787522\nMongyai    25.672744 28.741816 33.312853 22.056339 51.640426 38.674701\nMongkaing  50.361965 48.171125 36.498429 47.629056 74.717454 62.524500\nLashio     25.129457 39.898167 60.217475 26.251735 23.128227 10.669059\nMongpan    19.332063 33.572896 48.368125 19.278316 30.152942 11.469105\nMatman     40.125041 35.439039 25.522031 38.240610 63.753975 53.763884\nTachileik  52.963213 63.551774 80.744220 55.501039 36.532538 37.364459\nNarphan    40.615714 47.450209 45.295769 37.126895 63.034312 46.353759\nMongkhet   34.945980 39.174783 40.897731 30.586058 61.030557 46.552013\nHsipaw     11.818050 24.598884 38.863147  7.655260 36.642787 21.236711\nMonghsat   21.420854 31.471506 43.298028 16.044703 47.048135 31.796188\nMongmao    24.254541 40.221719 54.285957 21.758854 38.491867 19.518913\nNansang    10.491839 27.544246 47.277637  8.549572 28.792364 12.430500\nLaukkaing  56.827732 72.685355 90.882520 56.381750 52.067373 42.777791\nPangsang   27.267383 42.824958 55.682263 24.447146 41.854016 22.403998\nNamtu      17.962251 22.540822 44.466868 17.004533 36.616094 30.727427\nMonghpyak  17.776325 22.130579 36.744835 22.220020 21.269450 16.708436\nKonkyan    40.339082 50.086933 52.812533 36.544693 61.351206 44.475859\nMongping   26.512574 31.064850 33.794020 22.975261 51.816310 37.564739\nHopong     13.693111 22.306050 35.285844  9.814855 39.800917 26.416294\nNyaungshwe  9.938590 21.652463 40.711649 13.812050 21.021337  9.566782\nHsihseng   13.149728 17.200796 34.291035 11.161846 38.120187 28.711074\nMongla     38.430076 54.942389 72.816301 37.259678 40.609124 26.026411\nHseni      18.937188 33.798982 53.444679 20.447572 21.361240  3.852842\nKunlong    22.412169 35.547066 53.163089 19.476257 39.661508 27.301375\nHopang     28.105362 44.326362 59.619312 26.596924 36.855167 18.514704\nNamhkan    38.602794 54.381859 71.443173 38.278835 37.956035 24.639577\nKengtung   24.645691 38.568322 57.323173 26.348638 21.947071  8.829335\nLangkho    16.426299 32.328133 50.778892 16.844228 25.384371  6.719580\nMonghsu    10.915790 19.835391 34.042789  8.086834 36.719820 23.734578\nTaunggyi   39.984278 50.375471 69.798323 42.954386 22.624011 25.226066\nPangwaun   38.151246 51.213162 58.013146 35.637963 52.344632 33.835194\nKyethi     20.292551 17.554012 28.729358 18.947065 44.207679 36.017247\nLoilen     14.548666 29.361143 46.951621  9.156527 37.506406 21.719877\nManton     43.064070 40.242888 30.616379 40.583081 67.401120 56.016577\nMongyang   30.951302 47.593982 63.071590 28.603834 41.188352 23.356349\nKunhing    17.350424 31.823811 44.967218 14.158836 37.582140 19.763683\nMongyawng  21.421738 33.292193 57.056521 23.555497 19.349994 17.343078\nTangyan    19.592520 20.843740 32.477002 16.950567 44.859948 34.806617\nNamhsan    23.778494 22.841073 28.616305 21.433352 48.833873 38.588676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   15.751129                                                  \nNawnghkio  11.315370  9.082891                                        \nKyaukme    20.212206 18.629066 15.704230                              \nMuse       61.456144 51.013288 53.368806 43.475768                    \nLaihka     18.223667 24.674469 21.188187 12.824979 52.665211          \nMongnai    15.160031 24.171260 18.221245 14.245669 57.197975 10.053457\nMawkmai    41.600669 56.752693 49.515047 51.202846 92.693007 42.996554\nKutkai     11.498048 22.464646 14.744053 17.093318 59.290743 14.467198\nMongton    20.814888 31.107742 22.581118 22.928509 63.471074 21.207320\nMongyai    24.252301 39.126989 31.957938 33.927780 76.391399 26.413364\nMongkaing  48.023965 62.518712 54.669447 58.605094 99.566496 52.296309\nLashio     30.380011 22.075270 23.055346 12.995255 31.315288 23.864533\nMongpan    24.330037 22.854223 17.284425 11.037831 44.749969 21.076951\nMatman     36.825761 51.539711 44.405061 50.552285 92.911283 44.325453\nTachileik  57.339528 44.182621 47.045533 42.915493 22.119950 54.908985\nNarphan    41.684901 52.369580 43.559661 42.030003 77.040234 39.232592\nMongkhet   34.208722 48.741102 41.410280 40.903553 81.644931 32.497428\nHsipaw     14.537542 24.935081 17.609570 16.395741 59.103355 12.842987\nMonghsat   22.564279 35.231496 28.983220 25.325370 66.376026 15.893517\nMongmao    29.370625 31.464777 25.776465 14.609228 45.182530 18.599082\nNansang    16.037607 18.878869 15.113185  6.032773 48.935308  7.878999\nLaukkaing  62.482399 54.883928 55.265554 42.874978 14.926996 50.739700\nPangsang   32.181214 34.591486 28.710769 17.535273 46.024292 21.419291\nNamtu      16.502707 26.095300 25.752713 27.087277 65.916927 18.586794\nMonghpyak  19.093173 14.231691  9.303711 21.764419 53.943485 29.322640\nKonkyan    42.148797 52.031264 43.934272 39.379911 70.486973 35.175354\nMongping   25.968288 39.647081 31.614719 33.028984 74.444948 27.282761\nHopong     13.886577 27.491604 20.488286 21.884211 64.868011 15.748857\nNyaungshwe 13.931874 10.417830  4.326545 12.650414 50.588581 20.171653\nHsihseng   10.530573 25.711202 20.988026 25.027059 67.766886 17.589761\nMongla     44.120998 39.318472 38.140808 24.158966 25.680556 31.593218\nHseni      24.398001 17.150398 16.405304  8.120593 38.130567 20.449010\nKunlong    24.936301 31.830406 28.504608 21.563037 54.724297 12.268682\nHopang     33.638582 32.116462 27.984188 15.491633 37.744407 23.078652\nNamhkan    44.277120 37.941126 36.733575 24.781990 23.867060 34.243665\nKengtung   29.767761 20.938215 20.829647 13.623356 33.008211 25.823950\nLangkho    21.921623 19.030257 15.651662  5.167279 41.364173 16.094435\nMonghsu    11.384636 24.204063 17.009168 20.077712 63.321624 16.328926\nTaunggyi   44.066133 30.496838 34.479200 31.260547 25.081471 42.536916\nPangwaun   42.381347 45.302765 38.167478 30.831407 54.197887 35.178203\nKyethi     16.243575 31.774604 26.721607 32.814177 75.716745 25.583275\nLoilen     18.194596 26.529318 21.926405 14.692675 56.043400  5.969478\nManton     40.382131 55.113000 47.577296 52.286003 94.149778 45.830232\nMongyang   36.358788 36.337684 32.332123 18.859489 38.959919 22.971502\nKunhing    21.346379 27.868953 20.615773 14.500266 53.300162 14.203682\nMongyawng  24.843910 17.907229 22.061209 18.155295 42.237358 21.199976\nTangyan    16.779937 32.314701 26.907880 30.678359 73.693741 22.429176\nNamhsan    20.716559 36.284062 29.974967 34.785944 77.852971 27.379672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    37.450873                                                  \nKutkai      9.115307 36.495519                                        \nMongton    13.167061 31.335220 10.706341                              \nMongyai    20.323607 17.870499 18.894166 15.979790                    \nMongkaing  45.600842 13.329995 42.896133 36.550032 26.284016          \nLashio     27.086983 63.860773 28.982513 34.711584 46.636472 70.865819\nMongpan    17.809554 50.999632 18.518173 20.031803 34.639710 56.356780\nMatman     37.633870 14.783545 34.086349 30.304574 18.695158 13.551424\nTachileik  56.395232 91.938755 56.899109 60.876740 75.029555 96.714087\nNarphan    32.931700 27.375350 31.427683 21.597925 24.882845 28.565085\nMongkhet   27.576855 11.558388 27.391673 22.322828 10.498924 22.260577\nHsipaw      5.268195 35.134601  5.146282  9.069766 17.733790 42.377868\nMonghsat   12.525968 27.509705 15.432012 15.098053 12.735225 37.560376\nMongmao    18.829603 48.552853 20.469232 20.657001 33.561300 55.231959\nNansang     9.279567 46.241938 13.004549 19.958124 28.855962 54.216609\nLaukkaing  55.156800 88.251110 58.038112 60.466190 73.268347 95.411795\nPangsang   20.425746 48.414757 22.833583 21.077938 34.330638 54.840662\nNamtu      20.935473 42.795451 22.528268 30.871751 27.802761 52.504057\nMonghpyak  25.326470 53.671695 20.661627 25.804282 37.001575 56.821089\nKonkyan    32.882831 33.901411 31.060810 24.825265 28.787384 38.092091\nMongping   20.299615 19.431049 18.275266 11.986993  6.538727 25.718572\nHopong      9.153795 30.284362  7.345899 10.621031 12.462791 37.937916\nNyaungshwe 16.963695 50.299026 15.215482 21.972196 32.713541 55.732112\nHsihseng   14.236728 32.929477 12.821054 19.464317 16.227126 41.159788\nMongla     35.410985 68.688950 38.840984 41.106668 53.528615 76.148327\nHseni      21.681639 58.253670 22.937894 28.675945 40.823212 64.804408\nKunlong    20.292529 44.653763 20.454010 27.002165 29.936066 53.991284\nHopang     24.300945 56.124281 26.331986 27.350305 40.873288 62.617673\nNamhkan    37.005669 70.647792 39.248568 41.453594 55.062819 77.139688\nKengtung   27.228711 63.254638 27.919573 32.938387 46.039706 69.274693\nLangkho    17.467678 53.108019 18.051419 23.670878 35.895672 59.742714\nMonghsu     8.411238 33.207962  6.260859 10.704894 15.486049 40.071816\nTaunggyi   44.855282 81.074692 45.033382 50.840925 63.594105 86.621117\nPangwaun   31.213429 50.068857 32.180465 25.750434 39.407696 53.695736\nKyethi     21.050453 27.885535 18.423422 22.252947 13.779420 35.206533\nLoilen      5.841263 38.873386 13.156529 17.616001 22.479239 48.218190\nManton     39.154062 10.908779 36.182684 31.020581 19.559882  8.175337\nMongyang   26.039387 55.883162 28.533223 29.560023 41.431237 63.191325\nKunhing    11.055197 39.843973 10.884990 11.403609 23.899570 46.503971\nMongyawng  27.577546 62.004321 28.103383 37.522688 44.578964 70.098284\nTangyan    18.037471 26.266006 16.661820 19.888460 10.908506 34.856123\nNamhsan    21.810003 21.519289 19.132762 19.676188  7.735900 28.866231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    17.233279                                                  \nMatman     62.811049 49.481014                                        \nTachileik  31.195286 41.103849 89.012935                              \nNarphan    52.563854 37.113393 31.205193 76.029566                    \nMongkhet   53.444463 41.217123 20.302855 82.050164 21.728718          \nHsipaw     29.086435 17.952054 34.445451 57.618780 29.540170 25.380950\nMonghsat   37.786793 28.330992 31.359911 67.709508 27.821548 16.798445\nMongmao    21.423677 13.159966 50.159903 47.295568 33.142618 37.535820\nNansang    18.447950 14.477393 45.806573 48.677266 39.813308 36.099219\nLaukkaing  33.465738 43.558047 90.372094 32.506329 70.882887 76.906406\nPangsang   23.672516 14.023910 50.629940 48.131907 31.630314 37.558139\nNamtu      36.588437 35.291394 41.665397 65.956458 49.436143 35.599713\nMonghpyak  26.209281 18.785699 47.046845 44.404411 44.840651 46.263265\nKonkyan    48.551312 36.587588 39.240306 73.092980 15.882353 25.424424\nMongping   45.452548 31.847482 20.165224 72.708969 18.864567 11.380917\nHopong     34.531042 23.943845 29.184351 63.245718 29.440441 21.299485\nNyaungshwe 20.158191 13.729734 46.091883 44.581335 42.794086 41.708639\nHsihseng   36.900833 29.587811 30.402806 65.887060 37.752977 25.670338\nMongla     17.995877 25.320001 70.817595 34.733155 53.146949 57.440292\nHseni       7.941836 12.066550 56.464051 35.490063 47.412297 48.188406\nKunlong    29.523103 28.803320 46.827436 59.570536 41.307823 34.168641\nHopang     17.063913 13.562913 57.355355 40.382035 39.785908 45.151070\nNamhkan    17.327153 24.034131 71.542102 29.591660 53.685519 59.619944\nKengtung    5.985893 14.221554 61.301033 29.590429 50.540025 53.135998\nLangkho    11.518145  9.498486 51.886151 40.233622 42.065204 42.808061\nMonghsu    32.571557 21.625326 30.813805 60.502113 31.192379 24.773318\nTaunggyi   19.514541 31.981385 77.845810 15.084117 68.420905 71.280752\nPangwaun   36.245608 23.252209 52.343600 54.060474 26.464997 40.702947\nKyethi     44.710266 35.889620 23.383079 72.887329 37.490376 23.325039\nLoilen     26.892310 20.725000 40.656282 57.375476 35.479137 28.476895\nManton     64.666493 50.796808  5.952318 91.023039 28.026395 18.133894\nMongyang   20.933700 19.493467 58.561776 44.879027 40.139475 44.540621\nKunhing    25.510832 13.785278 40.366587 53.226397 28.162645 29.249814\nMongyawng  17.270139 27.515989 60.180824 43.210118 57.276394 52.291815\nTangyan    42.984475 34.039128 24.278233 71.984066 34.884991 20.149393\nNamhsan    47.204024 36.477086 18.009747 75.403913 31.654695 17.090848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   12.178922                                                  \nMongmao    18.599483 24.717708                                        \nNansang    12.024428 20.192690 16.499494                              \nLaukkaing  56.906099 62.644910 40.400848 48.060074                    \nPangsang   20.504337 25.637933  5.760801 19.336162 40.804016          \nNamtu      22.944658 23.178673 36.503882 21.761884 66.406286 39.297391\nMonghpyak  23.767919 35.684917 29.188846 22.752638 56.584279 31.511651\nKonkyan    29.674316 26.825060 28.187425 37.470456 63.592043 27.481900\nMongping   16.892101 14.095392 30.557166 28.736626 70.813447 30.833123\nHopong      6.286179 10.045714 24.416253 16.766291 62.848557 26.151075\nNyaungshwe 16.992664 28.637238 23.045003 13.118943 52.024345 25.777823\nHsihseng   13.654610 15.349551 31.198001 19.353779 67.074564 33.552974\nMongla     37.347509 42.900536 21.624705 28.945119 20.255831 21.788123\nHseni      23.148538 33.122632 18.467099 13.645492 39.174585 21.466375\nKunlong    20.510051 20.231862 22.443391 18.301388 52.188657 25.849342\nHopang     24.872536 31.764824  7.829342 19.647091 33.167199  9.257672\nNamhkan    38.279302 45.510875 22.332205 30.289487 19.646063 23.138484\nKengtung   28.408582 38.372138 20.758055 19.367980 35.148520 22.985484\nLangkho    18.305109 27.952329 13.450170  9.939859 41.041270 16.765920\nMonghsu     5.855724 13.724737 24.243599 15.359962 61.901766 26.052971\nTaunggyi   46.231183 56.288102 38.733906 36.504897 34.598041 40.559730\nPangwaun   29.812447 34.353898 18.740057 32.612960 47.063605 15.748757\nKyethi     19.517677 19.050609 37.789657 27.302385 74.999415 39.689963\nLoilen      9.804789 11.865144 19.026490  9.423028 53.557527 20.794433\nManton     35.960008 31.715603 50.379786 47.655544 90.738406 50.475214\nMongyang   26.710497 31.264797  9.106281 21.849285 32.619219 10.837735\nKunhing     9.077517 16.538834 10.391040 12.820940 50.041640 12.318870\nMongyawng  29.470967 36.440429 29.640789 19.111990 45.480044 33.616703\nTangyan    16.769794 14.459626 34.714183 24.970235 72.240954 36.476893\nNamhsan    19.447928 16.956962 37.171448 29.416284 76.045960 38.565526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  34.657799                                                   \nKonkyan    47.837690 46.339594                                         \nMongping   32.166441 35.476537 24.202901                               \nHopong     20.682668 26.795563 30.449287 13.400139                     \nNyaungshwe 27.141464 10.397300 43.235040 31.932583 20.932532           \nHsihseng   13.189940 28.537627 38.349700 19.964389  9.165458  22.580242\nMongla     48.349434 40.803397 46.809747 51.261580 43.231105  34.760273\nHseni      32.741448 20.026876 44.884563 39.558453 28.641193  13.086310\nKunlong    23.360474 35.744661 32.911433 30.905385 21.906817  28.513095\nHopang     40.824516 30.426577 34.818522 37.927212 30.977356  24.719891\nNamhkan    50.632466 37.950202 48.159596 52.374815 44.413246  33.332428\nKengtung   38.533554 22.147613 47.482621 44.280821 34.047382  17.775714\nLangkho    30.503473 20.027496 38.695022 34.396455 23.963685  12.826577\nMonghsu    20.964684 23.217823 33.172187 15.890478  4.340665  17.382799\nTaunggyi   51.872748 33.417439 65.056905 62.153039 51.376415  32.509619\nPangwaun   51.703554 38.195144 26.397576 34.037881 34.600673  35.292324\nKyethi     18.690932 32.816234 40.010989 18.743974 13.649038  28.806872\nLoilen     19.424075 29.699681 33.419820 23.199959 12.474445  20.640432\nManton     44.858230 50.220840 36.666876 20.048082 31.058885  48.879874\nMongyang   41.326052 35.817599 32.939338 38.780686 32.335704  29.429500\nKunhing    29.643996 25.074435 25.374202 21.259619 14.515617  18.997131\nMongyawng  26.224331 28.556475 52.238580 45.559190 32.659925  21.812104\nTangyan    17.869483 33.526416 36.746064 16.167411 10.682328  28.414692\nNamhsan    24.095555 35.270492 35.220115 13.023777 13.270541  31.591750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     47.866210                                                  \nHseni      31.274375 22.682048                                        \nKunlong    23.185967 34.646200 27.619175                              \nHopang     37.001334 14.702444 16.280878 27.134451                    \nNamhkan    49.209476  7.721355 21.211323 37.573885 14.618632          \nKengtung   37.072441 20.245004  6.612817 31.714187 16.429921 17.563015\nLangkho    27.627441 22.901675  6.666133 22.452741 13.424847 22.440029\nMonghsu     9.782470 42.451868 26.228462 23.989665 30.184458 43.132637\nTaunggyi   52.814240 29.709863 23.819389 47.129032 32.995252 25.729147\nPangwaun   43.306326 31.918643 33.070182 39.245403 20.698364 31.044067\nKyethi      8.404049 55.602500 38.833498 29.855859 44.048114 56.786202\nLoilen     15.884853 33.867408 22.710984 16.653599 24.289326 36.490647\nManton     33.487758 71.251416 58.463341 47.976855 57.752046 72.186149\nMongyang   38.259743 14.666661 21.019929 24.722785  6.925859 16.772448\nKunhing    22.015490 30.647566 20.647448 19.377551 17.296164 31.492119\nMongyawng  30.951462 31.557550 17.386004 24.039800 29.051360 32.121112\nTangyan     7.027241 52.680849 37.307575 26.807983 41.222167 54.264078\nNamhsan    12.574240 56.402740 41.196125 31.040560 44.051555 57.642717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    10.716213                                                  \nMonghsu    31.691914 22.184918                                        \nTaunggyi   18.628225 28.827478 48.691951                              \nPangwaun   33.748335 29.538434 34.338498 49.761245                    \nKyethi     44.426274 35.091512 14.661572 59.957407 47.662610          \nLoilen     28.222935 18.410672 13.155208 45.591617 33.169981 23.232965\nManton     63.199123 53.595620 33.076503 80.308034 51.079265 27.203299\nMongyang   21.708047 17.535413 32.395988 37.458247 22.525026 45.386726\nKunhing    24.595083 14.638284 14.678891 42.998509 22.909986 27.895182\nMongyawng  20.387199 18.611584 31.285089 28.773864 47.533116 38.771518\nTangyan    42.995076 33.202048 12.742203 59.265262 44.705580  4.779331\nNamhsan    46.620497 36.820978 15.322576 63.149232 44.858030  6.867929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     41.906087                                                  \nMongyang   24.676592 58.570558                                        \nKunhing    13.039336 41.049230 18.889405                              \nMongyawng  26.175211 62.943339 30.421734 29.535984                    \nTangyan    19.660826 27.182672 42.106366 24.974161 37.752279          \nNamhsan    24.215271 21.048485 45.097869 27.079121 43.002019  6.367613\n\n\n\n\n7.3.5 Computing Hierarchical Clustering\nIn R, there are several packages provide hierarchical clustering function. In this hands-on exercise, hclust() of R stats will be used. hclust() employed agglomeration method to compute the cluster. Eight clustering algorithms are supported, they are: ward.D, ward.D2, single, complete, average(UPGMA), mcquitty(WPGMA), median(WPGMC) and centroid(UPGMC).\nThe code chunk below performs hierarchical cluster analysis using ward.D method. The hierarchical clustering output is stored in an object of class hclust which describes the tree produced by the clustering process.\n\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\n\n\n\n\n7.3.6 Selecting Optimal Clustering Algorithm\nOne of the challenge in performing hierarchical clustering is to identify stronger clustering structures. The issue can be solved by using use agnes() function of cluster package. It functions like hclus(), however, with the agnes() function you can also get the agglomerative coefficient, which measures the amount of clustering structure found (values closer to 1 suggest strong clustering structure).\nThe code chunk below will be used to compute the agglomerative coefficients of all hierarchical clustering algorithms.\n\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\nWith reference to the output above, we can see that Ward’s method provides the strongest clustering structure among the four methods assessed. Hence, in the subsequent analysis, only Ward’s method will be used.\n\n\n7.3.7 Determining Optimal Clusters\nAnother technical challenge faced by data analyst in performing clustering analysis is to determine the optimal clusters to retain.\nThere are three commonly used methods to determine the optimal clusters, they are:\n\nElbow Method\nAverage Silhouette Method\nGap Statistic Method\n\n\n7.3.7.3 Gap Statistic Method\nThe gap statistic compares the total within intra-cluster variation for different values of k with their expected values under null reference distribution of the data. The estimate of the optimal clusters will be value that maximize the gap statistic (i.e., that yields the largest gap statistic). This means that the clustering structure is far away from the random uniform distribution of points.\nTo compute the gap statistic, clusGap() of cluster package will be used.\n\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 6.104544 6.378209 0.2736651 0.04460994\n [2,] 5.827444 6.048127 0.2206824 0.03880130\n [3,] 5.689680 5.899965 0.2102844 0.03362652\n [4,] 5.559639 5.778070 0.2184311 0.03784781\n [5,] 5.453876 5.675437 0.2215615 0.03897071\n [6,] 5.363009 5.585192 0.2221833 0.03973087\n [7,] 5.288334 5.503748 0.2154145 0.04054939\n [8,] 5.224095 5.429034 0.2049390 0.04198644\n [9,] 5.155439 5.358210 0.2027705 0.04421874\n[10,] 5.074827 5.291273 0.2164465 0.04540947\n\nfviz_gap_stat(gap_stat)\n\n\n\n\n\n\n\n\nWith reference to the gap statistic graph above, the recommended number of cluster to retain is 1. However, it is not logical to retain only one cluster. By examining the gap statistic graph, the 6-cluster gives the largest gap statistic and should be the next best cluster to pick.\n\n\n\n7.3.8 Interpreting the Dendograms\nIn the dendrogram displayed above, each leaf corresponds to one observation. As we move up the tree, observations that are similar to each other are combined into branches, which are themselves fused at a higher height.\nThe height of the fusion, provided on the vertical axis, indicates the (dis)similarity between two observations. The higher the height of the fusion, the less similar the observations are. Conclusions about the proximity of two observations can be drawn only based on the height where branches containing those two observations first are fused. We cannot use the proximity of two observations along the horizontal axis as a criteria of their similarity.\nIt’s also possible to draw the dendrogram with a border around the selected clusters by using rect.hclust() of R stats. The argument border is used to specify the border colors for the rectangles.\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n7.3.9 Visually-driven hierarchical clustering analysis\nIn this section, we will perform visually-driven hiearchical clustering analysis by using heatmaply package. With heatmaply, we are able to build both highly interactive cluster heatmap or static cluster heatmap.\n\n7.3.9.1 Transforming the Dataframe into a Matrix\nThe data was loaded into a data frame, but it has to be a data matrix to make a heatmap. The code chunk below will be used to transform shan_ict data frame into a data matrix.\n\nshan_ict_mat &lt;- data.matrix(shan_ict)\n\n\n\n7.3.9.2 Plotting interactive cluster heatmap\nWe will now plot the interactive cluster heatmap. heatmap() function of the heatmaply package will be used to achieve this.\n\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Purples,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )\n\n\n\n\n\n\n\n7.3.10 Mapping the clusters formed\nWith close examination of the dendragram above, we have decided to retain six clusters. cutree() of R Base will be used in the code chunk below to derive a 6-cluster model.\n\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\nThe output is called groups and it is a list object. In order to visualise the clusters, the groups object need to be appended onto shan_sf simple feature object.\nThe code chunk below form the join in three steps:\n\nthe groups list object will be converted into a matrix;\ncbind() is used to append groups matrix onto shan_sf to produce an output simple feature object called shan_sf_cluster; and\nrename of dplyr package is used to rename as.matrix.groups field as CLUSTER.\n\n\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\nFinally, we can use qtm() to plot a chloropeth map to show the clusters formed.\n\nqtm(shan_sf_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\n\nThe choropleth map above reveals the clusters are very fragmented. The is one of the major limitation when non-spatial clustering algorithm such as hierarchical cluster analysis method is used."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#learning-points",
    "href": "Take-Home_Exercises/Take-Home_Ex02/Take-Home_Ex02.html#learning-points",
    "title": "Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "2.6 Learning Points",
    "text": "2.6 Learning Points\nFrom this Take-Home Exercise, I have learnt:\n\nUsing appropriate methods to import files of different data types\nThe importance of looking through the data once it’s been downloaded to the R environment to see what needs to be processed\nThe importance of checking if the the downloaded data has been saved in an appropriate datatype that can be used in our analysis\nThe importance of knowing the geograpahical area and its features earlier. (Accounting for disconnected boundaries and islands)\nKnowing alternate methods of handling the case where spatial units have missing neighbours\nInterpreting Global and Local Moran I’s values in specific contexts\nInterpreting Lisa Maps and understanding their link to GI* statistic analysis"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "8 Geographical Segmentation with Spatially Constrained Clustering Techniques - Using the SKATER Approach",
    "section": "",
    "text": "In this hands-on exercise, I will be exploring another method to form spatially constrained clusters that we performed in the last hands-on exercise.\nIt will be the SKATER approach. SKATER stands for ‘Spatial K’luster Analysis by Tree Edge Removal’. This method allows us ti group spatial units based on both the similarity of a specific attribute and their spatial contiguity as well.\nIn order to do this, we will be using the skater() function of the spdep package.\n\n\nWe will be using the same datasets as we did in the last Handds-On Exercise. To recall,region of interest will be Shan State in Myanmar, and we aim to split this region into homogeneous segments on the basis of different means of Communication Technology: Radio, Television, Land Line Phone, Mobile Phone, Computer and Internet at home.\n\n\n\nThe two datasets used are:\n\nMyanmar Township Boundary Data (i.e. myanmar_township_boundaries) : This is a GIS data in ESRI shapefile format. It consists of township boundary information of Myanmar. The spatial data are captured in polygon features.\nShan-ICT.csv: This is an extract of The 2014 Myanmar Population and Housing Census Myanmar at the township level.\n\n\n\n\nFirstly, we will install the necessary packages needed for this exercise. The R packages needed for this exercise are as follows:\n\nSpatial data handling\n\nsf, rgdal and spdep\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\nMultivariate data visualisation and analysis\n\ncoorplot, ggpubr, and heatmaply\n\nCluster analysis\n\ncluster\nClustGeo\n\n\n\npacman::p_load(sf, rgdal, spdep, tidyverse, tmap, corrplot, ggpubr, heatmaply, cluster, ClustGeo, GGally)\n\nWarning: package 'rgdal' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\nWarning: 'BiocManager' not available.  Could not check Bioconductor.\n\nPlease use `install.packages('BiocManager')` and then retry.\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'rgdal'\n\n\nWarning in pacman::p_load(sf, rgdal, spdep, tidyverse, tmap, corrplot, ggpubr, : Failed to install/load:\nrgdal\n\n\n\n\n\nI will now import the geospatial and aspatial datasets into the R environment.\n\nshan_sf &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"myanmar_township_boundaries\") %&gt;% \n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\santhyats\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\nRows: 55 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): District Pcode, District Name, Township Pcode, Township Name\ndbl (7): Total households, Radio, Television, Land line phone, Mobile phone,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#overview",
    "title": "8 Geographical Segmentation with Spatially Constrained Clustering Techniques - Using the SKATER Approach",
    "section": "",
    "text": "In this hands-on exercise, I will be exploring another method to form spatially constrained clusters that we performed in the last hands-on exercise.\nIt will be the SKATER approach. SKATER stands for ‘Spatial K’luster Analysis by Tree Edge Removal’. This method allows us ti group spatial units based on both the similarity of a specific attribute and their spatial contiguity as well.\nIn order to do this, we will be using the skater() function of the spdep package.\n\n\nWe will be using the same datasets as we did in the last Handds-On Exercise. To recall,region of interest will be Shan State in Myanmar, and we aim to split this region into homogeneous segments on the basis of different means of Communication Technology: Radio, Television, Land Line Phone, Mobile Phone, Computer and Internet at home.\n\n\n\nThe two datasets used are:\n\nMyanmar Township Boundary Data (i.e. myanmar_township_boundaries) : This is a GIS data in ESRI shapefile format. It consists of township boundary information of Myanmar. The spatial data are captured in polygon features.\nShan-ICT.csv: This is an extract of The 2014 Myanmar Population and Housing Census Myanmar at the township level.\n\n\n\n\nFirstly, we will install the necessary packages needed for this exercise. The R packages needed for this exercise are as follows:\n\nSpatial data handling\n\nsf, rgdal and spdep\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\nMultivariate data visualisation and analysis\n\ncoorplot, ggpubr, and heatmaply\n\nCluster analysis\n\ncluster\nClustGeo\n\n\n\npacman::p_load(sf, rgdal, spdep, tidyverse, tmap, corrplot, ggpubr, heatmaply, cluster, ClustGeo, GGally)\n\nWarning: package 'rgdal' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\nWarning: 'BiocManager' not available.  Could not check Bioconductor.\n\nPlease use `install.packages('BiocManager')` and then retry.\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'rgdal'\n\n\nWarning in pacman::p_load(sf, rgdal, spdep, tidyverse, tmap, corrplot, ggpubr, : Failed to install/load:\nrgdal\n\n\n\n\n\nI will now import the geospatial and aspatial datasets into the R environment.\n\nshan_sf &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"myanmar_township_boundaries\") %&gt;% \n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\santhyats\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\nRows: 55 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): District Pcode, District Name, Township Pcode, Township Name\ndbl (7): Total households, Radio, Television, Land line phone, Mobile phone,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#skater-approach",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#skater-approach",
    "title": "8 Geographical Segmentation with Spatially Constrained Clustering Techniques - Using the SKATER Approach",
    "section": "8.1 SKATER Approach",
    "text": "8.1 SKATER Approach\n\n8.1.1 Computing the Neighbours List\nFirst, we will convert the shan_sf into a sp object as functions of spdep only support sp objects. We will use the as_Spatial() function of the sf package to achieve this.\n\nshan_sp &lt;- as_Spatial(shan_sf)\n\nNext, we will use poly2nb() of the spdep package to compute the neighbours list for the sp object.\n\nshan.nb &lt;- poly2nb(shan_sp)\n\nNow that we have the boundaries of Shan state and the neighbours, we can compute the centroids for the neighbours to be used in our analysis.\n\ncoords &lt;- st_coordinates(\n  st_centroid(st_geometry(shan_sf)))\n\nplot(st_geometry(shan_sf), \n     border=grey(.5))\nplot(shan.nb,\n     coords, \n     col=\"purple\", \n     add=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n8.1.2 Computing Minimum Spanning Tree\n\n8.1.2.1 Calculating Edge Costs\nThe nbcosts() function of the spdep package will be used to compute the costs of the edges. It is the distance between the nodes.\n\nlcosts &lt;- nbcosts(shan.nb, ict)\n\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\nWarning in dist(rbind(data[id, , drop = FALSE], data[id.neigh, , drop =\nFALSE]), : NAs introduced by coercion\n\n\nFor each observation, this gives the pairwise dissimilarity between its values on the five variables and the values for the neighbouring observation (from the neighbour list). Basically, this is the notion of a generalised weight for a spatial weights matrix.\nNext, We will incorporate these costs into a weights object in the same way as we did in the calculation of inverse of distance weights. In other words, we convert the neighbour list to a list weights object by specifying the just computed lcosts as the weights.\nIn order to achieve this, nb2listw() of spdep package is used as shown in the code chunk below.\nNote that we specify the style as B to make sure the cost values are not row-standardised.\n\nshan.w &lt;- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn      S0           S1           S2\nB 55 3025 5776751 525204394585 3.740688e+12\n\n\nNow, we can compute our minimum spanning tree. We will use the mstree() function of the spdep package to achieve this.\n\nshan.mst &lt;- mstree(shan.w)\n\nWe can check the dimensions of the spanning tree by using the dim() function.\n\ndim(shan.mst)\n\n[1] 54  3\n\n\nHere, we see that the dimension is 54 instead of 55, and that is due to the fact that the mst takes note of the number of links/edges between the nodes and not the nodes themselves. We cna now plot the mst.\n\nplot(st_geometry(shan_sf), \n                 border=gray(.5))\nplot.mst(shan.mst, \n         coords, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n\n\n\n\n\n\n\n\nThe plot method of MST also shows the number fo observations for each node. We also see that compared to the neighbours plot before, in this plot, there is only one line passung through and connecting all of the nodes.\n\n\n\n8.1.3 Computing Spatially constrained clusters using SKATER approach\nWe will now use the skater() function to compute the spatially constrained clusters. The skater() takes three mandatory arguments: - the first two columns of the MST matrix (i.e. not the cost), - the data matrix (to update the costs as units are being grouped), and - the number of cuts. Note: It is set to one less than the number of clusters. So, the value specified is not the number of clusters, but the number of cuts in the graph, one less than the number of clusters.\n\nclust6 &lt;- skater(edges = shan.mst[,1:2], \n                 data = ict[6:11], \n                 method = \"euclidean\", \n                 ncuts = 5)\n\nstr(clust6)\n\nList of 8\n $ groups      : num [1:55] 2 4 4 4 5 4 1 4 4 4 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:40] 34 27 33 41 36 40 16 15 24 13 ...\n  .. ..$ edge: num [1:39, 1:3] 27 33 34 41 36 40 15 16 13 13 ...\n  .. ..$ ssw : num 170696\n  ..$ :List of 3\n  .. ..$ node: num 1\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 53 22\n  .. ..$ edge: num [1, 1:3] 53 22 22547\n  .. ..$ ssw : num 22547\n  ..$ :List of 3\n  .. ..$ node: num [1:10] 6 8 25 9 2 46 31 4 10 3\n  .. ..$ edge: num [1:9, 1:3] 8 8 8 9 8 25 6 6 8 2 ...\n  .. ..$ ssw : num 59968\n  ..$ :List of 3\n  .. ..$ node: num 5\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 26\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 552126\n $ ssw         : num [1:6] 552126 453999 386398 308273 275862 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\nWe can also check the cluster assignments and the number of observations in each cluster using the codelines below.\n\nccs6 &lt;- clust6$groups\nccs6\n\n [1] 2 4 4 4 5 4 1 4 4 4 1 1 1 1 1 1 1 1 1 1 1 3 1 1 4 6 1 1 1 1 4 1 1 1 1 1 1 1\n[39] 1 1 1 1 1 1 1 4 1 1 1 1 1 1 3 1 1\n\n\n\ntable(ccs6)\n\nccs6\n 1  2  3  4  5  6 \n40  1  2 10  1  1 \n\n\nLastly, we can also plot the pruned tree that shows the five clusters on top of the townshop area.\n\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot(clust6, \n     coords, \n     cex.lab=.7,\n     groups.colors=c(\"navy\",\"purple\",\"red\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\n\n\n\n\n\n\n\n\n\n\n\n8.1.4 Visualising the clusters in choropleth maps\nWe will now plot the newly derived clusters using the SKATER approach.\n\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(ccs6)) %&gt;% \n  rename(`CLUSTER`=`as.matrix.ccs6.`)\n\ngroups_mat &lt;- as.matrix(clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\n\n\n\n\nFor easy comparison, it will be better to place both the hierarchical clustering and spatially constrained hierarchical clustering maps next to each other.\n\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#spatially-constrained-clustering-using-clustgeo-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#spatially-constrained-clustering-using-clustgeo-method",
    "title": "8 Geographical Segmentation with Spatially Constrained Clustering Techniques - Using the SKATER Approach",
    "section": "8.2 Spatially Constrained Clustering: Using ClustGeo Method",
    "text": "8.2 Spatially Constrained Clustering: Using ClustGeo Method\nClustGeo package is an R package specially designed to support the need of performing spatially constrained cluster analysis. More specifically, it provides a Ward-like hierarchical clustering algorithm called hclustgeo() including spatial/geographical constraints.\nIn the nutshell, the algorithm uses two dissimilarity matrices D0 and D1 along with a mixing parameter alpha, whereby the value of alpha must be a real number between [0, 1]. D0 can be non-Euclidean and the weights of the observations can be non-uniform. It gives the dissimilarities in the attribute/clustering variable space. D1, on the other hand, gives the dissimilarities in the constraint space. The criterion minimised at each stage is a convex combination of the homogeneity criterion calculated with D0 and the homogeneity criterion calculated with D1.\nThe idea is then to determine a value of alpha which increases the spatial contiguity without deteriorating too much the quality of the solution based on the variables of interest. This need is supported by a function called choicealpha().\n\n8.2.1 Ward-like Hierarchical Clustering\nClustGeo package provides function called hclustgeo() to perform a typical Ward-like hierarchical clustering just like hclust() you learned in previous section.\nTo perform non-spatially constrained hierarchical clustering, we only need to provide the function a dissimilarity matrix as shown in the code chunk below.\n\nproxmat &lt;- dist(ict, method='euclidean')\n\nWarning in dist(ict, method = \"euclidean\"): NAs introduced by coercion\n\nnongeo_cluster &lt;- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n8.2.2 Mapping the Clusters formed\n\ngroups &lt;- as.factor(cutree(nongeo_cluster, k=6))\n\nshan_sf_ngeo_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\n\n\n\n8.2.3 Spatially Constrained Hierarchical Clustering\nBefore we can proceed to derive the spatially constrained hierarchical clustering, a spatial distance matrix will be computed using the st_distance() of the sf package.\n\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\nNext, choicealpha() will be used to determine a suitable value for the mixing parameter alpha as shown in the code chunk below.\n\ncr &lt;- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBased on the plots, an alpha value of 0.3 will be used.\n\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.2)\n\nNext, I will use cutree() to derive the cluster object.\n\ngroups &lt;- as.factor(cutree(clustG, k=6))\n\nWe will then join back the group list with shan_sf polygon feature data frame by using the code chunk below.\n\nshan_sf_Gcluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\nFinally, we can plot the newly formed clusters.\n\nqtm(shan_sf_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html",
    "title": "In-class Exercise 9",
    "section": "",
    "text": "Firstly, we will download the necessary packages into our R environment.\n\npacman::p_load(spdep, sp, tmap, sf, ClustGeo, cluster, factoextra, NbClust, tidyverse, GGally)\n\n\n\n\nWe will now load in the data to our R environment. Since they are in the form of rds files, we will use the read_rds() function of the readr package.\n\nshan_sf&lt;- read_rds(\"data/rds/shan_sf.rds\")\nshan_ict &lt;- read_rds(\"data/rds/shan_ict.rds\")\nshan_sf_clusters &lt;- read_rds(\"data/rds/shan_sf_cluster.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#getting-started",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#getting-started",
    "title": "In-class Exercise 9",
    "section": "",
    "text": "Firstly, we will download the necessary packages into our R environment.\n\npacman::p_load(spdep, sp, tmap, sf, ClustGeo, cluster, factoextra, NbClust, tidyverse, GGally)\n\n\n\n\nWe will now load in the data to our R environment. Since they are in the form of rds files, we will use the read_rds() function of the readr package.\n\nshan_sf&lt;- read_rds(\"data/rds/shan_sf.rds\")\nshan_ict &lt;- read_rds(\"data/rds/shan_ict.rds\")\nshan_sf_clusters &lt;- read_rds(\"data/rds/shan_sf_cluster.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#hierarchical-clustering",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#hierarchical-clustering",
    "title": "In-class Exercise 9",
    "section": "9.1 Hierarchical Clustering",
    "text": "9.1 Hierarchical Clustering\nExplanation for the code chunks below:\nLine 1) The first step to compute hierarchical clusters is to create a proximity matrix. dist() function from base R is an example of a function that can be used to derive this proximity matrix. Proximity Matrix calculates the numerical distance between all the variables.\nLine 2) This line uses the hclust() function of base R functions, that helps us to derive the clusters from the proximity matrix.\nLine 3) cutree() is a function that directly consumes an object of the h-class (hierarchical cluster object). This line helps us to derive the groups we will be using for the dendrogram. This function then cuts the hierarchical clustering tree so as to get k specified number of clusters. The as.factor() function converts the segments of the cut tree into categorical values. value of k=6 is derived from the optimal number of clusters that we found using the gap statistic method.\nFor project, it is advisable to let the value of k be an user input, rather than hardcoding the value. A slider can be used on the user interface to enable them to toggle between different number of clusters.\n\nproxmat&lt;- dist(shan_ict, method = 'euclidean')\nhclust_ward&lt;-hclust(proxmat, method='ward.D')\ngroups&lt;- as.factor(cutree(hclust_ward, k = 6))\n\n\n9.1.1 Visualising the Hierarchical Clusters\nselect(-c()) will enable us to drop the columns selected.\n\nshan_sf_clusters&lt;- cbind(shan_sf, \n                as.matrix(groups)) %&gt;% \n  rename(`CLUSTER` = `as.matrix.groups.`) %&gt;% \n  select(-c(3:4, 7:9)) %&gt;% \n  rename(TS = TS.x)\n\nNow, we will plot the dendrogram to visualise our hierarchical clustering.\n\nplot(hclust_ward, cex=0.5)\nrect.hclust(hclust_ward, k=6, border = 2:5)\n\n\n\n\n\n\n\n\nWe will also plot out the clusters on our map and colour code them. We will use the qtm() function to achieve this.\n\nqtm(shan_sf_clusters, \"CLUSTER\")\n\n\n\n\n\n\n\n\nHowever, this output only considers the similarity in their attributes and does not consider the spatial relationship between the spatial units, and this shown by the clusters being spatially divided over the space. Hence, it will be better if we can come up with clusters that considers both the attributes and the spatial relationships between the spatial units. This is where the SKATER approach comes in."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#spatially-constrained-clustering-using-the-skater-approach",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#spatially-constrained-clustering-using-the-skater-approach",
    "title": "In-class Exercise 9",
    "section": "9.2 Spatially Constrained Clustering using the SKATER Approach",
    "text": "9.2 Spatially Constrained Clustering using the SKATER Approach\nWe will first compute the minimum spanning tree.\n\n9.2.3 Computing minimum spanning tree\n\nshan.nb &lt;- poly2nb(shan_sf)\nlcosts &lt;- nbcosts(shan.nb, shan_ict)\nshan.w &lt;- nb2listw(shan.nb, lcosts, style='B')\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n\n\n\nshan.mst &lt;- mstree(shan.w)\n\nWe are now ready to visualise our minimum spanning tree.\n\npts &lt;- st_coordinates(st_centroid(shan_sf))\n\nWarning: st_centroid assumes attributes are constant over geometries\n\nplot(st_geometry(shan_sf),\n     border = gray(.5))\n\nplot.mst(shan.mst, pts, col=\"blue\",\n         cex.lab = 0.7, \n         cex.circles = 0.005,\n         add = TRUE)\n\n\n\n\n\n\n\n\nNext, we will derive our clusters using the SKATER method by passing in our minimum spanning tree.\n\nskater.clust6 &lt;- skater(edges = shan.mst[, 1:2],\n                        data = shan_ict,\n                        method = \"euclidean\",\n                        ncuts = 5)\n\nWe can now map out our clusters with their neighbourhood relationships on the map once again.\n\nplot(st_geometry(shan_sf),\n     border=gray(.5))\n\nplot(skater.clust6, \n     pts, \n     cex.lab=.7, \n     groups.colors = c(\"red\", \"green\", \"brown\", \"blue\", \"pink\"),\n     cex.circles = 0.005,\n     add = TRUE)\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\n\n\n\n\n\n\n\n\n\nWe will further visualise our clusters on a choropleth map.\n\ngroups_mat = as.matrix(skater.clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_clusters, as.factor(groups_mat)) %&gt;% \n  rename(`skater_CLUSTER` = `as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"skater_CLUSTER\")\n\n\n\n\n\n\n\n\nSKATER approach to clustering is considered a hard clustering method as all classifications is based on the minimum spanning tree.\nClustGeo, on the other hand, is considered a soft clustering method as it allows us to choose the proportion of the attribute and spatial constraints to be used."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#spatially-constrained-clustering-method-using-clustgeo",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#spatially-constrained-clustering-method-using-clustgeo",
    "title": "In-class Exercise 9",
    "section": "9.3 Spatially Constrained Clustering Method using ClustGeo",
    "text": "9.3 Spatially Constrained Clustering Method using ClustGeo\n9.3.1 Calculating the distance matrix\n\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\n\ncr &lt;- choicealpha(proxmat, distmat, \n                  range.alpha = seq(0, 1, 0.1),\n                  K=6, graph = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe will need save the ClustGeo output\n\nclust6 &lt;- hclustgeo(proxmat, distmat, alpha=0.2)\ngroups &lt;- as.factor(cutree(clust6, k=6))\nshan_sf_ClustGeo &lt;- cbind(shan_sf, \n                          as.matrix(groups)) %&gt;% \n  rename(`clustGeo` = `as.matrix.groups.`)\n\nFinally, we can map our clusters on the map\n\nqtm(shan_sf_ClustGeo, \"clustGeo\")\n\n\n\n\n\n\n\n\n\n9.3.1 Characterising the clusters\n\nggparcoord(data = shan_sf_ClustGeo,\n           columns = c(17:20),\n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE,\n           title = \"Multiple Parallel Coordinates Plots od ICT Variables by Cluster\") +\n  facet_grid(~ clustGeo) + \n  theme(axis.text.x = element_text(angle = 30))"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Prototyping Modules for Shiny App for the Geospatial Analytics Project",
    "section": "",
    "text": "Our project aims to uncover the rate and distribution of different types of crimes in our neibhouring nation, Malaysia, using the following analysis methods: Exploratory Data Analysis, Exploratory Spatial Data Analysis and Clustering Analysis. This will help travellers and tourists visiting Malaysia to be more informed on their choice of vacation spots. It could also help policy makers decide where to focus their efforts in handling different types of crimes.\n\n\nMy responsibilities include:\n\nData Preparation\nBasic EDA plots of Peninsular Malaysia\nESDA Measures on Peninsular Malaysia\nHierarchical Clustering on Peninsular Malaysia, based on type of crime"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "title": "Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this exercise, we will learn how to come up with hedonic pricing models using GWR methods. The dependent variable is the resale prices of condominiums in 2015, and the independent variable consist of both location and structural factors."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#overview",
    "title": "Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this exercise, we will learn how to come up with hedonic pricing models using GWR methods. The dependent variable is the resale prices of condominiums in 2015, and the independent variable consist of both location and structural factors."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#data",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#data",
    "title": "Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.2 Data",
    "text": "9.2 Data\nWe will be using two datasets in this exercise:\n\nURA Master Plan subzone boundary in shapefile format (i.e. MP14_SUBZONE_WEB_PL)\ncondo_resale_2015 in csv format (i.e. condo_resale_2015.csv)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#getting-started",
    "title": "Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.3 Getting Started",
    "text": "9.3 Getting Started\n\n9.3.1 Loading in the R packages\nThe following are the R packages we will be using in this exercise.\n\nR package for building OLS and performing diagnostics tests\n\nolsrr\n\nR package for calibrating geographical weighted family of models\n\nGWmodel\n\nR package for multivariate data visualisation and analysis\n\ncorrplot\n\nSpatial data handling\n\nsf\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\n\n\npacman::p_load(sf, tidyverse, tmap, corrplot, GWmodel, olsrr, ggpubr, gtsummary, spdep)\n\n\n\n9.3.2 Loading in the datasets to the R environment\n\n9.3.2.1 Geospatial Data\nWe will first read in our geospatial data, which is the planning subzone boundary shapefile.\n\nmpsz&lt;- st_read(dsn = 'data/geospatial', layer= 'MP14_SUBZONE_WEB_PL')\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\santhyats\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex09\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nSince the imported shapefile does not have any EPSG information, we will update it with the correct EPSG code. We will use the st_transform() function of the sf package to do this.\n\nmpsz&lt;- st_transform(mpsz, 3414)\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nWe will also check the extent of mpsz using the st_bbox() function of the sf package.\n\nst_bbox(mpsz) \n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334 \n\n\n\n\n9.3.2.2 Aspatial Data\nNext, we will load in our aspatial data. The codes chunk below uses read_csv() function of readr package to import condo_resale_2015 into R as a tibble data frame called condo_resale.\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nRows: 1436 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (23): LATITUDE, LONGITUDE, POSTCODE, SELLING_PRICE, AREA_SQM, AGE, PROX_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAfter the dataset has been imported, we will check if it has been imported correctly using the glimpse() function.\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             &lt;dbl&gt; 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            &lt;dbl&gt; 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\nsummary() can be used to see the summary statistics for the tibble dataframe.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\nCurrently, the condo_resale tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts condo_resale data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\ncondo_resale.sf &lt;- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %&gt;%\n  st_transform(crs=3414)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#exploratory-data-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#exploratory-data-analysis",
    "title": "Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.4 Exploratory Data Analysis",
    "text": "9.4 Exploratory Data Analysis\nWe can plot the distribution of the SELLING_PRICE by plotting a histogram. To do this, we will use the gg_plot() and geom_histogram() functions of the ggplot2 package\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill='chocolate4')\n\n\n\n\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nStatistically, the skewed dsitribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n\ncondo_resale.sf &lt;- condo_resale.sf %&gt;%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nWe will now plot the LOG_SELLING_PRICE to observe the normalised distribution.\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"burlywood\")\n\n\n\n\n\n\n\n\nWe see that the distribution is relatively less skewed.\n\n9.4.1 Multiple Histogram Plots\nWe will do the same for the other variables as well. We will use ggarrange() of ggpubr package to arrange the histogram plots we have created.\n\nAREA_SQM &lt;- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nAGE &lt;- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_CBD &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_CHILDCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_ELDERLYCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_URA_GROWTH_AREA &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_HAWKER_MARKET &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_KINDERGARTEN &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_MRT &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_PARK &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nPROX_TOP_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"cornflowerblue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n\n\n\n\n\n\n\n\n\n\n9.4.2 Statistical Point Map\nWe will also look at the geospatial distribution of condominium resale prices in Singapore using functions of the tmap package.\nNext, we will create an interactive point symbol map.\n\ntm_shape(mpsz)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#hedonic-pricing-modelling-in-r",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#hedonic-pricing-modelling-in-r",
    "title": "Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.5 Hedonic Pricing Modelling in R",
    "text": "9.5 Hedonic Pricing Modelling in R\nIn this section, you will build hedonic pricing models for condominium resale units using lm() of R base.\n\n9.5.1 Simple Linear Regression Method\nFirst, we will build a simple linear regression model by using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable.\n\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nlm() returns an object of class lm. We can use the summary() function to see the information of the lm object.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n      *y = -258121.1 + 14719x1*\nThe R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nTo visualise the best fit curve on a scatterplot, we can incorporate lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nFigure above reveals that there are a few statistical outliers with relatively high selling prices.\n\n\n9.5.2 Multiple Linear Regression Method\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as multicollinearity in statistics.\nCorrelation matrix is commonly used to visualise the relationships between the independent variables. Beside the pairs() of R, there are many packages support the display of a correlation matrix. In this section, the corrplot package will be used.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in condo_resale data.frame.\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\n\n\n\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building.\nThe code below uses lm() once again to derive the multiple linear regression model.\n\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16\n\n\n\n9.5.2.1 Checking for multicolinearity\nolsrr is a package that provides a collection of very useful methods for building better multiple linear regression models:\n\ncomprehensive regression output\nresidual diagnostics\nmeasures of influence\nheteroskedasticity tests\ncollinearity diagnostics\nmodel fit assessment\nvariable contribution assessment\nvariable selection procedures\n\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\nols_vif_tol(condo.mlr)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8625928 1.159296\n2                   AGE 0.7026139 1.423257\n3              PROX_CBD 0.4605774 2.171188\n4        PROX_CHILDCARE 0.2981029 3.354546\n5      PROX_ELDERLYCARE 0.5922259 1.688545\n6  PROX_URA_GROWTH_AREA 0.6614127 1.511915\n7    PROX_HAWKER_MARKET 0.4373889 2.286295\n8     PROX_KINDERGARTEN 0.8370845 1.194622\n9              PROX_MRT 0.5049530 1.980382\n10            PROX_PARK 0.8018396 1.247132\n11     PROX_PRIMARY_SCH 0.3855782 2.593508\n12 PROX_TOP_PRIMARY_SCH 0.4968645 2.012621\n13   PROX_SHOPPING_MALL 0.4906426 2.038144\n14     PROX_SUPERMARKET 0.6152063 1.625471\n15        PROX_BUS_STOP 0.3320516 3.011580\n16          NO_Of_UNITS 0.6731165 1.485627\n17      FAMILY_FRIENDLY 0.7202230 1.388459\n18             FREEHOLD 0.6729095 1.486084\n\n\nSince the VIF of the independent variables are less than 10. We can safely conclude that there are no sign of multicollinearity among the independent variables.\n\n\n9.5.2.2 Checking for Non-Linearity\nIn multiple linear regression, it is important for us to test the assumption that linearity of the relationship between dependent and independent variables.\nIn the code chunk below, the ols_plot_resid_fit() of olsrr package is used to perform linearity assumption test.\n\nols_plot_resid_fit(condo.mlr)\n\n\n\n\n\n\n\n\nThe figure above reveals that most of the data points are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n9.5.2.3 Testing for Normality Assumption\nLastly, the code chunk below uses ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\nols_plot_resid_hist(condo.mlr)\n\n\n\n\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf you prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chunk below.\n\nols_test_normality(condo.mlr)\n\nWarning in ks.test.default(y, \"pnorm\", mean(y), sd(y)): ties should not be\npresent for the one-sample Kolmogorov-Smirnov test\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6836         0.0000 \nKolmogorov-Smirnov        0.1388         0.0000 \nCramer-von Mises         120.5692        0.0000 \nAnderson-Darling         68.3268         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\n\n9.5.2.4 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nmlr.output &lt;- as.data.frame(condo.mlr$residuals)\n\nNext, we will join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr$residuals) %&gt;%\nrename(`MLR_RES` = `condo.mlr.residuals`)\n\nNext, we will convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\nThe code chunk below will be used to perform the data conversion process.\n\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nNext, we will use tmap package to display the distribution of the residuals on an interactive map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(mpsz)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz is invalid (after reprojection). See sf::st_is_valid\n\n\nVariable(s) \"MLR_RES\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nThe figure above reveal that there is sign of spatial autocorrelation. To prove that our observation is indeed true, the Moran’s I test will be performed First, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA +\nPROX_HAWKER_MARKET + PROX_KINDERGARTEN + PROX_MRT + PROX_PARK +\nPROX_PRIMARY_SCH + PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL +\nPROX_SUPERMARKET + PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY +\nFREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.673, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.392527e-01    -7.134319e-03     3.520278e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution.\n\n\n\n9.5.3 Preparing Publication Quality Table: olsrr method\nWith reference to the report above, it is clear that not all the independent variables are statistically significant. We will revised the model by removing those variables which are not statistically significant.\nNow, we are ready to calibrate the revised model by using the code chunk below.\n\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.591 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\n9.5.4 Preparing Publication Quality Table: gtsummary method\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R.\nIn the code chunk below, tbl_regression() is used to create a well formatted regression report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\n(Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n\n\nAREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n\n\nAGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n\n\nPROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n\n\nPROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n\n\nPROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n\n\nPROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n\n\nPROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n\n\nPROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n\n\nPROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n\n\nPROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n\n\nPROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n\n\nNO_Of_UNITS\n-245\n-418, -73\n0.005\n\n\nFAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n\n\nFREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html",
    "title": "In-class Exercise 10",
    "section": "",
    "text": "pacman::p_load(olsrr, ggstatsplot, sf, tmap, tidyverse, gtsummary, performance, see, sfdep)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#loading-in-packages",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#loading-in-packages",
    "title": "In-class Exercise 10",
    "section": "",
    "text": "pacman::p_load(olsrr, ggstatsplot, sf, tmap, tidyverse, gtsummary, performance, see, sfdep)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#loading-in-the-datasets",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#loading-in-the-datasets",
    "title": "In-class Exercise 10",
    "section": "10.2 Loading in the datasets",
    "text": "10.2 Loading in the datasets\nWe will load in the necessary datasets:\n\nURA Master Plan subzone boundary in shapefile format (i.e. MP14_SUBZONE_WEB_PL) as mpsz\ncondo_resale_2015 in csv format (i.e. condo_resale_2015.csv) as condo_resale\n\n\ncondo_resale&lt;- read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nRows: 1436 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (23): LATITUDE, LONGITUDE, POSTCODE, SELLING_PRICE, AREA_SQM, AGE, PROX_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmpsz &lt;- st_read(dsn = 'data/geospatial', layer= 'MP14_SUBZONE_WEB_PL')\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\santhyats\\IS415-GAA\\In-class_Ex\\In-class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#geographically-weighted-regression-model",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#geographically-weighted-regression-model",
    "title": "In-class Exercise 10",
    "section": "10.3 Geographically Weighted Regression Model",
    "text": "10.3 Geographically Weighted Regression Model\n\n10.3.1 Correlation Analysis\n\nggcorrmat(condo_resale[, 5:23])\n\n\n\n\n\n\n\n\n\nggcorrmat() funcction takes in the datatable itself and does not need the datatable to be converted to a matrix, making it more flexible.\nunlike corrplot(), this plot also indicates the cases where the correlation is significant.\n\n\n\n10.3.2 Calibrating Multiple Linear Regression\n\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16\n\n\n\nCreate an lm object . Pass in the independent and dependent variables in the ‘formula’ attribute. Pass in the data in the ‘data’ attribute/.\nThe first Variable is the dependent variable and everything after the curly brace are the independent variables\nThe beta coefficients are the estimates\nNote that the data needs to be a dataframe.\nNegative residual values indicate that the model is Overfitted/ Overestimated. The estimates y values based on the model is much higher than the observed y values.\n\n\n\n10.3.3 Introducing the olsrr package\nolsrr helps us to beautify our regression model reports.\n\nols_regress(condo.mlr)\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     750799.558 \nR-Squared                    0.652       MSE                571258408962.149 \nAdj. R-Squared               0.647       Coef. Var                    43.160 \nPred R-Squared               0.637       AIC                       42970.175 \nMAE                     413425.809       SBC                       43075.567 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.515174e+15          18        8.417631e+13    147.352    0.0000 \nResidual      8.094732e+14        1417    571258408962.149                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     481728.405    121441.014                   3.967    0.000     243504.909     719951.900 \n            AREA_SQM      12708.324       369.590        0.580     34.385    0.000      11983.322      13433.326 \n                 AGE     -24440.816      2763.164       -0.165     -8.845    0.000     -29861.148     -19020.484 \n            PROX_CBD     -78669.779      6768.972       -0.268    -11.622    0.000     -91948.061     -65391.496 \n      PROX_CHILDCARE    -351617.910    109467.252       -0.092     -3.212    0.001    -566353.201    -136882.619 \n    PROX_ELDERLYCARE     171029.418     42110.506        0.083      4.061    0.000      88423.783     253635.053 \nPROX_URA_GROWTH_AREA      38474.534     12523.567        0.059      3.072    0.002      13907.809      63041.258 \n  PROX_HAWKER_MARKET      23746.098     29299.755        0.019      0.810    0.418     -33729.461      81221.657 \n   PROX_KINDERGARTEN     147468.986     82668.868        0.031      1.784    0.075     -14697.534     309635.506 \n            PROX_MRT    -314599.679     57947.441       -0.120     -5.429    0.000    -428271.672    -200927.687 \n           PROX_PARK     563280.499     66551.675        0.148      8.464    0.000     432730.102     693830.897 \n    PROX_PRIMARY_SCH     180186.083     65237.948        0.070      2.762    0.006      52212.744     308159.421 \nPROX_TOP_PRIMARY_SCH       2280.036     20410.435        0.002      0.112    0.911     -37757.880      42317.951 \n  PROX_SHOPPING_MALL    -206604.057     42840.595       -0.108     -4.823    0.000    -290641.863    -122566.252 \n    PROX_SUPERMARKET     -44991.803     77082.635       -0.012     -0.584    0.560    -196200.149     106216.542 \n       PROX_BUS_STOP     683121.347    138353.278        0.134      4.938    0.000     411722.087     954520.608 \n         NO_Of_UNITS       -231.180        89.033       -0.050     -2.597    0.010       -405.830        -56.530 \n     FAMILY_FRIENDLY     140340.770     47020.551        0.055      2.985    0.003      48103.399     232578.141 \n            FREEHOLD     359913.008     49220.224        0.140      7.312    0.000     263360.671     456465.345 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\nWe can either rewrite the entire formula in the function, or pass in the output from another regression object.\nFirst section provides the model summary, where we can see how the model performs. Next section provides the F statistics. Last section reflects the parameter estimates.\n\n\n\n10.3.4 Variable Selection\n\n10.3.4.1 Forward Stepwise\n\ncondo_fw_mlr &lt;- ols_step_forward_p(\n  condo.mlr,\n  p_val = 0.05,\n  details= FALSE)\n\ncondo_fw_mlr\n\n\n                                     Stepwise Summary                                      \n-----------------------------------------------------------------------------------------\nStep    Variable                   AIC          SBC         SBIC         R2       Adj. R2 \n-----------------------------------------------------------------------------------------\n 0      Base Model              44449.068    44459.608    40371.745    0.00000    0.00000 \n 1      AREA_SQM                43587.753    43603.562    39510.883    0.45184    0.45146 \n 2      PROX_CBD                43243.523    43264.602    39167.182    0.56928    0.56868 \n 3      PROX_PARK               43177.691    43204.039    39101.331    0.58915    0.58829 \n 4      FREEHOLD                43125.474    43157.092    39049.179    0.60438    0.60327 \n 5      AGE                     43069.222    43106.109    38993.167    0.62010    0.61878 \n 6      PROX_ELDERLYCARE        43046.515    43088.672    38970.548    0.62659    0.62502 \n 7      PROX_SHOPPING_MALL      43020.990    43068.417    38945.209    0.63367    0.63188 \n 8      PROX_URA_GROWTH_AREA    43009.092    43061.788    38933.407    0.63720    0.63517 \n 9      PROX_MRT                42999.058    43057.024    38923.483    0.64023    0.63796 \n 10     PROX_BUS_STOP           42984.951    43048.186    38909.581    0.64424    0.64175 \n 11     FAMILY_FRIENDLY         42981.085    43049.590    38905.797    0.64569    0.64296 \n 12     NO_Of_UNITS             42975.246    43049.021    38900.092    0.64762    0.64465 \n 13     PROX_CHILDCARE          42971.858    43050.902    38896.812    0.64894    0.64573 \n 14     PROX_PRIMARY_SCH        42966.758    43051.072    38891.872    0.65067    0.64723 \n-----------------------------------------------------------------------------------------\n\nFinal Model Output \n------------------\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.591 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\n10.3.4.2 Backward Step-wise\n\ncondo_bw_mlr &lt;- ols_step_backward_p(\n  condo.mlr,\n  p_val = 0.05,\n  details= FALSE)\n\ncondo_bw_mlr\n\n\n                                     Stepwise Summary                                      \n-----------------------------------------------------------------------------------------\nStep    Variable                   AIC          SBC         SBIC         R2       Adj. R2 \n-----------------------------------------------------------------------------------------\n 0      Full Model              42970.175    43075.567    38895.493    0.65179    0.64736 \n 1      PROX_TOP_PRIMARY_SCH    42968.188    43068.310    38893.478    0.65178    0.64761 \n 2      PROX_SUPERMARKET        42966.534    43061.387    38891.789    0.65170    0.64777 \n 3      PROX_HAWKER_MARKET      42965.558    43055.141    38890.764    0.65145    0.64777 \n 4      PROX_KINDERGARTEN       42966.758    43051.072    38891.872    0.65067    0.64723 \n-----------------------------------------------------------------------------------------\n\nFinal Model Output \n------------------\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.591 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\nFor backward step-wise, the algorithm starts with a full model and then eliminates one variable with each iteration.\n\n\n\n10.3.4.3 Bi-directional Step-wise\n\ncondo_bd_mlr &lt;- ols_step_both_p(\n  condo.mlr,\n  p_val = 0.05,\n  details= FALSE)\n\ncondo_bd_mlr\n\n\n                                       Stepwise Summary                                        \n---------------------------------------------------------------------------------------------\nStep    Variable                       AIC          SBC         SBIC         R2       Adj. R2 \n---------------------------------------------------------------------------------------------\n 0      Base Model                  44449.068    44459.608    40371.745    0.00000    0.00000 \n 1      AREA_SQM (+)                43587.753    43603.562    39510.883    0.45184    0.45146 \n 2      PROX_CBD (+)                43243.523    43264.602    39167.182    0.56928    0.56868 \n 3      PROX_PARK (+)               43177.691    43204.039    39101.331    0.58915    0.58829 \n 4      FREEHOLD (+)                43125.474    43157.092    39049.179    0.60438    0.60327 \n 5      AGE (+)                     43069.222    43106.109    38993.167    0.62010    0.61878 \n 6      PROX_ELDERLYCARE (+)        43046.515    43088.672    38970.548    0.62659    0.62502 \n 7      PROX_SHOPPING_MALL (+)      43020.990    43068.417    38945.209    0.63367    0.63188 \n 8      PROX_URA_GROWTH_AREA (+)    43009.092    43061.788    38933.407    0.63720    0.63517 \n 9      PROX_MRT (+)                42999.058    43057.024    38923.483    0.64023    0.63796 \n 10     PROX_BUS_STOP (+)           42984.951    43048.186    38909.581    0.64424    0.64175 \n 11     FAMILY_FRIENDLY (+)         42981.085    43049.590    38905.797    0.64569    0.64296 \n 12     NO_Of_UNITS (+)             42975.246    43049.021    38900.092    0.64762    0.64465 \n 13     PROX_CHILDCARE (+)          42971.858    43050.902    38896.812    0.64894    0.64573 \n 14     PROX_PRIMARY_SCH (+)        42966.758    43051.072    38891.872    0.65067    0.64723 \n 15     PROX_KINDERGARTEN (+)       42965.558    43055.141    38890.764    0.65145    0.64777 \n---------------------------------------------------------------------------------------------\n\nFinal Model Output \n------------------\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751161.087 \nR-Squared                    0.651       MSE                570600646491.086 \nAdj. R-Squared               0.648       Coef. Var                    43.135 \nPred R-Squared               0.638       AIC                       42965.558 \nMAE                     413583.799       SBC                       43055.141 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.514394e+15          15        1.009596e+14    176.936    0.0000 \nResidual      8.102529e+14        1420    570600646491.086                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     459826.675    114616.014                   4.012    0.000     234991.777     684661.574 \n            AREA_SQM      12720.174       368.610        0.581     34.509    0.000      11997.096      13443.252 \n            PROX_CBD     -75676.065      5816.474       -0.258    -13.011    0.000     -87085.870     -64266.259 \n           PROX_PARK     575749.528     65523.382        0.151      8.787    0.000     447216.504     704282.552 \n            FREEHOLD     360203.286     48768.851        0.140      7.386    0.000     264536.552     455870.021 \n                 AGE     -24697.719      2752.751       -0.167     -8.972    0.000     -30097.615     -19297.824 \n    PROX_ELDERLYCARE     182435.081     39910.469        0.088      4.571    0.000     104145.268     260724.893 \n  PROX_SHOPPING_MALL    -224513.955     36588.872       -0.117     -6.136    0.000    -296288.004    -152739.906 \nPROX_URA_GROWTH_AREA      40145.474     11758.824        0.062      3.414    0.001      17078.942      63212.007 \n            PROX_MRT    -311753.202     57670.032       -0.119     -5.406    0.000    -424880.814    -198625.590 \n       PROX_BUS_STOP     711858.014    135420.040        0.140      5.257    0.000     446213.188     977502.840 \n     FAMILY_FRIENDLY     144034.218     46874.683        0.057      3.073    0.002      52083.153     235985.283 \n         NO_Of_UNITS       -236.270        88.032       -0.051     -2.684    0.007       -408.956        -63.583 \n      PROX_CHILDCARE    -336118.857    108331.761       -0.088     -3.103    0.002    -548626.339    -123611.374 \n    PROX_PRIMARY_SCH     162183.897     60202.895        0.063      2.694    0.007      44087.730     280280.063 \n   PROX_KINDERGARTEN     141915.768     79726.155        0.029      1.780    0.075     -14477.927     298309.464 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\n\n10.3.5 Model Selection\n\nmetric &lt;- compare_performance(condo.mlr, \n                              condo_fw_mlr$model,\n                              condo_bw_mlr$model,\n                              condo_bd_mlr$model)\n\n\nThis wrapper creates a datatable that compares the metrics of the input models.\n\n\nmetric$Name &lt;- gsub(\".*\\\\\\\\([a-zA-Z0-9_]+)\\\\\\\\, \\\\\\\\model\\\\\\\\.*\", \"\\\\1\", metric$Name)\n\n\nThe model name in the generated datatable is not ideal. Hence, we need to performs some text cleaning to tidy up the model names.\n\nWe can now plot the metric to visualise the model performances better. Using plot() function of the see package will help us plot an appropriate plot based on the input.\n\nplot(metric)\n\n\n\n\n\n\n\n\n\nThe peaks indicate which measure the model performs better in\n\n\n10.3.5.1 Visualising Model Parameters\n\nggcoefstats(condo_bd_mlr$model, sort = 'ascending')\n\nNumber of labels is greater than default palette color count.\n• Select another color `palette` (and/or `package`).\n\n\n\n\n\n\n\n\n\n\n\n10.3.5.2 Checking for Multicollinearity\n\ncheck_collinearity(condo_bd_mlr$model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n                 Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n             AREA_SQM 1.15 [1.10, 1.24]         1.07      0.87     [0.81, 0.91]\n             PROX_CBD 1.60 [1.50, 1.73]         1.27      0.62     [0.58, 0.67]\n            PROX_PARK 1.21 [1.15, 1.30]         1.10      0.83     [0.77, 0.87]\n             FREEHOLD 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n                  AGE 1.41 [1.33, 1.52]         1.19      0.71     [0.66, 0.75]\n     PROX_ELDERLYCARE 1.52 [1.42, 1.63]         1.23      0.66     [0.61, 0.70]\n   PROX_SHOPPING_MALL 1.49 [1.40, 1.60]         1.22      0.67     [0.62, 0.72]\n PROX_URA_GROWTH_AREA 1.33 [1.26, 1.43]         1.16      0.75     [0.70, 0.79]\n             PROX_MRT 1.96 [1.83, 2.13]         1.40      0.51     [0.47, 0.55]\n        PROX_BUS_STOP 2.89 [2.66, 3.15]         1.70      0.35     [0.32, 0.38]\n      FAMILY_FRIENDLY 1.38 [1.30, 1.48]         1.18      0.72     [0.67, 0.77]\n          NO_Of_UNITS 1.45 [1.37, 1.56]         1.21      0.69     [0.64, 0.73]\n       PROX_CHILDCARE 3.29 [3.02, 3.59]         1.81      0.30     [0.28, 0.33]\n     PROX_PRIMARY_SCH 2.21 [2.05, 2.40]         1.49      0.45     [0.42, 0.49]\n    PROX_KINDERGARTEN 1.11 [1.06, 1.20]         1.05      0.90     [0.84, 0.94]\n\n\n\nThe check_collinearity() function helps to print out a report.\n\n\nmulti_col_plot = check_collinearity(condo_bd_mlr$model)\nplot(multi_col_plot) + \n    theme(axis.text.x = element_text(angle = 45, hjust = 1)) # to tidy xaxis\n\nVariable `Component` is not in your data frame :/\n\n\n\n\n\n\n\n\n\n\nWe can also pass in the report as an input to the plot() function to generate a visualisation of the collinearity between the variables.\n\n\n\n10.3.5.3 Linearity assumption test\n\nout &lt;- plot(check_model(condo_bd_mlr$model,\n                        panel = FALSE))\n\nFor confidence bands, please install `qqplotr`.\n\nout[[2]]\n\n\n\n\n\n\n\n\n\nIf the data points are seen to be aggregated towards the start like this, we can deduce that it conforms to the linearity assumption test.\n\n\n\n10.3.5.4 Normality Assumption Test\n\nnorm_check &lt;- check_normality(condo_bd_mlr$model)\nplot(norm_check)\n\nFor confidence bands, please install `qqplotr`.\n\n\n\n\n\n\n\n\n\n\nThis function generates a QQ plot.\nIf the data hovers around the 0 line, we will know that the data conforms to the normality assumption\n\n\n\n10.3.5.5 Checking for outliers\n\noutliers&lt;- check_outliers(condo_bd_mlr$model, method = 'cook')\noutliers\n\nOK: No outliers detected.\n- Based on the following method and threshold: cook (1).\n- For variable: (Whole model)\n\n\n\nThe check_outliers() function returns a statement to indicate the presence of outliers.\n\nWe can also plot this output using the plot() function of the see package to visualise the outliers more effectlively.\n\nplot(outliers)\n\n\n\n\n\n\n\n\n\n\n10.3.5.6 Spatial Non- Stationary Assumption\n\nThis is to check for spatial autocorrelation."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#overview",
    "href": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#overview",
    "title": "Prototyping Modules for Shiny App for the Geospatial Analytics Project",
    "section": "",
    "text": "Our project aims to uncover the rate and distribution of different types of crimes in our neibhouring nation, Malaysia, using the following analysis methods: Exploratory Data Analysis, Exploratory Spatial Data Analysis and Clustering Analysis. This will help travellers and tourists visiting Malaysia to be more informed on their choice of vacation spots. It could also help policy makers decide where to focus their efforts in handling different types of crimes.\n\n\nMy responsibilities include:\n\nData Preparation\nBasic EDA plots of Peninsular Malaysia\nESDA Measures on Peninsular Malaysia\nHierarchical Clustering on Peninsular Malaysia, based on type of crime"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#getting-started",
    "href": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#getting-started",
    "title": "Prototyping Modules for Shiny App for the Geospatial Analytics Project",
    "section": "10.1 Getting Started",
    "text": "10.1 Getting Started\n\n10.1.1 Loading in the packages\nFor our project, I will be needing a variety of packages, namely:\nsf: Used in spatial data wrangling\ntidyverse: Used in data wrangling for non-spatial data\ntmap: For functions relating to mapping point patterns\nsfdep: Functions that support Exploratory Data Analysis and is compatible with the sf and tidyverse packages\ncorrplot: package to help plot correlation matrices.\ncluster, NbClust: packges that will be helpful for our hierarchical clustering needs.\nggpubr, GGally: packages extended on/ based on ggplot2. They provide functions for plots.\n\npacman::p_load(spdep, sfdep, tmap, sf, ClustGeo, ggpubr, cluster, factoextra, NbClust, heatmaply, corrplot, psych, tidyverse, GGally)\n\n\n\n10.1.2 Loading in the datasets\nFor our project, we will be using three datasets:\n\ncrime_district.csv is a csv file containing data on crimes in Malaysia at the district level\npopulation_district.csv is a csv file containing data of the population of Malaysia, also at the district level\nMalaysia Admin 2 Boundary in shapefile format.\n\nI will be loading them into the R environment using read_csv() function of the readr package for the aspatial data and the st_read() function of the sf package for the geospatial data.\n\ncrime_district &lt;- read_csv(\"data/aspatial/crime_district.csv\")\n\nRows: 19152 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): state, district, category, type\ndbl  (1): crimes\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npopulation_district &lt;- read_csv(\"data/aspatial/population_district.csv\")\n\nRows: 319200 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): state, district, sex, age, ethnicity\ndbl  (1): population\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmsia_adm2_sf &lt;- st_read(dsn = 'data/geosp', layer = 'mys_admbnda_adm2_unhcr_20210211')\n\nReading layer `mys_admbnda_adm2_unhcr_20210211' from data source \n  `C:\\santhyats\\IS415-GAA\\Take-Home_Exercises\\Take-Home_Ex03\\data\\geosp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 144 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 99.64072 ymin: 0.855001 xmax: 119.2697 ymax: 7.380556\nGeodetic CRS:  WGS 84\n\n\n\n\n10.1.3 Data Wrangling\nThe crime dataset has rows that have crime data aggregated across all the districts, and across all the crime types. It also contains rows where the data is aggregated over just the crime types. All of these rows are grouped by their dates.\nHence, firstly, I will be formatting the crime data to only include the state names and their respective districts, and remove all the rows that contain aggregated values. Since population data is from 2020-2024, I will only keep the data for the years 2020-2023. All of this will be done using the filter() function.\n\ncrime_district &lt;- crime_district %&gt;% \n    filter(state != \"Malaysia\") %&gt;% \n    filter(category == \"assault\") %&gt;% \n    filter(district != \"All\") %&gt;% \n    filter(type != \"all\") %&gt;% \n   filter(year(ymd(date)) &gt;= 2020 & year(ymd(date)) &lt;= 2023)\n\nNext, I will format the population data. I will filter the dates to exclude 2024 since we do not have crime data for that year, and once again remove all the rows where data is aggregated over a certain characteristic.\n\nlibrary(dplyr)\nlibrary(lubridate)\n\n# population_state_filtered &lt;- \npop_data &lt;- population_district %&gt;%\n    filter(!year(ymd(date)) == 2024) %&gt;% \n    filter(sex == 'both' | sex == 'overall' ) %&gt;% \n    filter(age == 'overall') %&gt;% \n    filter(ethnicity == 'overall') %&gt;% \n    select(-c(4:6))\n\nAs for the boundary sf, I will drop all the columns that are not needed.\n\nadm2_sf &lt;- msia_adm2_sf %&gt;% select(-c(3:5, 8,9,11,12))\n\nNext, I used the unique() function on the district columns of all the sf dataframes to see the discrepancies in the district names and district data.\n\nunique(pop_data$district)\n\n  [1] \"Batu Pahat\"             \"Johor Bahru\"            \"Kluang\"                \n  [4] \"Kota Tinggi\"            \"Kulai\"                  \"Mersing\"               \n  [7] \"Muar\"                   \"Pontian\"                \"Segamat\"               \n [10] \"Tangkak\"                \"Baling\"                 \"Bandar Baharu\"         \n [13] \"Kota Setar\"             \"Kuala Muda\"             \"Kubang Pasu\"           \n [16] \"Kulim\"                  \"Langkawi\"               \"Padang Terap\"          \n [19] \"Pendang\"                \"Pokok Sena\"             \"Sik\"                   \n [22] \"Yan\"                    \"Bachok\"                 \"Gua Musang\"            \n [25] \"Jeli\"                   \"Kecil Lojing\"           \"Kota Bharu\"            \n [28] \"Kuala Krai\"             \"Machang\"                \"Pasir Mas\"             \n [31] \"Pasir Puteh\"            \"Tanah Merah\"            \"Tumpat\"                \n [34] \"Alor Gajah\"             \"Jasin\"                  \"Melaka Tengah\"         \n [37] \"Jelebu\"                 \"Jempol\"                 \"Kuala Pilah\"           \n [40] \"Port Dickson\"           \"Rembau\"                 \"Seremban\"              \n [43] \"Tampin\"                 \"Bentong\"                \"Bera\"                  \n [46] \"Cameron Highlands\"      \"Jerantut\"               \"Kuantan\"               \n [49] \"Lipis\"                  \"Maran\"                  \"Pekan\"                 \n [52] \"Raub\"                   \"Rompin\"                 \"Temerloh\"              \n [55] \"Bagan Datuk\"            \"Batang Padang\"          \"Hilir Perak\"           \n [58] \"Hulu Perak\"             \"Kampar\"                 \"Kerian\"                \n [61] \"Kinta\"                  \"Kuala Kangsar\"          \"Larut Dan Matang\"      \n [64] \"Manjung\"                \"Muallim\"                \"Perak Tengah\"          \n [67] \"Selama\"                 \"Perlis\"                 \"Barat Daya\"            \n [70] \"Seberang Perai Selatan\" \"Seberang Perai Tengah\"  \"Seberang Perai Utara\"  \n [73] \"Timur Laut\"             \"Beaufort\"               \"Beluran\"               \n [76] \"Kalabakan\"              \"Keningau\"               \"Kinabatangan\"          \n [79] \"Kota Belud\"             \"Kota Kinabalu\"          \"Kota Marudu\"           \n [82] \"Kuala Penyu\"            \"Kudat\"                  \"Kunak\"                 \n [85] \"Lahad Datu\"             \"Nabawan\"                \"Papar\"                 \n [88] \"Penampang\"              \"Pitas\"                  \"Putatan\"               \n [91] \"Ranau\"                  \"Sandakan\"               \"Semporna\"              \n [94] \"Sipitang\"               \"Tambunan\"               \"Tawau\"                 \n [97] \"Telupid\"                \"Tenom\"                  \"Tongod\"                \n[100] \"Tuaran\"                 \"Asajaya\"                \"Bau\"                   \n[103] \"Belaga\"                 \"Beluru\"                 \"Betong\"                \n[106] \"Bintulu\"                \"Bukit Mabong\"           \"Dalat\"                 \n[109] \"Daro\"                   \"Julau\"                  \"Kabong\"                \n[112] \"Kanowit\"                \"Kapit\"                  \"Kuching\"               \n[115] \"Lawas\"                  \"Limbang\"                \"Lubok Antu\"            \n[118] \"Lundu\"                  \"Maradong\"               \"Marudi\"                \n[121] \"Matu\"                   \"Miri\"                   \"Mukah\"                 \n[124] \"Pakan\"                  \"Pusa\"                   \"Samarahan\"             \n[127] \"Saratok\"                \"Sarikei\"                \"Sebauh\"                \n[130] \"Selangau\"               \"Serian\"                 \"Sibu\"                  \n[133] \"Simunjan\"               \"Song\"                   \"Sri Aman\"              \n[136] \"Subis\"                  \"Tanjung Manis\"          \"Tatau\"                 \n[139] \"Tebedu\"                 \"Telang Usan\"            \"Gombak\"                \n[142] \"Klang\"                  \"Kuala Langat\"           \"Kuala Selangor\"        \n[145] \"Petaling\"               \"Sabak Bernam\"           \"Sepang\"                \n[148] \"Ulu Langat\"             \"Ulu Selangor\"           \"Besut\"                 \n[151] \"Dungun\"                 \"Hulu Terengganu\"        \"Kemaman\"               \n[154] \"Kuala Nerus\"            \"Kuala Terengganu\"       \"Marang\"                \n[157] \"Setiu\"                  \"W.P. Kuala Lumpur\"      \"W.P. Labuan\"           \n[160] \"W.P. Putrajaya\"         \"Cameron Highland\"       \"Sp Selatan\"            \n[163] \"Sp Tengah\"              \"Sp Utara\"              \n\n\n\nunique(adm2_sf$ADM2_EN)\n\n  [1] \"Batu Pahat\"        \"Johor Bahru\"       \"Kluang\"           \n  [4] \"Kota Tinggi\"       \"Kulaijaya\"         \"Ledang\"           \n  [7] \"Mersing\"           \"Muar\"              \"Pontian\"          \n [10] \"Segamat\"           \"Baling\"            \"Bandar Baharu\"    \n [13] \"Kota Setar\"        \"Kuala Muda\"        \"Kubang Pasu\"      \n [16] \"Kulim\"             \"Langkawi\"          \"Padang Terap\"     \n [19] \"Pendang\"           \"Pokok Sena\"        \"Sik\"              \n [22] \"Yan\"               \"Bachok\"            \"Gua Musang\"       \n [25] \"Jeli\"              \"Kota Bharu\"        \"Kuala Krai\"       \n [28] \"Machang\"           \"Pasir Mas\"         \"Pasir Puteh\"      \n [31] \"Tanah Merah\"       \"Tumpat\"            \"WP. Kuala Lumpur\" \n [34] \"W.P. Labuan\"       \"Alor Gajah\"        \"Jasin\"            \n [37] \"Melaka Tengah\"     \"Jelebu\"            \"Jempol\"           \n [40] \"Kuala Pilah\"       \"Port Dickson\"      \"Rembau\"           \n [43] \"Seremban\"          \"Tampin\"            \"Bentong\"          \n [46] \"Bera\"              \"Cameron Highlands\" \"Jerantut\"         \n [49] \"Kuantan\"           \"Lipis\"             \"Maran\"            \n [52] \"Pekan\"             \"Raub\"              \"Rompin\"           \n [55] \"Temerloh\"          \"Batang Padang\"     \"Hilir Perak\"      \n [58] \"Ulu Perak\"         \"Kampar\"            \"Kerian\"           \n [61] \"Kinta\"             \"Kuala Kangsar\"     \"Larut Dan Matang\" \n [64] \"Manjung (Dinding)\" \"Perak Tengah\"      \"Perlis\"           \n [67] \"Barat Daya\"        \"S.P.Selatan\"       \"S.P. Tengah\"      \n [70] \"S.P. Utara\"        \"Timur Laut\"        \"Beaufort\"         \n [73] \"Beluran\"           \"Keningau\"          \"Kinabatangan\"     \n [76] \"Kota Belud\"        \"Kota Kinabalu\"     \"Kota Marudu\"      \n [79] \"Kuala Penyu\"       \"Kudat\"             \"Kunak\"            \n [82] \"Lahad Datu\"        \"Nabawan\"           \"Papar\"            \n [85] \"Penampang\"         \"Pitas\"             \"Putatan\"          \n [88] \"Ranau\"             \"Sandakan\"          \"Semporna\"         \n [91] \"Sipitang\"          \"Tambunan\"          \"Tawau\"            \n [94] \"Tenom\"             \"Tongod\"            \"Tuaran\"           \n [97] \"Asajaya\"           \"Bau\"               \"Belaga\"           \n[100] \"Betong\"            \"Bintulu\"           \"Dalat\"            \n[103] \"Daro\"              \"Julau\"             \"Kanowit\"          \n[106] \"Kapit\"             \"Kuching\"           \"Lawas\"            \n[109] \"Limbang\"           \"Lubok Antu\"        \"Lundu\"            \n[112] \"Marudi\"            \"Matu\"              \"Meradong\"         \n[115] \"Miri\"              \"Mukah\"             \"Pakan\"            \n[118] \"Samarahan\"         \"Saratok\"           \"Sarikei\"          \n[121] \"Selangau\"          \"Serian\"            \"Sibu\"             \n[124] \"Simunjan\"          \"Song\"              \"Sri Aman\"         \n[127] \"Tatau\"             \"Besut\"             \"Dungun\"           \n[130] \"Hulu Terengganu\"   \"Kemaman\"           \"Kuala Terengganu\" \n[133] \"Marang\"            \"Setiu\"             \"W.P. Putrajaya\"   \n[136] \"Gombak\"            \"Ulu Langat\"        \"Ulu Selangor\"     \n[139] \"Klang\"             \"Kuala Langat\"      \"Kuala Selangor\"   \n[142] \"Petaling\"          \"Sabak Bernam\"      \"Sepang\"           \n\n\n\nunique(crime_district$district)\n\n  [1] \"Batu Pahat\"             \"Iskandar Puteri\"        \"Johor Bahru Selatan\"   \n  [4] \"Johor Bahru Utara\"      \"Kluang\"                 \"Kota Tinggi\"           \n  [7] \"Kulaijaya\"              \"Ledang\"                 \"Mersing\"               \n [10] \"Muar\"                   \"Nusajaya\"               \"Pontian\"               \n [13] \"Segamat\"                \"Seri Alam\"              \"Baling\"                \n [16] \"Bandar Baharu\"          \"Kota Setar\"             \"Kuala Muda\"            \n [19] \"Kubang Pasu\"            \"Kulim\"                  \"Langkawi\"              \n [22] \"Padang Terap\"           \"Pendang\"                \"Sik\"                   \n [25] \"Yan\"                    \"Bachok\"                 \"Gua Musang\"            \n [28] \"Jeli\"                   \"Kota Bharu\"             \"Kuala Krai\"            \n [31] \"Machang\"                \"Pasir Mas\"              \"Pasir Puteh\"           \n [34] \"Tanah Merah\"            \"Tumpat\"                 \"Alor Gajah\"            \n [37] \"Jasin\"                  \"Melaka Tengah\"          \"Jelebu\"                \n [40] \"Jempol\"                 \"Kuala Pilah\"            \"Nilai\"                 \n [43] \"Port Dickson\"           \"Rembau\"                 \"Seremban\"              \n [46] \"Tampin\"                 \"Bentong\"                \"Bera\"                  \n [49] \"Cameron Highlands\"      \"Jerantut\"               \"Kuala Lipis\"           \n [52] \"Kuantan\"                \"Maran\"                  \"Pekan\"                 \n [55] \"Raub\"                   \"Rompin\"                 \"Temerloh\"              \n [58] \"Batu Gajah\"             \"Gerik\"                  \"Hilir Perak\"           \n [61] \"Ipoh\"                   \"Kampar\"                 \"Kerian\"                \n [64] \"Kuala Kangsar\"          \"Manjung\"                \"Pengkalan Hulu\"        \n [67] \"Perak Tengah\"           \"Selama\"                 \"Sungai Siput\"          \n [70] \"Taiping\"                \"Tanjong Malim\"          \"Tapah\"                 \n [73] \"Arau\"                   \"Kangar\"                 \"Padang Besar\"          \n [76] \"Barat Daya\"             \"Seberang Perai Selatan\" \"Seberang Perai Tengah\" \n [79] \"Seberang Perai Utara\"   \"Timur Laut\"             \"Beaufort\"              \n [82] \"Beluran\"                \"Keningau\"               \"Kota Belud\"            \n [85] \"Kota Kinabalu\"          \"Kota Kinabatangan\"      \"Kota Marudu\"           \n [88] \"Kudat\"                  \"Kunak\"                  \"Lahad Datu\"            \n [91] \"Papar\"                  \"Penampang\"              \"Ranau\"                 \n [94] \"Sandakan\"               \"Semporna\"               \"Sipitang\"              \n [97] \"Tawau\"                  \"Tenom\"                  \"Tuaran\"                \n[100] \"W.P. Labuan\"            \"Bau\"                    \"Belaga\"                \n[103] \"Betong\"                 \"Bintulu\"                \"Dalat\"                 \n[106] \"Julau\"                  \"Kanowit\"                \"Kapit\"                 \n[109] \"Kota Samarahan\"         \"Kuching\"                \"Lawas\"                 \n[112] \"Limbang\"                \"Lubok Antu\"             \"Lundu\"                 \n[115] \"Marudi\"                 \"Matu Daro\"              \"Meradong\"              \n[118] \"Miri\"                   \"Mukah\"                  \"Padawan\"               \n[121] \"Saratok\"                \"Sarikei\"                \"Serian\"                \n[124] \"Sibu\"                   \"Simunjan\"               \"Song\"                  \n[127] \"Sri Aman\"               \"Tatau\"                  \"Ampang Jaya\"           \n[130] \"Gombak\"                 \"Hulu Selangor\"          \"Kajang\"                \n[133] \"Klang Selatan\"          \"Klang Utara\"            \"Kuala Langat\"          \n[136] \"Kuala Selangor\"         \"Petaling Jaya\"          \"Sabak Bernam\"          \n[139] \"Sepang\"                 \"Serdang\"                \"Sg. Buloh\"             \n[142] \"Shah Alam\"              \"Subang Jaya\"            \"Sungai Buloh\"          \n[145] \"Besut\"                  \"Dungun\"                 \"Hulu Terengganu\"       \n[148] \"Kemaman\"                \"Kuala Terengganu\"       \"Marang\"                \n[151] \"Setiu\"                  \"Brickfields\"            \"Cheras\"                \n[154] \"Dang Wangi\"             \"Sentul\"                 \"W.P. Putrajaya\"        \n[157] \"Wangsa Maju\"           \n\n\nAs expected, all the dataframes contained different numbers of districts. There were also other issues such as differing spelling/naming conventions, splitting of districts into north/south regions, and districts missing from the boundary sf that were present in the aspatial datasets.\nAs little can be done in salvaging districts that were not present in the boundary layer, I decided to handle the other forms of discrepancies.\nFirst, I will convert all the district names to lowercase letters to eliminate any errors on that front, and to standardise the naming conventions.\n\ncrime_district$district &lt;- tolower(trimws(crime_district$district))\nadm2_sf$ADM2_EN &lt;- tolower(trimws(adm2_sf$ADM2_EN))\npop_data$district &lt;- tolower(trimws(pop_data$district))\n\nSince our main focus was crime data and it was the dataframe that will be mutually connected to both the boundary layer and the population data (phrase better), we will use the districts in the crime dataframe as a guide to formatting the other tables.\nWe first started off by handling the very obvious differences that could be observed through visual inspection as well as through the use of the unique function. We noticed that 2 districts, Johor Bahru and Klang, were split up in the crime dataframe. Hence, we merged these rows and summed up their crime number values.\nstr_detect() function of the stringr package was used to identify rows that contained the given input string. In our case, it was the district name. mutate() was then used to change the values of these rows. Since this produces a new dataframe, another dataframe was created with the rest of the values, before all three were bound together.\n\nlibrary(stringr)\ncrime_johor&lt;- crime_district %&gt;%\n  filter(str_detect(district,\"johor bahru\")) %&gt;%\n  mutate(district = 'johor bahru') %&gt;%\n  group_by(state, district,type, date) %&gt;%\n  summarise(crimes = sum(crimes))\n\n`summarise()` has grouped output by 'state', 'district', 'type'. You can\noverride using the `.groups` argument.\n\ncrime_klang&lt;- crime_district %&gt;%\n  filter(str_detect(district,\"klang\")) %&gt;%\n  mutate(district = 'klang') %&gt;%\n  group_by(state, district,type, date) %&gt;%\n  summarise(crimes = sum(crimes))\n\n`summarise()` has grouped output by 'state', 'district', 'type'. You can\noverride using the `.groups` argument.\n\nother_rows &lt;- crime_district %&gt;% \n  filter(!str_detect(district, \"johor bahru\"))\n\ncrime_district &lt;- bind_rows(crime_johor, crime_klang, other_rows) %&gt;% \n  select(-c(6)) %&gt;% \n  mutate(category = 'assault') \n\nUpon further examination, there were more discrepancies that I found so I sought to change them.\n\ncrime_district&lt;- crime_district%&gt;% \n  mutate(district = ifelse(district == \"cameron highland\", \"cameron highlands\", district)) %&gt;% \n  mutate(district = ifelse(district == \"kuala lipis\", \"lipis\", district)) %&gt;% \n  mutate(district = ifelse(district == \"kota kinabatangan\", \"kinabatangan\", district)) %&gt;% \n  mutate(district = ifelse(district == \"seberang perai tengah\", \"s.p. tengah\", district)) %&gt;% \n  mutate(district = ifelse(district == \"seberang perai utara\", \"s.p. utara\", district)) %&gt;% \n  mutate(district = ifelse(district == \"seberang perai selatan\", \"s.p.selatan\", district)) %&gt;% \n  mutate(district = ifelse(district == \"petaling jaya\", \"petaling\", district)) %&gt;% \n   mutate(district = ifelse(district == \"matu daro\", \"matu\", district)) %&gt;% \n  mutate(state = ifelse(district == \"w.p. labuan\", \"Sabah\", state))\n   \n  \n  \n\npop_data &lt;- pop_data %&gt;% \n  mutate(district = ifelse(district == \"kulai\", \"kulaijaya\", district)) %&gt;% \n  mutate(district = ifelse(district == \"sp tengah\", \"s.p. tengah\", district)) %&gt;% \n  mutate(district = ifelse(district == \"sp utara\", \"s.p. utara\", district)) %&gt;% \n  mutate(district = ifelse(district == \"sp selatan\", \"s.p.selatan\", district)) %&gt;% \n  mutate(district = ifelse(district == \"cameron highland\", \"cameron highlands\", district))\n\n\nadm2_sf &lt;- adm2_sf %&gt;% \n  mutate(ADM1_EN = ifelse(ADM2_EN == \"w.p. labuan\", \"Sabah\", ADM1_EN))\n\n\npop_crime&lt;- left_join(pop_data, crime_district, by= \"district\")\n\nWarning in left_join(pop_data, crime_district, by = \"district\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 57 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\npop_crime_na&lt;- pop_crime[rowSums(is.na(pop_crime)) &gt; 0,]\n\ndrop_list_pop &lt;- pop_crime_na$district\npop_data &lt;- pop_data %&gt;%\n  filter(!(district %in% drop_list_pop))\n\npop_crime2&lt;-left_join(crime_district, pop_data, by=\"district\")\n\nWarning in left_join(crime_district, pop_data, by = \"district\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 2 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\npop_crime_na2 &lt;-pop_crime2[rowSums(is.na(pop_crime2)) &gt; 0,]\n\ndrop_list_pop &lt;- pop_crime_na2$district\ncrime_district &lt;- crime_district %&gt;%\n  filter(!(district %in% drop_list_pop))\n\nNext, I will left join the boundary and the population dataframes to the crime dataframe and vice versa, and remove all the rows that do not match.\n\nadm_crime &lt;- left_join(adm2_sf, crime_district, by= c(\"ADM2_EN\" = \"district\"))\nadm_crime_na &lt;- adm_crime[rowSums(is.na(adm_crime)) &gt; 0,]\n\ndrop_list &lt;- adm_crime_na$ADM2_EN\nadm2_sf &lt;- adm2_sf %&gt;% \n  filter(!(ADM2_EN %in% drop_list))\n\nadm_crime2 &lt;- left_join(crime_district, adm2_sf, by= c(\"district\" = \"ADM2_EN\"))\nadm_crime_na2 &lt;- adm_crime2[rowSums(is.na(adm_crime2)) &gt; 0,]\n\ndrop_list &lt;- adm_crime_na2$district\ncrime_district &lt;- crime_district %&gt;% \n  filter(!(district %in% drop_list))\n\nFinally, we then calculated a ratio that is representative of the crime rate in each district by dividing the number of crimes in each district by the population figures for that district and multiplying this by 1000. We then added a new column to the boundary sf and the crime_rate sf to indicate if the district belonged to the West or Peninsular region of Malaysia. Since the West and Peninsular regions are not connected by admin borders, we would have to process these regions separately for our analysis.\n\ncrime_distict &lt;- crime_district %&gt;%  ungroup()\nrate_crime_district &lt;- crime_district %&gt;% \n    left_join(pop_data, by = c(\"district\", \"state\", \"date\")) %&gt;% \n    mutate(crime_rate = (crimes / population) * 1000)\n\n# assigning Penisular , East region\nrate_crime_district &lt;- rate_crime_district %&gt;% \n    mutate(region = case_when(\n        state %in% c(\"Sabah\", \"Sarawak\") ~ \"East\",\n        TRUE ~ \"Peninsular\"\n  ))\nadm2_sf &lt;- adm2_sf %&gt;%\n  mutate(region = case_when(\n        ADM1_EN %in% c(\"Sabah\", \"Sarawak\") ~ \"East\",\n        TRUE ~ \"Peninsular\"))\n\ncrime_boundary &lt;- left_join(crime_district, adm2_sf, by = c(\"district\" = \"ADM2_EN\")) %&gt;% \n  select(-c(7:12))\nwrite_rds(crime_boundary, \"data/rds/crime_boundary.rds\")\n\ncrime_boundary&lt;- crime_boundary %&gt;% \n  ungroup()\n\nrate_crime_district_bound &lt;- left_join(rate_crime_district, adm2_sf, by = c(\"district\" = \"ADM2_EN\")) %&gt;% \n  select(-c(10:15))\n\n\npop_data &lt;- pop_data %&gt;% ungroup()\nadm2_sf &lt;- adm2_sf %&gt;%  ungroup()\nrate_crime_district &lt;- rate_crime_district %&gt;%  ungroup()\ncrime_distict &lt;- crime_district %&gt;%  ungroup()\nrate_crime_district_bound&lt;- rate_crime_district_bound %&gt;%  ungroup()\n\nFinally, I will write them into rds files for easier access.\n\nwrite_rds(pop_data, \"data/rds/pop_data.rds\")\nwrite_rds(crime_district, \"data/rds/crime_district.rds\")\nwrite_rds(adm2_sf, \"data/rds/adm2_sf.rds\")\nwrite_rds(rate_crime_district, \"data/rds/rate_crime_district.rds\")\nwrite_rds(crime_boundary, \"data/rds/crime_boundary.rds\")\nwrite_rds(rate_crime_district_bound, \"data/rds/rate_crime_district_bounds.rds\")\n\n\npop_data&lt;- read_rds(\"data/rds/pop_data.rds\")\ncrime_district &lt;- read_rds(\"data/rds/crime_district.rds\")\nadm2_sf &lt;- read_rds(\"data/rds/adm2_sf.rds\")\nrate_crime_district&lt;-read_rds(\"data/rds/rate_crime_district.rds\")\ncrime_boundary &lt;- read_rds(\"data/rds/crime_boundary.rds\")\nrate_crime_district_bound &lt;- read_rds(\"data/rds/rate_crime_district_bounds.rds\")"
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#exploratory-data-analysis",
    "href": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#exploratory-data-analysis",
    "title": "Prototyping Modules for Shiny App for the Geospatial Analytics Project",
    "section": "10.2 Exploratory Data Analysis",
    "text": "10.2 Exploratory Data Analysis\n\n10.2.1 Interactive Choropleth Map\nFor our EDA portion, I will be plotting an interactive choropleth map.\n\ncrime_boundary_west &lt;- crime_boundary %&gt;%  filter(region == \"Peninsular\")\ncrime_boundary_west &lt;- st_as_sf(crime_boundary_west)\ncrime_boundary_west &lt;- st_transform(crime_boundary_west, 3375)\n\nThis is the back-end code chunk used to generate the choropleth map. Functions of the tmap package was used to achieve this.\n\ncrime_types &lt;- unique(crime_boundary_west$type)\n\n\nfor (crime in crime_types) {\n  crime_data &lt;- crime_boundary_west %&gt;% filter(type == crime)\n\n  tmap_mode(\"view\") \n  map &lt;- tm_shape(crime_data) +\n    tm_polygons(\"crimes\", title = paste(\"Crimes -\", crime), \n                style = \"quantile\", palette = \"Reds\") +\n    tm_layout(title = paste(\"Choropleth Map for\", crime),\n              legend.outside = TRUE)\n  \n  print(map)\n}\n\ntmap mode set to interactive viewing\ntmap mode set to interactive viewing\ntmap mode set to interactive viewing\ntmap mode set to interactive viewing\ntmap mode set to interactive viewing\ntmap mode set to interactive viewing\ntmap mode set to interactive viewing\n\n\n\n10.2.1.1 Shiny Board\n\nUsers can input the type of crime, classification method, number of classes, colour scheme and the transparency of the map. As the user input the different fields, the interactive map will be automatically updated on the main panel.\n\nHovering over the areas will reveal the name of the district, while a click will reveal the raw crime numbers for the district. It is to be noted that these figures are aggregated figures over the 4-year time period of our dataset."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#exploratory-spatial-data-analysis-esda",
    "href": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#exploratory-spatial-data-analysis-esda",
    "title": "Prototyping Modules for Shiny App for the Geospatial Analytics Project",
    "section": "10.3 Exploratory Spatial Data Analysis (ESDA)",
    "text": "10.3 Exploratory Spatial Data Analysis (ESDA)\nFor ESDA, I will be focusing on the Global and Local Measures of Spatial Autocorrelation. Namely, I will be using Global Moran I’s Statistic for the Global Measure, and Local Moran I’s and Lisa Plots for the Local Measures.\n\n10.3.1 Global Measures of Spatial Autocorrelation\nBelow is a sample code that was used in the back-end to generate the Global Moran I statistics. st_contiguity() and st_weight() functions of the sfdep package were used to generate the weights matrix for the districts. Subsequently, global_moran_test(), also from the same package, was used to generate the Global Moran I statistic. The results were saved in a dataframe format.\n\ncrime_data &lt;- crime_boundary_west %&gt;% \n   filter((year(ymd(date.x))) == 2020 & type == \"murder\") \n\nnb&lt;- crime_data %&gt;% \n  st_contiguity(crime_data$geometry, queen = TRUE)\n\nnb[17]&lt;- as.integer(19) #handle case for langkawi, which is not connected to the others by admin boundary\n  \ncrime_data_wm &lt;- crime_data %&gt;% \n  mutate(nb = nb, .before = 1) %&gt;% \n  mutate(wt = st_weights(nb, style = 'W'), \n         .before = 1) %&gt;% \n  select(1,2)\n\n\n\nglobal_moran &lt;- global_moran_test(crime_data$crimes, \n             crime_data_wm$nb,\n             crime_data_wm$wt)\n\nmoran_results &lt;- data.frame(\n  Statistic = \"Global Moran's I\",\n  Moran_I = global_moran$estimate[1],        \n  Expectation = global_moran$estimate[2],    \n  Variance = global_moran$estimate[3],       \n  P_value = global_moran$p.value            \n)\n\nmoran_results\n\n                         Statistic   Moran_I Expectation    Variance   P_value\nMoran I statistic Global Moran's I 0.1829003 -0.01333333 0.006630579 0.0079786\n\n\nSince the statistics were going to be published on a web app, I wanted to present them in a more user-friendly and polished format. I used the gt package, a package that specifically supports the creation of neater tables in R, to format our newly created dataframe of the Global Moran I Statistic in a neat table format.\n\nlibrary(gt)\n\nmoran_results_gt &lt;- moran_results %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = \"Global Moran's I Test Results\",\n    subtitle = \"Spatial Autocorrelation Analysis\"\n  ) %&gt;%\n  fmt_number(\n    columns = c(Moran_I, Expectation, Variance, P_value),\n    decimals = 7\n  ) %&gt;%\n  cols_label(\n    Statistic = \"Statistic\",\n    Moran_I = \"Moran's I\",\n    Expectation = \"Expected Value\",\n    Variance = \"Variance\",\n    P_value = \"P-value\"\n  ) %&gt;%\n  tab_source_note(\n    source_note = \"Results generated using global_moran_test() function\"\n  )\n\nmoran_results_gt\n\n\n\n\n\n\n\nGlobal Moran's I Test Results\n\n\nSpatial Autocorrelation Analysis\n\n\nStatistic\nMoran's I\nExpected Value\nVariance\nP-value\n\n\n\n\nGlobal Moran's I\n0.1829003\n−0.0133333\n0.0066306\n0.0079786\n\n\n\nResults generated using global_moran_test() function\n\n\n\n\n\n\n\n\n\n10.3.1.1 Shiny Board\n\nThis is the view on the Shiny Dashboard. Users can input the year, type of crime, contiguity method, and their weights calculation style. The Global Moran I Statistics table will be generated when the user clicks the “Generate Statistics” button.\n\n\n\n10.3.2 Local Measures of Spatial Autocorrelation\nFor the Local Measures of Spatial Autocorrelation, Local Moran I and LISA plots were generated. Functions of the sfdep and tmap packages were once again used to achieve this task. Since Langkawi is an island of Peninsular Malaysia, I manually set a neighbour for it. Below are sample code chunks used in the back-end for the Shiny App.\n\ncrime_data &lt;- crime_boundary_west %&gt;% \n   filter((year(ymd(date.x))) == 2022 & type == \"rape\") \n\nnb&lt;- crime_data %&gt;% \n  st_contiguity(crime_data$geometry, queen = TRUE)\n\nnb[17]&lt;- as.integer(19) #handle case for langkawi, which is not connected to the others by admin boundary\n  \ncrime_data_wm &lt;- crime_data %&gt;% \n  mutate(nb = nb, .before = 1) %&gt;% \n  mutate(wt = st_weights(nb, style = 'W'), \n         .before = 1) %&gt;% \n  select(1,2)\n\n\nlisa &lt;- crime_data %&gt;%\n        mutate(local_moran = local_moran(crime_data$crimes, crime_data_wm$nb, crime_data_wm$wt, nsim = 99), .before = 1) %&gt;%\n        unnest(local_moran)\n      \nlisa &lt;- lisa %&gt;%\n        rename(\"local moran(ii)\" = \"ii\", \"expectation (eii)\" = \"eii\",\n               \"variance(var_ii)\" = \"var_ii\", \"std deviation(z_ii)\" = \"z_ii\",\n               \"p_value\" = \"p_ii\")\n\nlisa_sig &lt;- lisa  %&gt;%\n        filter(p_value &lt; 0.95)  \n\n\ntmap_mode(\"plot\") +\ntm_shape(lisa) + \n  tm_fill(\"local moran(ii)\") +\n  tm_borders(alpha = 0.5) + \ntm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"2017\",\n            main.title.size= 1)\n\ntmap mode set to plotting\n\n\nVariable(s) \"local moran(ii)\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  \n  tm_shape(lisa_sig) +\n  tm_fill(col = \"mean\",\n          palette = \"-RdBu\") +\n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\n\n10.3.2.1 Shiny Board\nUsers will be able to choose the year, crime type, contiguity method, weights calculation method and the number of simulations for the generation of the Local Moran I’s plot. As for the LISA plot, they will be able to choose the confidence level, classification type and the statistic. The maps will be updated with the click of the “Update Plot” button."
  },
  {
    "objectID": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#clustering-analysis---hierarchical-clustering",
    "href": "Take-Home_Exercises/Take-Home_Ex03/Take-Home_Ex03.html#clustering-analysis---hierarchical-clustering",
    "title": "Prototyping Modules for Shiny App for the Geospatial Analytics Project",
    "section": "10.4 Clustering Analysis - Hierarchical Clustering",
    "text": "10.4 Clustering Analysis - Hierarchical Clustering\nIn order to derive the hierarchical cluster dendrograms, I will first need to reformat the data. I will convert the types of crimes to separate columns.\n\nci &lt;- rate_crime_district_bound %&gt;% \n  filter(type == \"causing_injury\") %&gt;% \n  select(-c(3, 5:7, 11)) %&gt;% \n  rename(`causing_injury`= `crime_rate`)\n\nmr &lt;- rate_crime_district_bound %&gt;% \n  filter(type == \"murder\") %&gt;% \n  select(-c(3, 5:7, 11)) %&gt;% \n  rename(`murder`= `crime_rate`)\n\nrp &lt;- rate_crime_district_bound %&gt;% \n  filter(type == \"rape\") %&gt;% \n  select(-c(3, 5:7, 11)) %&gt;% \n  rename(`rape`= `crime_rate`)\n\nrga &lt;- rate_crime_district_bound %&gt;% \n  filter(type == \"robbery_gang_armed\") %&gt;% \n  select(-c(3, 5:7, 11)) %&gt;% \n  rename(`robbery_gang_armed`= `crime_rate`)\n\nrgu &lt;- rate_crime_district_bound %&gt;% \n  filter(type == \"robbery_gang_unarmed\") %&gt;% \n  select(-c(3, 5:7, 11)) %&gt;% \n  rename(`robbery_gang_unarmed`= `crime_rate`)\n\nrsa &lt;- rate_crime_district_bound %&gt;% \n  filter(type == \"robbery_solo_armed\") %&gt;% \n  select(-c(3, 5:7, 11)) %&gt;% \n  rename(`robbery_solo_armed`= `crime_rate`)\n\nrsu &lt;- rate_crime_district_bound %&gt;% \n  filter(type == \"robbery_solo_unarmed\") %&gt;% \n  select(-c(3, 5:7, 11)) %&gt;% \n  rename(`robbery_solo_unarmed`= `crime_rate`)\n\n\nrate_crime_prep &lt;- ci%&gt;% \n  mutate(murder = mr$murder, .before = 5) %&gt;% \n  mutate(rape = rp$rape, .before = 6) %&gt;% \n  mutate(robbery_gang_armed = rga$robbery_gang_armed, .before = 7) %&gt;% \n  mutate(robbery_gang_unarmed = rgu$robbery_gang_unarmed, .before = 8) %&gt;% \n  mutate(robbery_solo_armed = rsa$robbery_solo_armed, .before = 9) %&gt;% \n  mutate(robbery_solo_unarmed = rsu$robbery_solo_unarmed, .before = 10)\n\nwrite_rds(rate_crime_prep, \"data/rds/rate_crime_prep.rds\")\n\n\nrate_crime_prep &lt;- read_rds(\"data/rds/rate_crime_prep.rds\")\n\nI will then standardise the data in order to be used for our Heat Map Plot later on.\n\nrate_crime_data &lt;- rate_crime_prep %&gt;% \n  filter(year(ymd(date.x)) == 2020)\n\nrate_crime_data &lt;- as.data.frame(rate_crime_data)\nrow.names(rate_crime_data) &lt;- rate_crime_data$district \n\nrate_crime_data&lt;- rate_crime_data %&gt;% \n  select(-c(2))\n\nrate_crime_data.std &lt;- normalize(rate_crime_data)\nsummary(rate_crime_data.std)\n\n    state               date.x           causing_injury       murder       \n Length:121         Min.   :2020-01-01   Min.   :0.0000   Min.   :0.00000  \n Class :character   1st Qu.:2020-01-01   1st Qu.:0.1287   1st Qu.:0.00000  \n Mode  :character   Median :2020-01-01   Median :0.2442   Median :0.05888  \n                    Mean   :2020-01-01   Mean   :0.2667   Mean   :0.13850  \n                    3rd Qu.:2020-01-01   3rd Qu.:0.3717   3rd Qu.:0.19572  \n                    Max.   :2020-01-01   Max.   :1.0000   Max.   :1.00000  \n                                         NA's   :5        NA's   :5        \n      rape        robbery_gang_armed robbery_gang_unarmed robbery_solo_armed\n Min.   :0.0000   Min.   :0.0000     Min.   :0.00000      Min.   :0.000000  \n 1st Qu.:0.2060   1st Qu.:0.0000     1st Qu.:0.06345      1st Qu.:0.000000  \n Median :0.3033   Median :0.0000     Median :0.17331      Median :0.000000  \n Mean   :0.3580   Mean   :0.0189     Mean   :0.22341      Mean   :0.008621  \n 3rd Qu.:0.5034   3rd Qu.:0.0000     3rd Qu.:0.32819      3rd Qu.:0.000000  \n Max.   :1.0000   Max.   :1.0000     Max.   :1.00000      Max.   :1.000000  \n NA's   :5        NA's   :5          NA's   :5            NA's   :5         \n robbery_solo_unarmed   region.x                  geometry  \n Min.   :0.00000      Length:121         MULTIPOLYGON :121  \n 1st Qu.:0.04055      Class :character   epsg:4326    :  0  \n Median :0.12243      Mode  :character   +proj=long...:  0  \n Mean   :0.16848                                            \n 3rd Qu.:0.24900                                            \n Max.   :1.00000                                            \n NA's   :5                                                  \n\n\nUsing dist() function of the stats package, I derived the proximity matrix.\n\nrate_crime_data_numeric &lt;- rate_crime_data %&gt;% select(where(is.numeric))\nrate_crime_data_numeric &lt;- rate_crime_data_numeric %&gt;% drop_na() \nproxmat &lt;- dist(rate_crime_data_numeric, method = 'euclidean')\nproxmat\n\n                  johor bahru     klang batu pahat    kluang kota tinggi\nklang               205.01466                                           \nbatu pahat           48.93894 243.68056                                 \nkluang               54.93991 197.25739   73.73835                      \nkota tinggi          97.53143 258.18365   74.16264  74.11704            \nkulaijaya            62.94081 218.67139   89.58308 104.92954   151.15038\nmersing             130.49838 239.55735  116.99732  88.00535    70.24913\nmuar                 74.22445 276.95160   45.63030  93.75958    85.99679\npontian              53.57882 235.70995   46.16341  67.31718    94.49351\nsegamat              45.97427 230.33312   32.58981  72.24282    94.46931\nbaling               88.92262 289.25661   53.40343 100.72820    76.73750\nbandar baharu       131.32547 322.44303  107.01556 164.66658   163.96454\nkota setar          108.80736 258.49200   84.65188  81.34642    18.42911\nkuala muda           54.92969 163.03828   87.19165  39.33185   105.50836\nkubang pasu          82.28142 248.66246   73.03330  52.22378    49.45793\nkulim                77.21953 216.79013   84.61529  30.57603    56.66957\nlangkawi            269.68077 344.10306  249.53351 224.75450   186.48222\npadang terap        142.22750 321.29835  107.79462 128.35033    88.50822\npendang              99.86536 238.43671   84.14103  77.18655    87.25817\nsik                 118.79409 309.07935  107.74485 162.11816   169.79179\nyan                 135.15002 332.28728  102.08702 168.84910   154.38420\nbachok              132.51207 287.97604  112.48278 101.70011    46.90493\ngua musang          141.91004 290.44874  122.61515 106.25588    76.32126\njeli                108.42758 311.96437   83.25887 127.48841   110.90386\nkota bharu           54.49865 247.69093   26.32810  92.70149   100.10768\nkuala krai          153.52694 315.86628  126.11883 125.39035    80.97858\nmachang              79.84532 257.82229   64.33521  62.75353    61.05459\npasir mas           111.33657 269.71923   95.62269  82.59694    34.50368\npasir puteh         174.70408 270.51010  157.01648 131.30013   103.44373\ntanah merah         128.46184 285.56055   99.66275 101.76899    68.59981\ntumpat               85.54120 263.15616   58.89548 108.82395   117.20748\nalor gajah          124.72502 295.57224   95.89838 107.02576    40.04081\njasin               114.80277 289.02145   87.61529  94.48978    41.07832\nmelaka tengah        87.12015 179.08029   92.93433  64.13261    89.49993\njelebu               54.21057 243.89235   55.56322  79.14029   106.98680\njempol              251.42144 307.52881  241.66024 203.85202   173.15442\nkuala pilah         130.02984 295.60043   93.42605 110.64170    56.61075\nport dickson        232.25694 308.97753  227.67842 186.92820   156.97170\nrembau              114.60554 226.05692  112.26819  78.78171   105.65696\nseremban             30.02136 215.22528   29.56661  58.60731    85.48480\ntampin               98.12506 292.73112   65.84496 121.41866   116.34060\nbentong              74.28374 209.08602   79.86001  27.26714    54.41464\nbera                130.78312 307.31767   99.12667 112.35585    63.27315\ncameron highlands    96.27840 293.84940   69.80850 111.60614    83.47027\njerantut            123.57428 303.38206  103.18864 133.81764   139.09311\nlipis                99.59933 295.09793   77.82509 123.47224   126.38835\nkuantan              42.81230 236.39254   21.95498  64.77264    81.14722\nmaran                94.19643 280.20887   81.73624 117.70771   133.59590\npekan               124.39960 308.02308  100.74945 132.92935   132.36936\nraub                122.79886 319.44210   91.06182 126.57981    84.86287\nrompin              142.18266 274.57350  129.91494  99.30280    85.62553\ntemerloh            143.79897 282.96776  110.87281 119.10692    63.72588\nhilir perak         340.08375 335.17579  345.93539 292.14254   281.70552\nkampar               41.76615 208.70063   69.80811  78.47627   124.66608\nkerian               68.41085 244.59809   63.02343  54.14910    47.17948\nkuala kangsar        67.59397 263.15836   63.87266 103.41734   123.35449\nperak tengah        104.22002 289.00211   78.64045  92.02424    60.20302\nbarat daya           82.60630 280.62162   39.26300 102.01777    84.19751\ntimur laut          144.46086 171.78364  155.86113 110.62337   124.27991\nbeaufort            144.01747 340.00180  113.82892 170.36812   159.49821\nbeluran             155.12845 336.77928  123.61714 155.83314   137.09880\nkeningau            123.66799 323.57294   85.50272 147.04478   124.78398\nkota belud          120.45621 314.99882   86.29231 124.36928    99.23704\nkota kinabalu        76.56845 273.88444   33.93089  92.90519    76.89951\nkinabatangan        124.90299 326.83302   96.10846 146.14000   130.87848\nkota marudu         172.46905 344.55404  142.45319 170.54349   155.43773\nkudat               120.70336 323.95311   94.69537 145.84188   133.29462\nkunak               128.78262 319.36862  107.81014 162.28038   164.97847\nlahad datu          120.01911 319.85670   93.57725 150.38438   143.24381\npapar               152.00817 319.43058  119.39431 133.73866   101.64346\npenampang           130.58838 319.64921   98.25549 139.28528   125.22111\nranau               126.79329 326.36023   94.26946 135.05688   107.75466\nsandakan            105.93329 308.43575   75.79527 137.15279   126.27636\nsemporna            108.58691 306.35298   77.81838 114.39933    91.17734\nsipitang            134.52348 331.60793   99.99712 159.41567   144.13276\ntawau               111.33253 311.09960   78.66021 145.97836   133.18766\ntenom               143.32993 341.88507  115.63187 169.60531   158.24182\ntuaran              137.17838 332.47719  108.10519 160.40095   151.31702\nbau                 124.49855 316.25818   96.32386 134.27110   124.41531\nbelaga              218.51784 350.58147  205.03565 189.84877   141.17660\nbetong              102.44660 263.37239   90.27095  78.18524    41.44112\nbintulu             111.65717 302.82646   84.82183 109.01823    68.25398\ndalat               126.96256 324.61555   94.55730 130.87785    99.43482\njulau               171.61888 334.81776  142.34777 149.31517   118.44242\nkanowit             135.01820 301.17357  113.47545 125.27164   123.64059\nkapit               147.02393 323.98740  122.66399 131.51141    79.66130\nkuching              47.37604 219.61460   43.71971  45.22744    54.30602\nlawas               134.76475 325.81590   96.78518 145.71075   124.25415\nlimbang             106.89813 305.06992   79.59538 113.74742    94.76348\nlubok antu          206.57827 316.13589  193.90294 159.36534   130.42111\nlundu               112.56190 285.03203   85.12490  90.83616    39.83546\nmarudi              281.61993 351.31117  273.07088 229.97141   206.97449\nmatu                157.21199 349.60576  130.50117 182.91492   176.06618\nmiri                153.69881 221.37966  156.09141 101.66968   102.36811\nmukah               113.58402 306.02612   81.34549 130.30933   121.54793\nsaratok             132.82133 322.18158  103.07379 125.40391    81.99679\nsarikei             131.62976 292.93606  111.35334 117.65366    60.03327\nserian              115.61607 316.73335   93.92037 144.67925   139.96938\nsibu                120.06945 148.59667  136.37898  90.15969   122.36513\nsimunjan            175.46609 345.03315  143.33381 181.61799   170.32668\nsong                185.34514 334.32880  161.37921 150.84828   103.97177\nsri aman            178.84497 346.50040  149.26147 172.51868   157.65228\ntatau               117.42148 320.13439   78.51514 138.53761   111.49651\ngombak              149.06104 112.44794  171.67086 142.61154   179.24902\nkuala langat        117.91651 159.25981  136.13810  73.35972   119.40074\nkuala selangor       58.37676 218.15981   66.68574  21.72942    62.60162\npetaling             59.71474 200.46800   73.89872 104.05940   135.60512\nsabak bernam        162.51980 215.12618  152.84185 135.72594   129.33434\nsepang               91.95354 150.35729  110.77534  69.44256   117.45991\nbesut                94.73177 254.12940   85.65620  75.17481    92.65537\ndungun              115.20557 303.29849   86.52361 139.45211   138.25467\nhulu terengganu     117.78309 263.51365  106.76252  82.25747    42.68130\nkemaman              70.72643 265.41999   50.63818  73.64162    68.86057\nkuala terengganu    147.48130 260.91983  128.66032 111.11886    65.25463\nmarang               59.98348 252.27350   34.13308  63.29520    51.71188\nsetiu               135.75308 325.48430   97.09423 147.98171   127.08211\n                  kulaijaya   mersing      muar   pontian   segamat    baling\nklang                                                                        \nbatu pahat                                                                   \nkluang                                                                       \nkota tinggi                                                                  \nkulaijaya                                                                    \nmersing           180.21220                                                  \nmuar               96.48284 136.42460                                        \npontian            74.12955 117.23152  55.32102                              \nsegamat            69.05737 122.34582  58.89138  28.74519                    \nbaling            116.38763 130.49514  20.63925  68.50011  71.67826          \nbandar baharu     114.33015 202.99142  83.74770 101.91312 103.67014  92.30831\nkota setar        162.89488  56.95013 100.01965 103.30803 102.99180  90.14399\nkuala muda         96.57517 109.05908 116.93966  79.35706  77.20377 127.50294\nkubang pasu       125.25362  81.89810  70.79068  68.98545  80.73639  69.07677\nkulim             129.92037  76.04966  97.61034  84.87286  91.82787  99.12778\nlangkawi          317.91997 141.83325 260.52362 253.04334 257.76095 247.70574\npadang terap      170.97978 114.32139  86.38722 105.29350 118.08368  71.43089\npendang           130.98912  70.37255  99.67268  63.51613  74.64521 100.53757\nsik                96.61995 217.76059  86.43228 110.04632 107.93588 100.13610\nyan               131.18257 200.40979  81.27793 112.12989 108.71256  84.10673\nbachok            180.97534  86.53060 107.60804 124.50308 130.69823  94.80774\ngua musang        177.57490  83.15278 113.35700 116.92206 128.29510 103.26957\njeli              122.10248 166.06433  39.91930  91.31663  97.65305  39.22281\nkota bharu         77.72939 139.45177  52.58922  50.21078  32.68334  64.82141\nkuala krai        189.82665  97.29424 110.98243 124.64468 137.07015  96.53006\nmachang           114.49725  94.22708  54.27306  54.44881  68.97674  53.98567\npasir mas         163.36848  83.76387  94.87781 109.19615 115.38324  85.18166\npasir puteh       220.35276  49.20880 171.78165 157.01535 161.31212 162.67850\ntanah merah       164.62330  70.02081  97.16708  94.02108 105.21419  86.73690\ntumpat             90.68313 139.62105  66.75555  45.67929  44.81812  76.18322\nalor gajah        173.17381  98.42602  90.92294 117.37057 119.72699  75.19407\njasin             158.73298  91.36983  77.14104  99.10400 106.36209  62.81857\nmelaka tengah     138.24217  77.69585 131.31191 100.42436  93.00660 134.66939\njelebu             55.68521 141.62124  48.77093  36.36848  40.57454  66.73438\njempol            306.81765 136.71117 255.90514 249.38143 253.67689 245.28636\nkuala pilah       171.93171  77.07010  93.62477 102.48386 108.19614  78.80800\nport dickson      287.37297 148.17288 233.31543 237.40121 243.50836 223.23847\nrembau            142.56148  73.15362 123.95845  84.10630  99.61581 126.41505\nseremban           76.20306 114.70297  67.84119  41.90001  25.94003  79.11648\ntampin            100.18360 153.95233  44.60298  62.02894  64.01689  51.53081\nbentong           128.54065  67.88184 100.18581  82.81484  85.77204 101.74832\nbera              168.73661  99.38425  82.54931 104.28946 114.88171  66.34048\ncameron highlands 125.63905 148.96069  47.66184  96.81679  92.40893  41.44889\njerantut          116.74193 161.42310  77.20765  75.33420  92.65193  83.15981\nlipis              95.27197 164.76280  46.05340  64.86383  74.89558  57.40468\nkuantan            77.78318 114.83767  46.03033  24.59376  20.03777  58.00809\nmaran              81.28070 164.22745  59.02841  55.95974  69.58337  73.62031\npekan             122.37246 157.18818  72.05921  76.77606  93.71376  75.48551\nraub              152.80304 145.61174  59.73159 108.97519 112.82135  43.07752\nrompin            180.40516  69.27006 125.78492 116.54543 133.01262 118.94908\ntemerloh          191.26854  61.75746 126.68677 126.79106 124.52821 114.05725\nhilir perak       393.75081 254.26542 360.49282 352.62504 356.67178 353.59287\nkampar             31.78798 152.96054  84.26651  58.71273  49.12876 101.95407\nkerian            120.44082  99.95239  65.90743  76.58813  81.30517  65.80875\nkuala kangsar      60.56616 163.95949  46.24267  53.04381  58.43415  66.34544\nperak tengah      138.65867 108.08415  55.63831  82.51348  92.85079  43.83613\nbarat daya        108.47294 129.78065  30.09475  57.95515  56.25321  29.51760\ntimur laut        199.17765 104.13767 189.20560 167.43891 162.14927 189.51266\nbeaufort          134.96415 199.65807  83.63235 110.28836 114.83985  86.30819\nbeluran           157.44294 162.25435  95.28402 111.19239 120.40280  89.45932\nkeningau          129.09678 172.29925  58.09606  96.54757  94.22471  54.81978\nkota belud        137.04148 139.92890  51.45594  84.25693  94.50350  40.89677\nkota kinabalu     104.33760 122.77159  26.20261  52.15393  49.94705  26.53055\nkinabatangan      125.87180 180.03379  55.22016  98.24973 103.14056  55.35152\nkota marudu       171.18409 170.68287 118.35496 125.10175 135.12039 113.70126\nkudat             122.35725 184.43099  54.21857  98.51185 103.88566  57.11887\nkunak             108.98480 204.08193  82.72354 100.01791 103.24066  92.82320\nlahad datu        112.45814 190.11865  61.00471  95.20044  96.86667  67.68180\npapar             177.15682 109.67862 103.68872 109.34883 123.03553  91.89462\npenampang         135.67212 154.43349  69.50247  85.07490  97.65273  66.93914\nranau             143.26486 155.55248  53.89107  97.19590 106.96507  42.95069\nsandakan          109.37576 176.01233  46.64813  85.72250  85.34695  52.67762\nsemporna          128.76070 139.11160  38.13489  79.88746  89.80605  27.51617\nsipitang          132.59624 184.74911  72.60264 100.77521 103.71713  73.10492\ntawau             113.33077 182.69332  59.24731  93.95885  88.23434  64.09483\ntenom             132.59309 203.99533  80.24407 114.82838 117.68562  82.95503\ntuaran            128.34822 190.20583  75.67449 101.16724 107.30841  78.70905\nbau               127.96035 157.44792  61.61208  81.70089  96.06946  61.33618\nbelaga            269.50000 172.97408 196.81487 223.34464 228.52842 183.44866\nbetong            150.64735  97.06751  89.21179 106.55381 107.99754  81.88076\nbintulu           148.19884 129.71731  59.10280 101.62588 107.13197  44.58685\ndalat             148.06923 147.93719  56.07570  98.85775 109.01177  42.28470\njulau             196.01902 122.12770 122.83197 129.41501 146.00035 111.07414\nkanowit           143.68758 131.08135  93.53623  84.56670 105.39467  92.51226\nkapit             188.13947 132.21383 101.45282 137.10458 144.95017  85.88685\nkuching           107.80101  94.64753  74.40676  67.08137  60.92950  78.25583\nlawas             143.13615 155.60330  71.80221  91.75805  99.87735  66.10741\nlimbang           126.17691 142.76745  37.78569  79.55848  91.30682  31.02958\nlubok antu        250.53378 108.55036 189.44678 188.89564 202.56192 178.53098\nlundu             157.03767  84.23742  77.01699  94.08621 102.80221  63.53829\nmarudi            326.88762 171.33248 273.07375 267.54754 280.27883 262.57997\nmatu              141.80492 213.31200  99.22705 121.47019 128.15333 103.07625\nmiri              205.52077  62.22993 173.91152 155.55504 161.37478 170.09006\nmukah             116.81045 154.84861  55.16574  71.15791  80.31050  57.44237\nsaratok           165.19967 132.93893  73.09220 111.98152 121.82684  56.46837\nsarikei           185.12666 119.86353 111.40149 139.76973 139.08167  99.13627\nserian            110.43668 188.78282  56.17078  93.82946  99.09362  64.24550\nsibu              168.76080  99.91273 172.57326 141.48931 135.64456 176.28731\nsimunjan          172.33554 180.28897 126.55774 124.39022 135.04992 124.47704\nsong              226.08513 110.53950 147.85288 161.48960 174.47076 132.98455\nsri aman          183.62243 163.39406 127.09824 127.29106 143.66388 121.78569\ntatau             132.69900 162.83046  48.30245  93.58098  94.39572  40.87933\ngombak            186.38909 165.89369 213.55992 180.62408 168.57884 220.77500\nkuala langat      159.13914  85.22747 162.93631 125.81997 128.88948 167.39942\nkuala selangor    105.57119  87.59650  78.07739  60.93072  68.52128  83.35110\npetaling           76.42229 161.11340 110.11340  86.98064  66.96689 123.82687\nsabak bernam      210.80538  86.03756 189.31368 162.13491 155.61544 186.31486\nsepang            132.20039  98.12213 146.88767 106.03760 101.41717 153.97602\nbesut             116.18739  98.77445  78.68664  52.88911  76.43098  82.35815\ndungun            107.36264 169.73902  67.54023  75.11884  79.38684  74.53328\nhulu terengganu   169.16845  80.46523 108.24258 118.06603 123.21870  99.78175\nkemaman           102.90762 115.94745  28.04618  51.53328  62.10274  31.95291\nkuala terengganu  203.95592  47.62177 147.94210 143.74478 144.04106 137.87525\nmarang            106.56848 102.99854  40.28709  53.76784  56.03074  41.30271\nsetiu             143.28409 157.10809  75.07785  92.54029  99.38816  70.07275\n                  bandar baharu kota setar kuala muda kubang pasu     kulim\nklang                                                                      \nbatu pahat                                                                 \nkluang                                                                     \nkota tinggi                                                                \nkulaijaya                                                                  \nmersing                                                                    \nmuar                                                                       \npontian                                                                    \nsegamat                                                                    \nbaling                                                                     \nbandar baharu                                                              \nkota setar            174.68823                                            \nkuala muda            176.15869  110.31191                                 \nkubang pasu           148.05255   60.25346   90.09521                      \nkulim                 175.85141   64.00203   67.30044    39.42982          \nlangkawi              322.10213  171.00173  246.23769   206.30769 205.41665\npadang terap          132.39789   92.17878  161.00659    80.97756 117.16131\npendang               147.01022   84.98431   92.09856    72.31904  84.84437\nsik                    50.58634  183.56937  170.57973   153.55698 174.67113\nyan                    36.69215  164.83325  182.59382   149.12213 176.40818\nbachok                185.14517   51.04760  138.73998    61.29254  75.54814\ngua musang            178.77117   76.58430  141.40591    62.73635  88.37370\njeli                   81.17246  125.67092  153.36566    96.44109 126.22707\nkota bharu             90.68283  110.05144   98.50723    95.92222 107.89031\nkuala krai            170.76630   81.43988  161.47865    76.35918 106.50982\nmachang               126.90317   72.06125   96.39131    22.73455  58.97288\npasir mas             175.71128   44.13882  119.33102    48.25282  56.43326\npasir puteh           234.60734   88.33716  152.13449   117.26315 117.13850\ntanah merah           153.54330   65.62005  131.89415    63.68062  91.39015\ntumpat                 75.50955  123.56555  115.43248   104.20929 124.48908\nalor gajah            165.89457   47.92949  141.48744    67.92845  85.98719\njasin                 151.84561   50.56574  130.86308    47.63300  75.39179\nmelaka tengah         193.27844   85.82809   55.60180    98.69815  75.80196\njelebu                 94.00178  119.41783   91.52559    77.98290  95.87360\njempol                329.90286  160.00337  224.27352   194.72320 181.03633\nkuala pilah           152.01750   52.69347  140.40485    73.14224  97.96710\nport dickson          313.57380  150.94961  213.89362   172.83706 158.85019\nrembau                173.47415  103.12310   92.60196    80.35286  85.44481\nseremban              122.85618   93.97275   61.03765    77.96477  78.83023\ntampin                 50.92374  126.27222  137.49799   101.49925 130.54225\nbentong               176.43707   58.91157   58.87009    46.78605  17.61591\nbera                  145.65504   68.38140  147.75605    63.24203  95.93543\ncameron highlands     115.00158   99.40033  137.82983    84.83657 106.98244\njerantut               70.58361  147.45526  151.95090   109.76360 142.10306\nlipis                  47.58654  138.14199  140.91419   103.05296 132.37838\nkuantan               103.97408   91.19830   77.85016    66.88812  79.98993\nmaran                  57.77457  144.58858  130.97202   104.66156 130.88886\npekan                  71.81660  140.82015  153.59944   104.78213 138.84059\nraub                  120.21500   98.43249  158.69634    85.24636 115.47267\nrompin                190.19932   83.33354  132.57319    65.74752  81.68637\ntemerloh              186.77027   48.89128  142.15370    97.03219 106.93776\nhilir perak           441.47389  273.47703  306.00753   295.39968 271.06245\nkampar                122.35436  135.69211   72.36214   101.31612 103.67420\nkerian                148.53434   63.11684   88.26178    36.96314  41.83552\nkuala kangsar          70.73027  136.82064  114.72500    98.66161 117.76478\nperak tengah          128.41697   72.59988  127.46180    43.29537  79.83352\nbarat daya             81.54152   94.51878  121.70776    81.40641 106.53280\ntimur laut            261.22130  117.82098  106.76701   141.46968 107.12608\nbeaufort               28.79679  169.76898  187.32676   145.06782 177.01161\nbeluran               100.90486  143.33442  180.48496   118.16213 156.05070\nkeningau               56.52359  135.23693  166.67579   119.53584 150.69606\nkota belud             88.84747  109.07825  152.78290    83.95091 121.33048\nkota kinabalu          87.91935   87.75119  113.79589    71.91674  97.48810\nkinabatangan           58.64191  143.70794  169.02587   115.23938 148.28013\nkota marudu           115.42216  159.57710  192.94981   135.44254 172.15506\nkudat                  57.00837  146.91029  167.70347   118.02806 148.46413\nkunak                  10.42673  176.28823  173.78083   146.31759 173.87071\nlahad datu             32.96351  155.71797  167.21568   128.29240 157.61496\npapar                 141.79138  101.64874  163.57633    90.84388 125.30652\npenampang              70.90585  133.10051  161.83658   106.64619 142.12812\nranau                  88.22948  119.41992  164.20379    94.64877 130.33252\nsandakan               46.94284  138.84562  154.36675   116.50995 143.37281\nsemporna               91.89484  103.62501  143.96680    74.73140 110.42398\nsipitang               35.83930  153.75470  177.00515   133.64697 165.18431\ntawau                  47.04976  144.77902  160.10976   128.53134 153.59417\ntenom                  42.55824  170.16642  188.37953   142.47275 175.03104\ntuaran                 34.57954  161.72999  178.55812   133.82641 166.83720\nbau                    68.80066  133.98909  157.97505   101.20607 136.91286\nbelaga                272.31360  143.34844  224.21471   159.51963 160.28726\nbetong                171.67381   54.84033  113.39093    48.59940  56.64961\nbintulu               131.48940   83.00301  143.11385    67.27576  95.14774\ndalat                 100.02283  110.99184  161.98141    87.69236 123.57864\njulau                 159.50546  118.31455  181.08769   104.16406 137.99057\nkanowit               115.00094  128.07815  149.15421    93.44363 127.09962\nkapit                 170.55927   89.52468  168.95677    85.83984 109.02706\nkuching               148.11151   64.33336   64.20857    59.48479  50.77935\nlawas                  69.85417  131.01850  167.56567   113.27729 147.89976\nlimbang                91.51016  107.89634  143.33354    75.25915 110.01166\nlubok antu            257.36908  124.06803  192.22582   128.43318 134.15618\nlundu                 150.32928   47.47850  126.75265    44.64164  72.58778\nmarudi                341.20504  197.88168  257.18301   208.62458 205.97308\nmatu                   35.78225  186.28920  199.25193   157.75703 190.35427\nmiri                  249.06799   93.79746  120.11123   107.44875  84.04953\nmukah                  53.92254  130.44319  149.41902   104.32036 136.62220\nsaratok               133.73055   93.06272  160.93272    77.10727 110.26272\nsarikei               188.71361   68.53438  149.06010    91.45575  95.11833\nserian                 47.02698  153.68096  163.54471   121.69339 150.46035\nsibu                  237.76137  117.62564   75.32421   130.29980  97.71721\nsimunjan               99.79795  172.99802  197.94015   154.46377 187.52536\nsong                  209.84417  101.52929  187.82261   105.18434 126.61319\nsri aman              125.27250  159.84783  195.72294   137.07519 172.42935\ntatau                  68.58237  122.74210  161.07454   108.78011 138.93411\ngombak                266.27537  176.42273  112.97135   188.92616 157.70706\nkuala langat          227.33835  115.79481   67.11959   109.75946  81.10788\nkuala selangor        152.92204   72.59865   59.12709    32.28781  27.09771\npetaling              138.37333  142.75690   85.76903   133.63898 127.83025\nsabak bernam          244.49839  115.37735  132.48048   153.04155 136.63785\nsepang                202.87857  115.46946   44.35090   113.76512  89.07781\nbesut                 129.01042   98.36279  100.40442    53.63109  79.74084\ndungun                 38.04771  147.00582  152.61854   121.22761 150.39281\nhulu terengganu       189.83956   48.77503  118.57527    52.71533  54.11169\nkemaman               107.51045   83.23159  103.29549    43.74386  73.24158\nkuala terengganu      219.75352   48.82034  134.20419    99.71926  91.91259\nmarang                119.86450   65.82767   90.83191    45.02623  62.86256\nsetiu                  68.19979  133.31792  168.39533   117.43886 151.18171\n                   langkawi padang terap   pendang       sik       yan\nklang                                                                 \nbatu pahat                                                            \nkluang                                                                \nkota tinggi                                                           \nkulaijaya                                                             \nmersing                                                               \nmuar                                                                  \npontian                                                               \nsegamat                                                               \nbaling                                                                \nbandar baharu                                                         \nkota setar                                                            \nkuala muda                                                            \nkubang pasu                                                           \nkulim                                                                 \nlangkawi                                                              \npadang terap      202.10141                                           \npendang           198.90262     95.47603                              \nsik               344.62114    158.49075 167.92616                    \nyan               314.62057    128.29015 153.33806  59.69671          \nbachok            172.73195     82.65553 113.17071 192.36794 176.40613\ngua musang        165.37980     67.18699  91.92276 195.90323 178.52017\njeli              279.90692     90.92256 133.00348  81.05192  75.00423\nkota bharu        272.38046    122.85986  97.62059  89.70137  87.78850\nkuala krai        170.04946     42.89908 103.07082 191.31770 166.65521\nmachang           218.49481     70.14599  67.06933 135.97630 130.01358\npasir mas         188.16556     89.04215 105.42929 178.67410 167.70482\npasir puteh        98.38185    130.08994 103.54325 254.53251 231.04096\ntanah merah       171.37487     47.65687  59.75395 177.32326 152.13811\ntumpat            267.54195    110.38960  79.77585  98.19200  84.42419\nalor gajah        190.37798     76.21517 114.74267 172.70721 152.09217\njasin             192.83012     56.86658  96.14027 161.85484 143.45980\nmelaka tengah     208.58362    156.56071  85.50221 195.60754 191.86898\njelebu            273.89671    116.41767  93.57333  91.92167 106.18264\njempol             81.38849    215.67915 205.66650 341.32176 321.55766\nkuala pilah       173.51133     48.93508  78.04122 173.76602 142.75468\nport dickson      142.25431    203.01144 210.44516 316.45806 304.97577\nrembau            194.73429    114.86750  37.97762 191.64163 184.16536\nseremban          253.12838    127.17382  79.66825 120.63786 123.99095\ntampin            274.26624     93.10958 101.63787  76.72885  56.70443\nbentong           201.20324    120.73938  77.83854 176.73009 176.23006\nbera              191.76304     31.11391  95.92366 163.23451 138.32072\ncameron highlands 260.46102    100.65940 131.84223 107.88768 100.99357\njerantut          275.65997     91.59424 101.79611 103.67451  92.81993\nlipis             287.05620     98.79788 111.80607  66.48712  63.39445\nkuantan           250.66851    106.07776  72.31991 107.10640 106.50998\nmaran             290.54854    110.39495 105.49904  74.27957  81.37597\npekan             269.05689     80.88763 101.00300 105.02299  89.89349\nraub              244.63345     71.81083 131.76667 124.95686 106.05009\nrompin            160.03665     82.78888  82.40248 207.15312 193.34180\ntemerloh          146.03333     95.51617  90.64301 206.04698 175.14174\nhilir perak       209.41824    336.31163 319.73632 441.87741 435.27692\nkampar            289.52343    154.19610 109.82698 110.45012 133.94169\nkerian            225.32053    101.08727  96.66762 143.86762 144.40409\nkuala kangsar     296.27360    123.45281 114.64514  61.26771  83.84902\nperak tengah      216.37157     51.42802  93.22541 138.45208 124.54463\nbarat daya        252.24178     83.19777  91.52629  94.30576  72.81084\ntimur laut        195.29156    204.13192 147.62922 258.38527 256.64807\nbeaufort          310.41022    115.19277 147.68410  70.14980  37.68703\nbeluran           252.23294     71.69149 118.08393 136.58361 107.99552\nkeningau          281.40900     95.16617 130.41039  80.11874  41.05119\nkota belud        244.74885     48.12190 103.42343 112.44271  86.96759\nkota kinabalu     246.40443     81.01074  85.33166  99.15809  81.59276\nkinabatangan      290.35047     94.66726 137.98010  73.54842  56.74017\nkota marudu       253.64416     87.60810 123.69825 155.28695 126.16799\nkudat             298.61654    103.48536 143.03143  62.92378  53.74721\nkunak             324.68767    133.98941 147.55122  46.10392  44.59193\nlahad datu        307.28563    114.94932 141.77814  49.11669  36.35168\npapar             191.76602     30.10097  85.75668 173.24463 142.21471\npenampang         260.92995     67.94380 103.93226 107.64338  79.03091\nranau             258.99401     61.29427 123.23550 105.56710  82.28715\nsandakan          295.44631    108.58213 132.34229  54.02676  37.04867\nsemporna          248.86229     57.68322 106.87464 105.87558  88.58000\nsipitang          295.38879    103.37293 135.27668  74.75948  32.10960\ntawau             301.35533    119.74608 139.02732  54.80404  26.63248\ntenom             313.52375    117.51831 155.68016  66.70014  47.14591\ntuaran            301.07556    105.59277 137.74634  73.67461  48.04437\nbau               267.00050     70.82859 108.08984  99.43003  79.35749\nbelaga            198.42487    171.95377 216.23351 270.70300 257.76650\nbetong            202.28592     99.53980 111.56046 170.65118 164.23912\nbintulu           232.81605     71.62341 121.59295 133.71422 120.32596\ndalat             249.01770     53.75358 120.69851 115.75690  93.07924\njulau             189.73154     43.17150 104.80378 190.64075 161.51779\nkanowit           233.98073     66.65533  79.57960 146.76137 129.30879\nkapit             211.54254     79.28381 142.34049 175.26662 158.40726\nkuching           229.29466    119.82260  86.40679 143.81714 143.30674\nlawas             259.38850     68.84189 108.22252 108.69873  69.71725\nlimbang           254.35216     63.43616 110.03853 102.63586  89.94260\nlubok antu        118.90560    133.18989 151.71859 273.11147 255.57748\nlundu             189.68781     53.48550  87.49549 162.09583 143.04264\nmarudi            108.47489    216.05389 223.64827 357.23678 339.64048\nmatu              322.78629    126.32103 158.37214  77.02460  54.94594\nmiri              142.74309    159.26126 120.33048 255.32230 247.91360\nmukah             269.99155     81.20305 101.79019  88.12983  62.41823\nsaratok           225.34852     51.03561 123.23283 144.60043 124.26195\nsarikei           207.20005    115.65914 144.80532 185.64033 171.95718\nserian            307.36597    113.52346 143.07039  49.33107  51.95134\nsibu              211.57388    195.40571 124.37579 235.98583 237.29846\nsimunjan          271.63778    105.86040 123.88432 148.18601 112.53649\nsong              150.04038     80.17207 135.02194 228.40535 204.20430\nsri aman          244.27804     80.74447 116.66774 167.53257 136.75423\ntatau             273.04014     85.71152 127.03464  84.50927  50.15548\ngombak            272.90400    252.69171 176.53113 258.04351 265.44262\nkuala langat      201.05312    175.89076 101.40001 230.06849 233.04202\nkuala selangor    221.27362    109.98821  73.96557 152.25011 156.31716\npetaling          298.15861    178.97466 125.99468 126.10303 139.29140\nsabak bernam      166.11623    185.38904 120.60166 257.26078 238.65795\nsepang            227.12532    176.43708  94.08333 203.78995 207.22881\nbesut             222.10367     80.12961  50.34526 146.16333 140.93732\ndungun            288.04410    105.29864 111.47939  77.22818  55.26029\nhulu terengganu   179.39831    100.62434 109.75583 192.34887 183.25330\nkemaman           240.92321     77.31601  85.69407 111.00780 107.91296\nkuala terengganu  132.08129    125.21110 108.89477 230.74699 209.53616\nmarang            232.24786     87.89733  81.65632 121.04261 115.04855\nsetiu             261.20024     74.20109 108.41338 108.83080  67.73927\n                     bachok gua musang      jeli kota bharu kuala krai\nklang                                                                 \nbatu pahat                                                            \nkluang                                                                \nkota tinggi                                                           \nkulaijaya                                                             \nmersing                                                               \nmuar                                                                  \npontian                                                               \nsegamat                                                               \nbaling                                                                \nbandar baharu                                                         \nkota setar                                                            \nkuala muda                                                            \nkubang pasu                                                           \nkulim                                                                 \nlangkawi                                                              \npadang terap                                                          \npendang                                                               \nsik                                                                   \nyan                                                                   \nbachok                                                                \ngua musang         55.87343                                           \njeli              120.10469  128.68569                                \nkota bharu        137.57827  144.62706  86.31041                      \nkuala krai         56.85632   36.23966 118.58355  146.70860           \nmachang            74.98701   68.08438  80.97751   83.88009   76.90047\npasir mas          26.37247   69.98187 110.99604  120.95202   72.65818\npasir puteh       104.57031   90.15314 197.88025  179.23439  104.51806\ntanah merah        73.01471   47.74533 118.04177  118.91441   45.97484\ntumpat            149.42261  140.08047  96.49434   47.81679  140.49634\nalor gajah         33.19685   75.96626 101.60703  119.43816   66.96622\njasin              34.01228   57.16094  90.07284  110.71122   49.96141\nmelaka tengah     128.49373  136.65559 168.89653  108.94154  153.44695\njelebu            131.91794  125.73924  79.53868   55.43452  135.37893\njempol            159.02382  171.00116 275.92950  266.70876  179.87622\nkuala pilah        66.50983   66.91845 111.93613  113.35104   53.30499\nport dickson      130.82623  156.47599 246.34149  253.79381  164.81625\nrembau            122.44360   93.59555 155.25668  126.55955  112.44324\nseremban          125.43953  131.69483 106.45478   38.20502  141.21832\ntampin            139.37530  131.90470  61.52876   58.70538  127.51606\nbentong            81.48595   92.42353 132.28192  103.16048  111.47382\nbera               52.99208   55.87424  90.22226  118.99721   33.88089\ncameron highlands  97.37665  119.20973  50.69413   81.72711  115.63262\njerantut          152.01093  129.05047  85.04147  100.00553  125.19578\nlipis             144.63053  136.94211  52.61973   70.88288  132.35499\nkuantan           116.18232  118.30116  85.23128   32.59843  124.49469\nmaran             153.70013  141.06183  73.26089   73.23820  141.10552\npekan             143.48532  121.74465  77.63817   99.57326  115.69992\nraub               83.84385  103.07639  47.60258  104.80537   88.78159\nrompin             71.64852   39.80546 144.16514  151.54614   56.32670\ntemerloh           81.67932   87.57971 151.13093  131.94184   87.03261\nhilir perak       265.47304  282.56829 379.33343  370.95213  297.81873\nkampar            155.85897  153.47661 116.34384   65.78300  168.47036\nkerian             68.24673   93.08537  89.84138   86.33943  100.29933\nkuala kangsar     147.66842  147.36404  65.14840   54.09163  149.38637\nperak tengah       59.47177   63.73652  66.97298   98.11102   59.32768\nbarat daya        112.56898  118.30277  57.94502   43.88770  112.26965\ntimur laut        148.54808  168.00460 221.96547  175.26835  187.27070\nbeaufort          174.97986  167.54104  72.75271  102.99999  155.25044\nbeluran           139.37246  110.26477  96.03916  127.39884  102.65034\nkeningau          142.41040  141.73892  54.80557   80.74721  131.06159\nkota belud        105.18994   96.16040  50.81398   94.11023   83.50224\nkota kinabalu     105.52571  109.80668  59.76401   43.63341  106.91518\nkinabatangan      140.93155  138.82976  34.44548   93.47699  128.52632\nkota marudu       157.63339  121.45114 121.69105  145.15460  115.65418\nkudat             145.07438  147.92148  28.08050   90.36748  136.92292\nkunak             185.28617  178.34310  79.44570   91.76644  171.41092\nlahad datu        160.63559  158.93942  51.01013   83.06934  150.59547\npapar              98.07257   66.22305 113.81883  133.35178   50.13370\npenampang         136.43809  119.05062  71.86730   98.35322  107.46558\nranau             110.72014  110.77540  35.24946  100.68846   94.56522\nsandakan          147.09143  151.78857  42.47921   66.57780  142.82454\nsemporna           97.55817   97.07881  35.24778   87.37747   86.55350\nsipitang          161.59091  156.31734  66.41845   90.72762  143.54918\ntawau             157.43676  163.19553  59.60061   65.73168  154.41446\ntenom             170.36824  164.14313  63.39860  106.97088  154.03283\ntuaran            165.35618  154.88587  66.96862   99.46110  144.47748\nbau               133.48422  117.96588  59.96810   96.82011  107.87772\nbelaga            105.73288  148.66682 195.25973  228.95013  142.53933\nbetong             40.92648   74.52521 107.01894  115.14297   85.55698\nbintulu            66.16057   90.87854  57.21162  102.68300   80.46310\ndalat              99.26856  101.33592  40.63120  104.10524   84.05984\njulau             105.23255   69.78292 127.64529  156.80728   50.03554\nkanowit           128.67638   94.23473 105.82939  120.18593   91.52965\nkapit              51.61855   86.33754  95.78216  143.14941   69.61091\nkuching            94.59127  114.48643 108.46743   66.38600  123.90914\nlawas             137.73054  124.74446  74.01455   96.14058  110.35855\nlimbang           100.47758  101.26081  30.60692   88.43587   91.05801\nlubok antu         97.39741   86.44260 201.02814  218.00296   92.66866\nlundu              38.67412   56.06037  92.39013  108.14013   48.37324\nmarudi            176.78648  167.72910 285.84893  297.61484  175.93513\nmatu              189.51981  178.01534  86.81310  119.01384  166.23382\nmiri              104.22244  109.69712 201.25076  180.00333  131.28106\nmukah             139.37227  127.80545  63.45528   77.34773  119.24378\nsaratok            69.60760   82.93377  64.64921  119.54686   63.22125\nsarikei            56.90142  110.74913 119.30656  134.18370  104.98996\nserian            154.55495  155.32470  38.65264   86.08239  146.93864\nsibu              153.44592  163.60520 208.78740  152.41155  184.72445\nsimunjan          182.64216  153.95467 132.39850  139.38109  142.75596\nsong               66.91908   60.06377 152.01677  183.59193   41.78554\nsri aman          158.85406  123.26296 130.30014  152.86435  110.80834\ntatau             128.02395  134.81799  39.95535   77.89028  120.75613\ngombak            216.60750  230.04759 250.34303  179.07319  248.95572\nkuala langat      141.49680  136.92295 197.97007  153.24062  162.54327\nkuala selangor     86.19692   89.80818 109.95581   87.75126  107.65225\npetaling          178.26677  187.73906 143.28138   62.00222  196.54766\nsabak bernam      160.30420  164.93024 224.33182  168.31795  177.00993\nsepang            152.82746  153.12921 185.24557  122.49811  173.76374\nbesut             105.29494   79.64005 104.36406   98.36614   90.28787\ndungun            160.40542  148.03579  78.33701   75.22174  142.50080\nhulu terengganu    26.93379   65.73438 126.02721  132.64987   77.32767\nkemaman            86.84521   91.31432  56.11874   66.95104   93.16184\nkuala terengganu   76.61783   98.45361 172.83124  152.95599  104.32272\nmarang             82.75299   97.61473  72.87559   57.39819  100.04489\nsetiu             142.49436  129.48461  79.15918   95.09815  115.56270\n                    machang pasir mas pasir puteh tanah merah    tumpat\nklang                                                                  \nbatu pahat                                                             \nkluang                                                                 \nkota tinggi                                                            \nkulaijaya                                                              \nmersing                                                                \nmuar                                                                   \npontian                                                                \nsegamat                                                                \nbaling                                                                 \nbandar baharu                                                          \nkota setar                                                             \nkuala muda                                                             \nkubang pasu                                                            \nkulim                                                                  \nlangkawi                                                               \npadang terap                                                           \npendang                                                                \nsik                                                                    \nyan                                                                    \nbachok                                                                 \ngua musang                                                             \njeli                                                                   \nkota bharu                                                             \nkuala krai                                                             \nmachang                                                                \npasir mas          64.50090                                            \npasir puteh       128.22461 113.28388                                  \ntanah merah        60.40939  77.58563    87.45347                      \ntumpat             86.27084 137.49859   174.41365   106.83305          \nalor gajah         75.11027  35.46345   120.82748    76.34734 135.02871\njasin              51.85633  34.58076   116.20685    56.83891 119.53491\nmelaka tengah     108.04956 112.47002   118.73767   119.87111 124.31054\njelebu             62.74211 117.76059   178.59908   113.42285  62.78710\njempol            213.14369 168.09901   113.48716   183.90702 273.80955\nkuala pilah        71.23024  70.37543    96.11570    33.68646 109.32247\nport dickson      193.49048 138.79535   141.72010   181.82963 268.61989\nrembau             80.65144 115.73609   101.97449    76.80121 110.03648\nseremban           72.83975 106.66315   157.55577   110.47112  65.22728\ntampin             80.47567 130.69070   185.06178   106.30027  42.87514\nbentong            63.81278  63.79819   110.26125    90.53045 119.81859\nbera               60.04103  59.22404   118.89640    46.54881 117.93906\ncameron highlands  77.88897  87.98860   179.51348   114.98588 108.51457\njerantut           87.50594 146.15076   188.79124   106.65805  67.73258\nlipis              81.69057 134.46284   197.88816   116.21522  58.30286\nkuantan            55.51163  99.39546   155.67365    95.69380  50.08161\nmaran              83.59872 142.32889   198.55526   120.43898  53.92018\npekan              82.48492 138.61889   183.69404    99.58874  69.98691\nraub               77.19818  81.35225   170.98409    99.32694 118.18605\nrompin             74.44092  76.98485    83.15504    53.84101 144.15610\ntemerloh          102.03309  86.95234    70.12296    65.00163 133.44698\nhilir perak       317.30951 269.72788   241.14167   306.06032 386.45053\nkampar             93.32453 138.86117   192.24515   142.38152  83.78941\nkerian             47.59113  45.52244   139.51123    91.60749 110.46427\nkuala kangsar      81.99273 131.91958   202.95242   130.60472  63.49625\nperak tengah       35.64610  56.01806   135.18957    62.13202 103.43618\nbarat daya         65.51740 100.96103   164.34485    91.07609  52.51553\ntimur laut        159.16593 135.69863   130.61027   166.01175 196.38084\nbeaufort          123.66318 168.79752   227.58806   143.43748  85.97001\nbeluran            98.60822 143.98342   175.69573    96.26091 101.97582\nkeningau          100.56792 137.36208   199.00355   119.76945  77.32108\nkota belud         64.82301 103.59762   164.22036    78.90486  84.05123\nkota kinabalu      56.11660  94.13839   157.13541    85.21649  53.76401\nkinabatangan       95.83607 135.44377   207.99090   124.68750  90.99302\nkota marudu       116.42389 163.44196   179.82901   106.01867 113.08248\nkudat              99.65204 136.72449   215.60812   132.72427  92.79844\nkunak             125.15837 175.39369   236.37474   154.93894  77.51395\nlahad datu        108.23732 151.97922   221.27837   139.48091  79.79457\npapar              79.83737 106.01301   119.31597    40.85610 112.08420\npenampang          85.04153 133.43103   178.85623    93.15909  71.57210\nranau              77.65381 107.75550   181.43355    97.30371  97.68987\nsandakan           98.26101 136.39867   209.42000   130.22574  72.50558\nsemporna           57.23617  92.62630   167.13703    84.66141  87.18767\nsipitang          112.82524 155.37531   212.72220   129.90264  75.10753\ntawau             110.85853 146.94936   215.49325   139.23373  73.47771\ntenom             121.80083 165.33236   230.84326   147.29441  97.92098\ntuaran            111.97347 159.88406   217.39675   132.90376  80.71654\nbau                79.35760 129.25360   183.84933    97.42214  75.40664\nbelaga            174.81461 115.70513   177.91977   173.83016 249.14058\nbetong             63.42553  31.98184   124.26705    88.97672 136.09223\nbintulu            63.78011  60.37090   157.52530    90.56634 118.69118\ndalat              72.62214  97.39173   172.96899    90.28062 103.09107\njulau              95.49902 115.94440   126.74473    58.35541 135.40178\nkanowit            75.34619 127.85434   151.60076    72.89585  88.98381\nkapit              89.99683  58.12084   151.22029    98.04165 156.16835\nkuching            65.53912  73.06932   138.52428   100.88403  96.19250\nlawas              92.67553 135.21300   179.14182    95.08110  71.27708\nlimbang            58.08805  93.89407   172.39138    90.10116  89.40089\nlubok antu        141.94321 113.06980    94.38140   113.51231 215.40978\nlundu              48.38619  36.60146   111.06029    49.05580 114.43887\nmarudi            223.86206 191.46055   143.83394   192.99969 294.74458\nmatu              135.77548 183.95651   240.28113   155.31147  97.84699\nmiri              127.29720 100.87042    76.98658   119.93560 188.41856\nmukah              82.41396 132.66730   183.81610   100.46085  53.13067\nsaratok            70.80536  71.64920   155.20174    82.21743 124.94065\nsarikei           102.95229  49.45915   145.11761   115.12455 160.65095\nserian            102.63826 144.64846   221.61048   139.23792  87.34609\nsibu              144.25534 138.37837   133.02190   156.05803 169.75638\nsimunjan          134.05259 182.78907   196.11934   121.56698  97.38348\nsong              111.71096  87.24800   107.34656    80.33239 180.10181\nsri aman          119.21542 163.04626   174.18896    99.32192 116.22546\ntatau              91.79763 121.00424   192.23884   112.53527  81.44196\ngombak            199.02695 198.62845   198.89161   216.69737 200.99617\nkuala langat      123.31190 129.06408   116.87355   134.85347 160.15190\nkuala selangor     42.87541  68.43581   128.35878    87.80194 102.39935\npetaling          128.45103 158.06547   203.94955   164.07457  91.53558\nsabak bernam      162.47132 153.49100   100.78982   143.16194 172.76857\nsepang            121.70462 136.44585   136.91470   138.85147 133.06188\nbesut              40.62761  97.34313   130.49569    63.99932  82.09853\ndungun             99.37458 152.40889   199.53295   119.95528  46.44854\nhulu terengganu    72.13131  21.57671   105.49697    83.29517 148.87846\nkemaman            28.69525  73.16826   151.91172    80.54879  78.17659\nkuala terengganu  114.60246  76.91569    63.45550    91.44064 163.14130\nmarang             40.13429  64.72015   142.65222    81.86238  79.16833\nsetiu              96.88193 139.65651   180.66322    98.00200  68.32548\n                  alor gajah     jasin melaka tengah    jelebu    jempol\nklang                                                                   \nbatu pahat                                                              \nkluang                                                                  \nkota tinggi                                                             \nkulaijaya                                                               \nmersing                                                                 \nmuar                                                                    \npontian                                                                 \nsegamat                                                                 \nbaling                                                                  \nbandar baharu                                                           \nkota setar                                                              \nkuala muda                                                              \nkubang pasu                                                             \nkulim                                                                   \nlangkawi                                                                \npadang terap                                                            \npendang                                                                 \nsik                                                                     \nyan                                                                     \nbachok                                                                  \ngua musang                                                              \njeli                                                                    \nkota bharu                                                              \nkuala krai                                                              \nmachang                                                                 \npasir mas                                                               \npasir puteh                                                             \ntanah merah                                                             \ntumpat                                                                  \nalor gajah                                                              \njasin               27.21776                                            \nmelaka tengah      129.00406 124.95258                                  \njelebu             124.28093 106.97122     121.74013                    \njempol             180.01301 186.75400     189.76537 268.10254          \nkuala pilah         57.15905  47.71171     121.19088 121.19844 183.06646\nport dickson       155.05632 163.57250     193.86984 248.32606  78.62804\nrembau             133.25664 112.71575      94.69513 109.70811 198.16078\nseremban           114.85360 105.03097      75.18025  55.64696 241.92730\ntampin             122.30393 106.75788     149.46097  60.03695 280.97255\nbentong             89.35240  80.48393      59.51791  96.43159 179.03211\nbera                46.91457  27.64469     141.25143 114.65410 195.30192\ncameron highlands   75.74256  74.32588     146.14104  83.99533 250.52409\njerantut           143.93060 121.26233     170.02956  77.84560 287.42698\nlipis              130.24595 112.37644     160.87267  57.33238 290.20071\nkuantan            104.60113  91.02391      92.35297  40.80432 243.96873\nmaran              143.01207 123.06651     156.03036  49.57725 293.34528\npekan              134.71644 112.33018     169.33186  79.48945 280.97780\nraub                62.21594  57.80862     162.34904 103.59596 240.45187\nrompin              94.10873  74.37395     128.40380 133.02382 160.48782\ntemerloh            76.86088  79.42572     106.55313 146.64081 156.56225\nhilir perak        289.71597 297.16482     284.12713 365.21925 141.10298\nkampar             149.68711 136.19639     111.41584  42.77259 277.80860\nkerian              64.34358  56.09629      97.80257  80.49556 204.28320\nkuala kangsar      134.71098 119.19443     143.56573  35.64503 289.81436\nperak tengah        53.05360  29.94641     132.43237  84.75947 212.88094\nbarat daya          91.54531  80.75539     125.19918  65.08105 252.52742\ntimur laut         157.49847 161.05825      74.63480 183.91801 152.08731\nbeaufort           155.50513 141.45579     200.56247 104.16642 321.48557\nbeluran            131.55999 111.96450     187.41406 109.27565 274.39962\nkeningau           119.93900 110.06240     173.31145  89.58364 289.83430\nkota belud          91.19880  72.77575     159.55565  84.49424 253.07520\nkota kinabalu       86.58072  74.55877     118.36116  57.90091 245.99302\nkinabatangan       122.72537 109.28161     184.04575  85.01349 294.88734\nkota marudu        152.44835 132.05290     198.78259 126.22304 282.27362\nkudat              125.72409 113.47222     184.43231  85.77503 299.30073\nkunak              167.23823 152.31607     193.75967  89.94950 331.11830\nlahad datu         140.93568 128.17597     184.16184  81.98978 311.36820\npapar               97.29762  76.88061     157.23452 124.06329 213.92167\npenampang          123.57410 103.96088     170.44873  89.84425 275.18409\nranau               93.78242  79.02703     172.89568  93.69105 263.30894\nsandakan           125.10947 114.73915     167.85310  76.80483 296.14639\nsemporna            82.71585  65.36070     153.81387  76.58231 250.48965\nsipitang           140.77629 127.87472     186.30369  98.00110 306.22659\ntawau              133.37238 125.46168     170.40848  86.00571 303.50479\ntenom              151.66215 138.36237     204.54212 100.50458 322.29561\ntuaran             148.03754 132.21165     193.12589  93.82499 312.21894\nbau                121.67094 101.21652     171.30426  81.63014 277.18592\nbelaga             117.00888 132.23763     212.58652 225.81131 160.72505\nbetong              46.23916  45.73545     112.66807 106.60749 182.63244\nbintulu             47.93109  41.82841     147.09597  98.81089 223.57979\ndalat               83.08032  68.29945     168.91887  96.79132 252.23040\njulau              109.62927  89.16713     176.63505 142.85014 213.59638\nkanowit            128.51947 103.10980     159.22746  97.11470 250.25926\nkapit               44.75990  47.77281     166.59147 137.96370 200.12319\nkuching             86.00868  81.60472      65.65269  78.67523 209.83319\nlawas              120.97416 104.69406     171.02141  98.12435 275.22906\nlimbang             86.65316  68.97506     155.91183  75.31418 253.82872\nlubok antu         126.38037 119.56596     178.69303 203.02622 114.42746\nlundu               33.86685  11.05689     119.73524 105.49329 184.74201\nmarudi             205.54935 202.53902     238.83267 283.05793 100.22921\nmatu               172.02628 156.30813     215.33810 114.13761 335.70143\nmiri               127.01963 123.57653      98.80013 173.37849 107.88522\nmukah              123.78165 105.99537     160.01588  74.39340 280.01541\nsaratok             56.33005  44.52322     162.93994 112.55243 223.53526\nsarikei             41.75627  64.18747     136.85977 143.69177 181.67372\nserian             136.32920 122.93040     183.75880  79.00964 307.47807\nsibu               160.35188 158.45279      47.51220 159.19569 180.14741\nsimunjan           172.02999 152.85708     200.64628 135.69170 300.80625\nsong                85.33416  77.66051     176.08027 172.85727 156.96361\nsri aman           155.08716 133.21333     198.90038 138.63012 273.59906\ntatau              103.74555  95.32857     166.29915  90.79084 276.72870\ngombak             216.91408 217.13938      96.95203 195.68539 239.99108\nkuala langat       155.71411 145.99687      63.49227 143.92719 176.74563\nkuala selangor      91.10094  76.14425      78.73325  69.41278 203.95138\npetaling           164.31584 158.52216     100.66693  92.71453 284.13141\nsabak bernam       162.04168 163.04901      79.16721 188.78840 160.14191\nsepang             156.85179 148.74067      35.42786 125.97373 207.83103\nbesut              109.71677  84.46228     115.84815  70.90559 224.02219\ndungun             144.17456 127.46379     165.71865  75.12402 298.80094\nhulu terengganu     48.78838  48.05050     111.50638 124.87295 156.85062\nkemaman             77.23533  59.00379     118.17920  51.35722 233.40813\nkuala terengganu    83.96424  90.66363      95.82632 164.02222 116.30523\nmarang              69.35071  58.17167      97.19595  62.21840 221.01157\nsetiu              125.16281 109.49276     170.85352  99.94007 277.96312\n                  kuala pilah port dickson    rembau  seremban    tampin\nklang                                                                   \nbatu pahat                                                              \nkluang                                                                  \nkota tinggi                                                             \nkulaijaya                                                               \nmersing                                                                 \nmuar                                                                    \npontian                                                                 \nsegamat                                                                 \nbaling                                                                  \nbandar baharu                                                           \nkota setar                                                              \nkuala muda                                                              \nkubang pasu                                                             \nkulim                                                                   \nlangkawi                                                                \npadang terap                                                            \npendang                                                                 \nsik                                                                     \nyan                                                                     \nbachok                                                                  \ngua musang                                                              \njeli                                                                    \nkota bharu                                                              \nkuala krai                                                              \nmachang                                                                 \npasir mas                                                               \npasir puteh                                                             \ntanah merah                                                             \ntumpat                                                                  \nalor gajah                                                              \njasin                                                                   \nmelaka tengah                                                           \njelebu                                                                  \njempol                                                                  \nkuala pilah                                                             \nport dickson        179.81347                                           \nrembau              102.67570    202.75636                              \nseremban            110.18184    230.46939 102.27788                    \ntampin              106.02111    267.14990 129.91636  84.27752          \nbentong              96.09387    163.37929  81.27119  71.58592 129.89139\nbera                 39.31109    177.07771 113.72623 118.15859 102.79579\ncameron highlands   103.07277    219.86651 155.00285  93.93586  82.66854\njerantut            119.06992    274.53246 119.33560 113.59437  52.24040\nlipis               119.17374    270.99726 134.51024  93.11574  28.02759\nkuantan              96.69676    230.49788  97.30265  25.38132  62.12754\nmaran               128.51940    276.18777 124.42291  89.40951  41.08403\npekan               110.54677    267.23408 119.82768 113.74270  49.62545\nraub                 86.07650    209.94045 153.93571 116.77167  88.20924\nrompin               77.88176    150.59739  73.40086 133.28149 144.41383\ntemerloh             48.90827    167.57640 112.91283 121.59812 138.97761\nhilir perak         308.07188    141.51310 303.88012 340.58114 393.31793\nkampar              149.57384    260.04745 121.84528  53.34459  94.85443\nkerian               88.58573    175.51341 109.44257  70.40161 106.20349\nkuala kangsar       133.26171    267.26608 134.07969  70.82303  52.95603\nperak tengah         62.10342    187.88172 109.85523  96.81163  84.88975\nbarat daya           81.95680    237.90934 122.71974  65.82597  39.16731\ntimur laut          165.10519    156.75867 145.34960 141.65506 215.99717\nbeaufort            140.77830    304.54159 174.38734 133.79673  52.67341\nbeluran             106.22215    263.19676 137.30660 140.89983  75.27674\nkeningau            111.48767    272.74718 160.34849 110.56777  39.02389\nkota belud           78.57450    234.36943 126.84895 108.56951  52.78181\nkota kinabalu        78.46505    230.93211 115.34838  59.92164  41.68746\nkinabatangan        121.39511    270.49303 162.01776 118.79166  48.85765\nkota marudu         120.10467    276.52808 140.12244 156.82585  93.65059\nkudat               127.74992    272.87972 167.00914 117.02061  54.07208\nkunak               154.91230    313.18801 172.28545 122.40240  52.64817\nlahad datu          135.93148    289.77457 167.69425 113.76597  42.15406\npapar                56.14711    210.00340 102.32220 134.50220 101.91050\npenampang            97.75613    262.82407 128.02528 116.44723  45.67244\nranau                92.24499    238.99127 146.03477 118.48192  62.45936\nsandakan            122.80805    274.85547 160.27454  98.50506  39.13926\nsemporna             82.22115    226.69771 128.89276 100.55483  56.04677\nsipitang            124.85725    291.10083 164.22849 121.74543  41.47176\ntawau               129.48632    284.90887 169.39123 101.45283  45.30587\ntenom               145.04447    300.51114 180.52025 136.37605  58.07237\ntuaran              132.98420    294.92857 162.86414 127.30245  44.57951\nbau                 102.99639    260.18064 129.45857 114.12884  44.96758\nbelaga              161.87753     98.67066 220.45801 218.49337 233.72325\nbetong               84.63251    150.71571 121.96718 100.60129 126.38515\nbintulu              79.18893    191.41479 140.77300 107.47604  94.79015\ndalat                84.45685    227.02569 142.49034 118.70949  70.52885\njulau                75.04149    207.56984 113.98267 156.68155 123.27865\nkanowit              94.79309    242.39429  90.41975 122.15103  82.34986\nkapit                85.73520    162.21147 156.08578 142.91503 134.13589\nkuching              95.77371    192.92444 104.98146  40.96519 105.46511\nlawas                93.60975    265.05496 136.47744 117.83392  45.33008\nlimbang              88.60078    228.03073 130.49511 101.20968  58.79955\nlubok antu          124.93716    102.31554 140.51938 199.18906 212.09595\nlundu                41.01995    164.83601 104.49770 101.42914 104.67960\nmarudi              203.86150    110.36242 206.38727 274.86851 295.23496\nmatu                155.72456    318.55158 182.60143 148.34644  67.30897\nmiri                128.60819    109.18268 107.22065 148.65020 200.36576\nmukah               102.08564    266.93567 128.61464  99.62849  23.45014\nsaratok              73.22537    194.13599 141.25679 125.81170  98.81255\nsarikei              95.14975    146.13774 161.27091 127.82601 149.05436\nserian              136.45503    281.76988 166.28975 113.39986  51.13650\nsibu                159.49431    186.25228 121.71655 116.57851 194.28679\nsimunjan            130.31816    301.78705 146.15706 156.40104  90.92040\nsong                 83.60536    138.51649 137.96364 175.13632 167.98344\nsri aman            114.71605    271.40108 130.96405 162.40123 104.88673\ntatau               100.49733    256.80862 156.62109 105.72681  47.33079\ngombak              216.47375    248.47248 178.73246 148.52452 230.82402\nkuala langat        148.71848    179.91843  84.54752 116.01017 182.76850\nkuala selangor       96.85014    183.64858  78.94705  59.84504 108.21589\npetaling            160.74329    275.38432 147.45352  56.47936 116.49565\nsabak bernam        140.48547    195.10963 129.25736 143.37817 199.80776\nsepang              146.77265    212.40164  93.13434  86.21723 161.95448\nbesut                87.16469    212.78532  55.17824  85.88192  86.81464\ndungun              122.09391    287.59947 138.68816 101.35225  24.60818\nhulu terengganu      81.03474    126.28076 115.25224 114.34619 143.27805\nkemaman              82.01609    209.66917 104.63326  66.39332  64.69362\nkuala terengganu     81.49026    124.15042 118.74745 132.64810 171.35487\nmarang               76.46105    200.67607 104.33993  51.04941  75.85246\nsetiu                95.99832    269.47666 137.75390 117.75520  45.17872\n                    bentong      bera cameron highlands  jerantut     lipis\nklang                                                                      \nbatu pahat                                                                 \nkluang                                                                     \nkota tinggi                                                                \nkulaijaya                                                                  \nmersing                                                                    \nmuar                                                                       \npontian                                                                    \nsegamat                                                                    \nbaling                                                                     \nbandar baharu                                                              \nkota setar                                                                 \nkuala muda                                                                 \nkubang pasu                                                                \nkulim                                                                      \nlangkawi                                                                   \npadang terap                                                               \npendang                                                                    \nsik                                                                        \nyan                                                                        \nbachok                                                                     \ngua musang                                                                 \njeli                                                                       \nkota bharu                                                                 \nkuala krai                                                                 \nmachang                                                                    \npasir mas                                                                  \npasir puteh                                                                \ntanah merah                                                                \ntumpat                                                                     \nalor gajah                                                                 \njasin                                                                      \nmelaka tengah                                                              \njelebu                                                                     \njempol                                                                     \nkuala pilah                                                                \nport dickson                                                               \nrembau                                                                     \nseremban                                                                   \ntampin                                                                     \nbentong                                                                    \nbera              100.63469                                                \ncameron highlands 110.42503  87.33352                                      \njerantut          144.50457 110.08069         118.61410                    \nlipis             134.97850 108.26571          86.94237  43.24894          \nkuantan            76.36561 100.33429          80.73205  90.11525  69.95450\nmaran             132.92679 120.00253         103.20339  39.11514  24.19219\npekan             141.66501  99.99938         111.45228  12.05978  42.00361\nraub              121.41859  60.53467          41.18762 112.12556  90.09938\nrompin             86.93284  72.79744         140.47629 134.71154 146.38456\ntemerloh           98.71018  82.73855         129.20261 158.13496 156.69268\nhilir perak       272.05495 311.88129         349.83279 399.38456 397.93932\nkampar            100.48723 148.74596         110.07951 115.46458  95.36338\nkerian             49.65097  78.65569          68.45453 126.54042 107.10824\nkuala kangsar     120.11599 123.97379          84.40083  74.89899  40.71250\nperak tengah       86.36413  35.56778          62.24502  96.18329  86.64484\nbarat daya        105.24823  82.46839          61.87919  80.27232  54.24267\ntimur laut         96.62963 181.63567         191.14917 235.42602 225.31544\nbeaufort          178.71701 131.41113         110.66022  66.28734  50.19028\nbeluran           157.56700  95.63467         116.96030  62.35280  81.17594\nkeningau          150.84669 104.58490          74.05055  78.52586  52.89297\nkota belud        124.93759  60.81991          73.54247  61.78683  55.77396\nkota kinabalu      96.00161  78.45295          58.08091  80.41865  56.42361\nkinabatangan      152.22347 103.65694          72.39015  70.06459  42.73744\nkota marudu       172.68030 114.08312         142.88899  71.62109  99.94350\nkudat             153.11274 109.71517          72.21292  76.88705  42.89223\nkunak             175.14624 146.72911         114.92603  68.02510  44.18990\nlahad datu        159.79537 124.19476          85.30529  71.18215  36.58585\npapar             126.74895  53.95099         123.72025  91.52431 109.61210\npenampang         144.07173  89.10287         103.51826  36.01351  47.74493\nranau             135.82929  69.04662          67.78001  74.62474  59.27041\nsandakan          145.01153 113.40723          70.68545  78.94997  39.57086\nsemporna          115.58982  60.19394          57.37965  71.15284  54.60062\nsipitang          165.97458 118.30699          99.53719  65.84280  46.89169\ntawau             153.32728 124.68901          78.13118  90.74828  53.88051\ntenom             177.73222 130.88192          98.86068  74.87867  53.34017\ntuaran            168.86402 122.19197         104.64394  53.64956  40.57196\nbau               140.55290  88.63403          95.99367  32.60165  37.98351\nbelaga            169.04311 144.83121         170.00599 247.28561 235.03698\nbetong             62.37228  72.49340          74.62066 146.16220 131.05263\nbintulu           102.41932  52.44540          43.32812 115.99653  95.57060\ndalat             129.62496  58.22832          65.41411  81.89499  68.48462\njulau             141.81331  64.70986         140.89900 105.03868 126.62064\nkanowit           129.80425  87.49430         129.43511  48.10387  80.81504\nkapit             118.24501  54.70325          82.78364 147.35483 134.48673\nkuching            44.63097 101.52417          84.40679 133.51704 112.85753\nlawas             148.44687  89.55643         101.64957  52.81942  55.59055\nlimbang           116.32710  64.85993          59.04195  70.93753  52.61066\nlubok antu        140.04189 118.92333         190.75857 204.19513 214.56612\nlundu              77.08549  25.58473          80.23151 117.32417 110.48787\nmarudi            210.03194 202.92156         272.84969 285.41565 298.34563\nmatu              192.65767 144.86633         127.49732  67.24583  60.23580\nmiri               81.17497 138.31777         178.91534 205.67171 206.40959\nmukah             137.45340  96.42881          93.54987  37.90066  29.89897\nsaratok           117.98496  38.36849          67.76455 109.82791  98.58541\nsarikei            99.58371  86.06062          85.67226 175.65969 154.83957\nserian            154.67996 120.21543          80.07154  72.91595  35.64148\nsibu               84.50370 177.15690         182.79054 211.83320 203.47205\nsimunjan          186.32494 133.63765         161.28358  68.30253  98.29180\nsong              133.18572  67.98543         146.51328 163.84327 171.17346\nsri aman          174.07060 110.60673         158.05970  71.68885 107.13240\ntatau             140.66614  90.70372          62.60719  83.99434  55.00245\ngombak            144.83736 236.11575         224.38895 254.34545 240.69564\nkuala langat       71.94495 161.08608         180.00884 188.06496 188.11491\nkuala selangor     30.22770  93.82146          94.88248 120.20696 109.70659\npetaling          119.28912 171.61456         131.82289 150.16820 125.11834\nsabak bernam      121.56380 172.87024         201.14521 217.77562 216.48206\nsepang             75.32246 163.83877         167.23691 176.11009 170.35037\nbesut              82.52953  82.56791         114.03889  73.09956  85.39598\ndungun            149.58387 120.05897         106.09080  44.64562  34.13413\nhulu terengganu    60.90714  71.86837          99.67463 157.08455 147.53826\nkemaman            78.18435  67.99194          55.99329  83.13340  63.78498\nkuala terengganu   85.32063 103.12378         146.81552 188.08608 183.80448\nmarang             63.84777  73.05790          58.25947 102.88582  81.37327\nsetiu             150.94111  94.75465         105.48814  55.06424  57.89812\n                    kuantan     maran     pekan      raub    rompin  temerloh\nklang                                                                        \nbatu pahat                                                                   \nkluang                                                                       \nkota tinggi                                                                  \nkulaijaya                                                                    \nmersing                                                                      \nmuar                                                                         \npontian                                                                      \nsegamat                                                                      \nbaling                                                                       \nbandar baharu                                                                \nkota setar                                                                   \nkuala muda                                                                   \nkubang pasu                                                                  \nkulim                                                                        \nlangkawi                                                                     \npadang terap                                                                 \npendang                                                                      \nsik                                                                          \nyan                                                                          \nbachok                                                                       \ngua musang                                                                   \njeli                                                                         \nkota bharu                                                                   \nkuala krai                                                                   \nmachang                                                                      \npasir mas                                                                    \npasir puteh                                                                  \ntanah merah                                                                  \ntumpat                                                                       \nalor gajah                                                                   \njasin                                                                        \nmelaka tengah                                                                \njelebu                                                                       \njempol                                                                       \nkuala pilah                                                                  \nport dickson                                                                 \nrembau                                                                       \nseremban                                                                     \ntampin                                                                       \nbentong                                                                      \nbera                                                                         \ncameron highlands                                                            \njerantut                                                                     \nlipis                                                                        \nkuantan                                                                      \nmaran              68.20788                                                  \npekan              89.34095  44.04986                                        \nraub               98.34630 109.25446 102.06916                              \nrompin            121.96272 146.41332 129.13921 125.09613                    \ntemerloh          117.42612 163.64835 151.21601 122.29114  97.27351          \nhilir perak       347.14807 398.68660 394.03255 346.44479 270.35022 284.84181\nkampar             58.43201  84.18859 119.09401 138.06303 157.58105 164.58033\nkerian             64.73220 111.96623 121.46953  79.18041  97.49040 108.54188\nkuala kangsar      54.45508  38.02980  76.56701 102.10405 153.51941 164.20283\nperak tengah       77.97889  97.28867  87.43098  46.75321  81.54613  99.93279\nbarat daya         45.61532  67.60440  74.88131  69.28071 129.64440 112.42451\ntimur laut        158.09552 222.35112 233.29259 205.39178 156.95689 139.85460\nbeaufort          112.01579  67.05381  63.39470 106.74434 181.36056 179.02254\nbeluran           117.81085  89.71924  54.84342 101.30610 131.10449 142.69868\nkeningau           90.12683  74.11607  72.06130  74.83162 161.25844 144.85556\nkota belud         84.28068  72.40090  50.69123  54.76506 113.79321 121.61374\nkota kinabalu      39.09488  67.61699  75.19373  67.88187 122.19805 107.53025\nkinabatangan       96.08685  65.30598  63.15198  68.30764 157.04032 160.57944\nkota marudu       134.75014 104.01935  67.21490 127.40728 139.30172 153.36348\nkudat              95.27125  65.61424  70.99820  70.73069 163.12200 167.27767\nkunak             103.34455  52.55993  70.04790 120.77428 189.17206 190.43133\nlahad datu         93.21273  56.62322  68.24595  90.56607 174.03599 172.10624\npapar             114.46150 116.42679  82.76228  99.50563  77.87679  95.30675\npenampang          91.85817  59.32787  25.94163  89.83752 130.27576 139.32263\nranau              94.72509  79.84192  63.84676  44.04461 127.96037 136.16751\nsandakan           79.00608  60.69224  74.81791  78.84560 165.63542 157.35775\nsemporna           77.01067  71.93985  61.37104  41.23132 113.83254 124.15526\nsipitang          100.11076  66.07715  61.26119  95.61256 170.50968 161.85790\ntawau              84.86996  72.33559  87.39362  90.07628 178.18517 159.99431\ntenom             114.77951  71.76205  71.06562  97.67629 182.28825 182.68659\ntuaran            104.51067  57.19845  50.27845 100.28598 169.23544 171.74729\nbau                88.90235  51.01676  21.65522  83.22847 129.22348 145.82755\nbelaga            212.39301 247.45341 237.66708 154.32209 158.54551 167.07686\nbetong             94.89632 138.50359 139.31092  79.06906  91.18711  96.62477\nbintulu            90.90879 111.28310 106.66431  22.65660 109.70057 113.70429\ndalat              95.57500  87.68540  70.85367  36.19874 119.15859 128.74586\njulau             136.28954 132.98631  96.34170 112.07318  77.47744 113.23282\nkanowit           100.04482  78.16118  44.59299 114.48577  95.61150 133.43944\nkapit             128.21058 149.43992 137.05010  54.68270 104.89991 116.43916\nkuching            49.31257 114.36030 130.58137 104.08801 116.08545 103.40496\nlawas              94.34741  70.51316  44.03915  87.82256 137.91774 133.36663\nlimbang            77.63831  69.51545  61.70161  43.88934 115.65510 131.07350\nlubok antu        190.38095 217.91237 197.03251 169.86028  74.87885 129.56571\nlundu              87.26223 120.05682 108.69866  64.03273  68.50886  75.29637\nmarudi            269.48550 300.01342 279.01792 253.37107 153.92354 196.76791\nmatu              126.33877  72.34897  66.36919 122.31895 190.92855 195.03793\nmiri              153.14656 204.23166 201.90979 178.78628  91.62229 113.05084\nmukah              75.69811  43.86377  32.32638  88.69551 138.44006 140.34739\nsaratok           106.09770 114.93753  99.00045  30.97073 102.31923 114.84011\nsarikei           123.27844 167.82178 167.07996  82.60097 123.96166 104.29243\nserian             92.39453  55.71172  69.48224  84.02861 168.72768 174.86256\nsibu              135.07180 197.14368 211.50269 199.86077 151.42596 139.13010\nsimunjan          135.41107 100.21797  67.63347 147.33471 161.05714 163.91272\nsong              160.70002 180.01293 154.34822 117.48935  68.59407 105.55954\nsri aman          139.79078 109.67071  67.15836 136.25775 129.28360 152.64976\ntatau              84.95074  77.98941  75.99733  57.77380 151.47849 137.06654\ngombak            172.45542 232.77624 255.86717 248.77508 219.31178 195.32658\nkuala langat      127.64805 178.68378 188.46688 191.39928 118.82945 137.96429\nkuala selangor     58.02499 106.49580 118.00871 107.06655  87.78338 111.46377\npetaling           75.52659 119.20782 152.86047 161.23425 188.35979 166.06950\nsabak bernam      155.35588 214.03505 215.76605 208.14829 154.57950 104.86885\nsepang            104.32534 160.64925 177.60877 184.95325 140.68387 136.06749\nbesut              68.89495  78.23574  71.85460 110.14696  73.07849 117.59996\ndungun             80.35366  40.72010  45.57030 108.60592 158.38014 155.70331\nhulu terengganu   109.31843 153.63768 150.08050  96.04465  74.23402  89.52861\nkemaman            45.98129  70.67483  77.72698  61.56316 100.76085 115.10906\nkuala terengganu  134.05151 188.60059 181.75067 142.58420  95.40953  53.55823\nmarang             38.01058  87.76128  97.97432  70.41299 104.62220 101.10129\nsetiu              94.95758  71.85582  47.55185  93.41546 142.22700 134.03918\n                  hilir perak    kampar    kerian kuala kangsar perak tengah\nklang                                                                       \nbatu pahat                                                                  \nkluang                                                                      \nkota tinggi                                                                 \nkulaijaya                                                                   \nmersing                                                                     \nmuar                                                                        \npontian                                                                     \nsegamat                                                                     \nbaling                                                                      \nbandar baharu                                                               \nkota setar                                                                  \nkuala muda                                                                  \nkubang pasu                                                                 \nkulim                                                                       \nlangkawi                                                                    \npadang terap                                                                \npendang                                                                     \nsik                                                                         \nyan                                                                         \nbachok                                                                      \ngua musang                                                                  \njeli                                                                        \nkota bharu                                                                  \nkuala krai                                                                  \nmachang                                                                     \npasir mas                                                                   \npasir puteh                                                                 \ntanah merah                                                                 \ntumpat                                                                      \nalor gajah                                                                  \njasin                                                                       \nmelaka tengah                                                               \njelebu                                                                      \njempol                                                                      \nkuala pilah                                                                 \nport dickson                                                                \nrembau                                                                      \nseremban                                                                    \ntampin                                                                      \nbentong                                                                     \nbera                                                                        \ncameron highlands                                                           \njerantut                                                                    \nlipis                                                                       \nkuantan                                                                     \nmaran                                                                       \npekan                                                                       \nraub                                                                        \nrompin                                                                      \ntemerloh                                                                    \nhilir perak                                                                 \nkampar              365.92397                                               \nkerian              298.11133  97.55214                                     \nkuala kangsar       388.15631  63.21858  93.81698                           \nperak tengah        320.07760 119.31017  55.52611      95.67904             \nbarat daya          364.39834  95.46266  78.27876      61.94374     66.62243\ntimur laut          220.70146 171.76469 135.97674     206.13311    176.93780\nbeaufort            436.18828 138.63463 148.12652      84.26143    118.48378\nbeluran             392.32584 147.97248 139.12758     115.37547     91.41110\nkeningau            404.15782 123.45919 119.52354      78.95706     90.81276\nkota belud          367.26849 125.58889  95.42389      84.57022     49.98951\nkota kinabalu       356.54411  88.59414  70.59390      61.16803     59.74349\nkinabatangan        403.52506 123.30884 115.90470      70.76240     84.43393\nkota marudu         402.31868 162.53883 159.98546     134.05986    113.38342\nkudat               405.67010 122.18964 114.10131      64.75526     89.44477\nkunak               440.68048 118.46889 146.91264      65.62101    127.71891\nlahad datu          420.04155 115.15345 126.27130      60.35931    104.12834\npapar               337.89101 159.91107 117.85179     135.40430     72.25226\npenampang           392.66596 129.79771 121.03403      85.42392     82.10162\nranau               374.48934 134.47952  98.80784      86.26977     57.02627\nsandakan            404.57138 108.47150 110.12190      54.77931     93.77955\nsemporna            359.77781 116.96282  80.24215      75.15331     40.10254\nsipitang            422.41757 132.62557 136.15717      80.61919    106.99936\ntawau               413.52649 112.73646 120.82715      65.56274    106.94207\ntenom               432.94403 135.36014 144.23339      83.09463    113.64335\ntuaran              425.94245 130.32955 139.50674      77.72714    107.80190\nbau                 390.55433 123.22659 114.10076      75.49735     76.13722\nbelaga              230.56089 246.28657 152.24852     235.56792    153.52998\nbetong              277.61656 124.59868  42.42404     124.84915     56.93194\nbintulu             326.66785 130.92379  59.48613     101.49137     34.33611\ndalat               363.11623 137.08690  92.38786      92.39636     47.82292\njulau               335.70281 179.73038 132.44065     153.24781     85.48139\nkanowit             365.25177 133.57501 121.12509     106.42276     84.33084\nkapit               301.97893 169.01118  83.22647     142.96459     58.68018\nkuching             305.87169  82.23562  40.97256      94.00874     82.96147\nlawas               395.80769 136.29929 124.69484      92.25288     86.36657\nlimbang             360.94479 115.85024  79.13712      71.30217     42.92922\nlubok antu          220.61391 225.89502 150.49377     222.56575    137.03678\nlundu               297.13847 134.67311  56.39067     117.71798     32.18295\nmarudi              174.31751 301.13095 228.83591     304.70832    221.47909\nmatu                450.02479 148.32991 163.09731      94.28561    131.87963\nmiri                200.42330 177.46192 119.28760     198.04619    141.18243\nmukah               395.19797 112.36612 113.39740      66.13555     83.69780\nsaratok             332.10391 149.28638  80.89424     114.42086     36.46586\nsarikei             277.89703 162.14726  71.79898     151.08444     84.99659\nserian              412.44101 113.58358 117.86189      54.38354     97.78452\nsibu                254.99372 142.61483 128.22550     182.59068    168.48347\nsimunjan            426.26658 169.04771 174.50821     133.86232    136.10472\nsong                272.58161 203.89287 125.26091     186.43955     93.82344\nsri aman            396.67570 176.00969 162.93050     142.19241    117.83362\ntatau               389.77446 125.67611 104.68910      77.20990     78.27745\ngombak              299.44669 167.27581 179.46733     213.60639    224.18114\nkuala langat        254.79510 133.65298 120.27076     170.98441    151.78781\nkuala selangor      296.54667  79.41180  39.58522      93.94401     71.19218\npetaling            375.86329  68.66128 119.88285      95.96839    150.33294\nsabak bernam        267.81925 184.60773 158.80537     209.40855    179.28857\nsepang              292.69979 108.17521 116.57633     149.57534    151.57676\nbesut               330.00107  99.58780  82.91841      90.44406     68.91955\ndungun              413.19966 107.44852 128.47839      64.30079    105.13446\nhulu terengganu     254.88981 142.72979  55.36986     143.45656     67.71558\nkemaman             335.87367  85.57089  45.24356      61.13010     37.56665\nkuala terengganu    237.12678 175.72863 105.10999     182.71308    116.37324\nmarang              324.11776  85.45954  33.62282      72.50827     50.37631\nsetiu               399.44052 136.79581 128.51837      93.85431     92.00676\n                  barat daya timur laut  beaufort   beluran  keningau\nklang                                                                \nbatu pahat                                                           \nkluang                                                               \nkota tinggi                                                          \nkulaijaya                                                            \nmersing                                                              \nmuar                                                                 \npontian                                                              \nsegamat                                                              \nbaling                                                               \nbandar baharu                                                        \nkota setar                                                           \nkuala muda                                                           \nkubang pasu                                                          \nkulim                                                                \nlangkawi                                                             \npadang terap                                                         \npendang                                                              \nsik                                                                  \nyan                                                                  \nbachok                                                               \ngua musang                                                           \njeli                                                                 \nkota bharu                                                           \nkuala krai                                                           \nmachang                                                              \npasir mas                                                            \npasir puteh                                                          \ntanah merah                                                          \ntumpat                                                               \nalor gajah                                                           \njasin                                                                \nmelaka tengah                                                        \njelebu                                                               \njempol                                                               \nkuala pilah                                                          \nport dickson                                                         \nrembau                                                               \nseremban                                                             \ntampin                                                               \nbentong                                                              \nbera                                                                 \ncameron highlands                                                    \njerantut                                                             \nlipis                                                                \nkuantan                                                              \nmaran                                                                \npekan                                                                \nraub                                                                 \nrompin                                                               \ntemerloh                                                             \nhilir perak                                                          \nkampar                                                               \nkerian                                                               \nkuala kangsar                                                        \nperak tengah                                                         \nbarat daya                                                           \ntimur laut         187.15842                                         \nbeaufort            80.90896  266.15501                              \nbeluran             95.49589  246.47059  83.35630                    \nkeningau            51.91308  235.02107  45.43215  76.79117          \nkota belud          54.58858  215.74405  73.13819  53.79133  53.18381\nkota kinabalu       12.33864  179.84052  87.58328  93.38677  56.91910\nkinabatangan        64.99738  242.87483  44.87810  75.23788  34.80269\nkota marudu        116.26782  258.86132  99.39983  27.08583  99.08134\nkudat               65.27128  242.64793  47.79937  92.14524  43.62463\nkunak               83.97506  261.24504  33.24564 101.97723  61.24329\nlahad datu          65.74892  247.35752  32.34476  90.78080  36.38050\npapar               98.01412  206.74365 125.91330  68.61596 109.91106\npenampang           65.69276  233.45755  55.66519  47.41557  57.16604\nranau               61.22353  226.34892  70.54034  70.98185  53.21738\nsandakan            47.83337  229.59306  47.90941  99.04120  34.15764\nsemporna            49.99685  207.36702  79.60974  72.00494  56.80079\nsipitang            65.23197  251.45327  18.73137  79.20852  31.78178\ntawau               53.19632  233.41253  51.88984 107.30674  34.74449\ntenom               85.04658  267.21854  28.03382  81.42574  42.68486\ntuaran              75.92184  258.25702  16.10173  70.27223  42.80874\nbau                 65.32075  232.85488  54.72651  52.00694  57.31013\nbelaga             204.71847  199.73751 259.24284 230.23916 227.14897\nbetong              99.88568  137.45563 166.63695 140.78330 131.95531\nbintulu             71.13829  186.49822 120.83313 110.56361  89.76161\ndalat               63.82002  219.51650  82.81865  74.74981  62.40024\njulau              120.68246  220.99695 141.59081  81.11318 129.91560\nkanowit             94.47318  218.04039 105.42098  61.04231 104.89278\nkapit              110.25359  192.29875 156.04988 132.86833 126.90006\nkuching             75.71071  116.79888 153.20204 151.20613 123.62353\nlawas               60.87177  234.35243  52.57741  53.28873  47.73386\nlimbang             53.42071  208.93288  80.22339  78.12973  61.60665\nlubok antu         193.03364  178.93850 244.58594 188.56518 221.16188\nlundu               78.46941  157.98711 140.43840 111.18129 110.79706\nmarudi             275.66731  218.23474 328.62541 268.56282 305.08357\nmatu                98.93143  281.72028  20.52858  86.70875  64.11763\nmiri               175.36446   80.98231 246.98157 208.29154 218.87439\nmukah               49.62245  225.56708  46.42719  63.39480  44.90028\nsaratok             81.32920  203.22790 117.79341  96.94490  92.05868\nsarikei            114.76155  151.20957 181.04426 168.95102 144.86466\nserian              68.15006  244.12621  45.50240  96.92872  49.34479\nsibu               170.13997   41.22802 245.66643 228.91925 218.16140\nsimunjan           114.86927  267.43255  87.68385  69.59575 102.23701\nsong               149.93777  195.41618 193.10372 140.68927 169.46495\nsri aman           121.70242  258.13090 108.49528  58.21475 115.61044\ntatau               42.23306  224.51359  56.91882  88.00605  27.11381\ngombak             208.81670   92.34932 280.11380 278.74252 255.11502\nkuala langat       164.85187   77.09091 233.35563 206.19125 210.64749\nkuala selangor      89.05355  124.96939 155.91685 137.99790 131.46380\npetaling           104.98270  162.59538 157.59258 183.81367 140.22909\nsabak bernam       174.64515   90.84159 247.32876 223.44476 218.73685\nsepang             144.11914   85.15892 213.11880 200.06585 190.82642\nbesut               84.80318  172.20947 127.39809  96.40771 116.00678\ndungun              60.81999  234.77325  42.49220  76.12501  50.19789\nhulu terengganu    115.73780  127.43799 183.47872 151.89739 151.06943\nkemaman             47.09363  171.55177 105.65024  99.22666  81.51055\nkuala terengganu   140.08903  101.82326 214.21123 181.62607 180.81269\nmarang              45.75096  150.41295 120.36387 118.13782  91.44758\nsetiu               61.70492  235.33360  52.33847  57.00747  48.43013\n                  kota belud kota kinabalu kinabatangan kota marudu     kudat\nklang                                                                        \nbatu pahat                                                                   \nkluang                                                                       \nkota tinggi                                                                  \nkulaijaya                                                                    \nmersing                                                                      \nmuar                                                                         \npontian                                                                      \nsegamat                                                                      \nbaling                                                                       \nbandar baharu                                                                \nkota setar                                                                   \nkuala muda                                                                   \nkubang pasu                                                                  \nkulim                                                                        \nlangkawi                                                                     \npadang terap                                                                 \npendang                                                                      \nsik                                                                          \nyan                                                                          \nbachok                                                                       \ngua musang                                                                   \njeli                                                                         \nkota bharu                                                                   \nkuala krai                                                                   \nmachang                                                                      \npasir mas                                                                    \npasir puteh                                                                  \ntanah merah                                                                  \ntumpat                                                                       \nalor gajah                                                                   \njasin                                                                        \nmelaka tengah                                                                \njelebu                                                                       \njempol                                                                       \nkuala pilah                                                                  \nport dickson                                                                 \nrembau                                                                       \nseremban                                                                     \ntampin                                                                       \nbentong                                                                      \nbera                                                                         \ncameron highlands                                                            \njerantut                                                                     \nlipis                                                                        \nkuantan                                                                      \nmaran                                                                        \npekan                                                                        \nraub                                                                         \nrompin                                                                       \ntemerloh                                                                     \nhilir perak                                                                  \nkampar                                                                       \nkerian                                                                       \nkuala kangsar                                                                \nperak tengah                                                                 \nbarat daya                                                                   \ntimur laut                                                                   \nbeaufort                                                                     \nbeluran                                                                      \nkeningau                                                                     \nkota belud                                                                   \nkota kinabalu       53.78020                                                 \nkinabatangan        47.57508      67.78926                                   \nkota marudu         78.34145     114.21418     99.58034                      \nkudat               58.08552      69.81293     19.03406   115.90472          \nkunak               89.57577      89.53091     57.95303   116.69291  55.44822\nlahad datu          68.00518      70.78290     29.05896   111.51407  27.22974\npapar               65.70653      94.88783    112.09269    75.53828 122.83207\npenampang           37.35113      68.03067     55.64384    63.83110  65.30632\nranau               24.46728      63.01584     38.74525    96.32514  44.67830\nsandakan            64.72912      54.71768     36.54425   121.21958  29.23574\nsemporna            20.80857      48.25860     45.63844    97.13392  51.43127\nsipitang            62.66662      72.67640     42.08886    96.93162  45.97037\ntawau               77.67062      60.89720     50.41182   128.18369  45.94398\ntenom               71.58942      89.18351     31.00630   101.00034  38.51232\ntuaran              62.26478      80.71391     37.32911    87.30818  44.64766\nbau                 33.28722      66.72777     45.77565    71.28777  54.48633\nbelaga             194.70085     200.05138    221.08822   249.72125 221.88487\nbetong             103.91800      90.80467    129.82564   161.36526 132.62989\nbintulu             62.63373      67.48192     82.62675   135.50738  83.59461\ndalat               26.43805      64.33191     50.03286    99.95222  55.43566\njulau               82.02278     117.76190    126.92221    84.95804 137.23200\nkanowit             65.63199      91.49056     99.14694    64.15117 108.18039\nkapit               92.24989     106.78590    118.99788   155.29172 121.01413\nkuching            111.59448      68.64647    129.19631   169.63815 127.15412\nlawas               40.43227      65.39285     56.87701    69.83737  66.40672\nlimbang             28.29253      52.21769     45.78669   102.83516  48.57015\nlubok antu         173.05418     186.22617    216.60728   195.69977 222.83552\nlundu               72.28123      72.62086    110.85890   130.09831 114.72351\nmarudi             257.49184     268.65475    301.47815   272.08310 307.88425\nmatu                85.58696     104.77188     57.74484    99.09435  61.12826\nmiri               183.54856     166.93028    220.72885   218.04632 223.65340\nmukah               43.28164      53.38087     48.25825    80.73109  54.66071\nsaratok             53.41915      79.11980     82.86928   120.51731  86.74238\nsarikei            124.14791     110.80204    146.26272   191.45970 145.23267\nserian              67.11885      72.42294     28.05896   118.99829  16.27397\nsibu               201.61503     162.66455    226.43114   239.62332 226.38270\nsimunjan            94.79001     117.85596    110.03159    59.97113 120.26881\nsong               122.19508     145.05541    165.23624   151.73718 172.23529\nsri aman            85.39090     121.92112    114.38980    47.25063 125.90163\ntatau               47.57622      49.66549     37.81050   111.82803  38.11612\ngombak             250.69227     203.41402    266.59941   289.51024 264.07968\nkuala langat       184.83420     156.06918    213.60200   214.09959 215.29050\nkuala selangor     105.42725      79.18032    128.77642   154.17717 129.55766\npetaling           154.55399     103.46592    152.14508   198.28869 147.17727\nsabak bernam       203.12510     169.80889    235.91155   229.54115 238.78787\nsepang             176.52661     136.89277    198.75751   209.09899 198.95377\nbesut               78.78061      77.71532    110.79041   106.11717 115.55991\ndungun              66.79844      64.82748     58.50708    89.37718  63.55026\nhulu terengganu    116.62168     107.41787    148.97122   170.04459 151.68947\nkemaman             55.99543      39.13472     75.29056   120.85533  75.91065\nkuala terengganu   152.55264     134.27151    190.60476   193.96949 193.96696\nmarang              74.18087      38.20119     93.61708   138.84126  92.53231\nsetiu               47.27407      66.76306     61.24392    71.63403  70.31888\n                      kunak lahad datu     papar penampang     ranau  sandakan\nklang                                                                         \nbatu pahat                                                                    \nkluang                                                                        \nkota tinggi                                                                   \nkulaijaya                                                                     \nmersing                                                                       \nmuar                                                                          \npontian                                                                       \nsegamat                                                                       \nbaling                                                                        \nbandar baharu                                                                 \nkota setar                                                                    \nkuala muda                                                                    \nkubang pasu                                                                   \nkulim                                                                         \nlangkawi                                                                      \npadang terap                                                                  \npendang                                                                       \nsik                                                                           \nyan                                                                           \nbachok                                                                        \ngua musang                                                                    \njeli                                                                          \nkota bharu                                                                    \nkuala krai                                                                    \nmachang                                                                       \npasir mas                                                                     \npasir puteh                                                                   \ntanah merah                                                                   \ntumpat                                                                        \nalor gajah                                                                    \njasin                                                                         \nmelaka tengah                                                                 \njelebu                                                                        \njempol                                                                        \nkuala pilah                                                                   \nport dickson                                                                  \nrembau                                                                        \nseremban                                                                      \ntampin                                                                        \nbentong                                                                       \nbera                                                                          \ncameron highlands                                                             \njerantut                                                                      \nlipis                                                                         \nkuantan                                                                       \nmaran                                                                         \npekan                                                                         \nraub                                                                          \nrompin                                                                        \ntemerloh                                                                      \nhilir perak                                                                   \nkampar                                                                        \nkerian                                                                        \nkuala kangsar                                                                 \nperak tengah                                                                  \nbarat daya                                                                    \ntimur laut                                                                    \nbeaufort                                                                      \nbeluran                                                                       \nkeningau                                                                      \nkota belud                                                                    \nkota kinabalu                                                                 \nkinabatangan                                                                  \nkota marudu                                                                   \nkudat                                                                         \nkunak                                                                         \nlahad datu         32.65869                                                   \npapar             143.53414  129.48060                                        \npenampang          72.31745   64.09767  73.21030                              \nranau              88.49471   62.98074  84.34814  51.02868                    \nsandakan           48.46350   23.82679 125.65997  67.65328  58.79362          \nsemporna           91.41365   66.62917  79.30385  52.97517  21.39800  59.49440\nsipitang           42.10504   32.54834 114.90957  48.45804  62.03647  39.24805\ntawau              51.51706   32.84276 135.51234  78.22974  73.71077  19.62090\ntenom              42.82483   26.61013 130.64737  65.24924  66.20764  47.66580\ntuaran             36.06546   30.97785 115.28791  44.76919  62.63841  47.86061\nbau                67.97355   57.19219  79.82222  18.50681  42.90716  62.00213\nbelaga            272.14006  243.54750 190.85549 228.88619 190.30650 229.37794\nbetong            170.83531  146.07313 115.71800 135.52590 108.74937 132.01696\nbintulu           131.23705  102.98101  98.41400  97.71242  56.64645  89.50882\ndalat             100.26272   74.44233  79.26766  58.32073  12.53662  68.31436\njulau             160.43886  146.66932  27.17848  89.29614  96.73115 144.46405\nkanowit           113.88272  109.73769  55.40965  53.54775  84.75934 111.72818\nkapit             170.52718  142.45730 105.43676 127.00154  86.57229 130.32990\nkuching           147.78822  131.84252 131.48020 129.86133 118.82330 113.67792\nlawas              73.95446   63.53319  75.80376  20.84240  52.26242  64.11187\nlimbang            90.13611   66.08062  85.24587  56.13140  23.24048  59.07790\nlubok antu        256.87009  237.77686 130.74353 194.32575 182.75429 228.38881\nlundu             150.90966  128.47136  71.69066 100.75864  80.20004 114.79509\nmarudi            340.75544  322.48397 210.00227 277.02794 267.61864 312.89133\nmatu               37.01874   46.76281 134.63164  63.59308  83.49784  65.84433\nmiri              248.41079  232.69176 157.94426 202.78156 195.93069 218.46034\nmukah              55.65555   47.95880  88.93054  24.45557  53.97309  48.79829\nsaratok           133.86398  107.07196  79.95188  87.89724  47.75855  97.40138\nsarikei           189.60677  162.18813 138.24938 157.01220 121.26240 143.81906\nserian             43.38804   20.36407 130.53746  68.40032  57.63489  28.10546\nsibu              237.42001  227.58528 195.40486 214.40939 214.22644 211.44499\nsimunjan          103.55192  110.29469  94.48345  62.32488 109.77357 117.91524\nsong              210.33504  188.64075  85.74303 146.33322 129.12101 180.03911\nsri aman          126.65297  125.14034  64.59100  64.26186 101.47197 131.17713\ntatau              72.14879   45.25022 105.82915  60.20681  40.12972  31.31765\ngombak            266.25128  260.93592 253.81226 259.28737 261.66717 244.28283\nkuala langat      225.66546  217.46112 171.71780 195.43853 199.61342 204.95531\nkuala selangor    150.52810  136.00400 117.35261 123.33673 115.89145 123.48470\npetaling          138.38646  137.55971 186.01899 156.15088 161.49414 123.29531\nsabak bernam      247.38649  237.96046 179.40269 211.59285 218.86131 221.41035\nsepang            202.12308  196.76600 174.18770 183.34606 190.83991 182.94515\nbesut             126.63743  119.11733  76.79030  82.32878  95.99040 113.94187\ndungun             40.71234   45.53400 110.05141  44.87735  76.11727  51.17658\nhulu terengganu   189.17570  165.94888 113.91673 146.40616 122.77337 151.59919\nkemaman           105.65320   85.93216  93.53593  78.28947  62.31132  73.63160\nkuala terengganu  221.81966  202.73875 128.59641 173.90586 163.57041 185.67219\nmarang            119.50726  100.33304 103.60906  95.33335  80.36758  83.11599\nsetiu              73.11087   64.85699  79.58712  25.92697  59.13610  65.28601\n                   semporna  sipitang     tawau     tenom    tuaran       bau\nklang                                                                        \nbatu pahat                                                                   \nkluang                                                                       \nkota tinggi                                                                  \nkulaijaya                                                                    \nmersing                                                                      \nmuar                                                                         \npontian                                                                      \nsegamat                                                                      \nbaling                                                                       \nbandar baharu                                                                \nkota setar                                                                   \nkuala muda                                                                   \nkubang pasu                                                                  \nkulim                                                                        \nlangkawi                                                                     \npadang terap                                                                 \npendang                                                                      \nsik                                                                          \nyan                                                                          \nbachok                                                                       \ngua musang                                                                   \njeli                                                                         \nkota bharu                                                                   \nkuala krai                                                                   \nmachang                                                                      \npasir mas                                                                    \npasir puteh                                                                  \ntanah merah                                                                  \ntumpat                                                                       \nalor gajah                                                                   \njasin                                                                        \nmelaka tengah                                                                \njelebu                                                                       \njempol                                                                       \nkuala pilah                                                                  \nport dickson                                                                 \nrembau                                                                       \nseremban                                                                     \ntampin                                                                       \nbentong                                                                      \nbera                                                                         \ncameron highlands                                                            \njerantut                                                                     \nlipis                                                                        \nkuantan                                                                      \nmaran                                                                        \npekan                                                                        \nraub                                                                         \nrompin                                                                       \ntemerloh                                                                     \nhilir perak                                                                  \nkampar                                                                       \nkerian                                                                       \nkuala kangsar                                                                \nperak tengah                                                                 \nbarat daya                                                                   \ntimur laut                                                                   \nbeaufort                                                                     \nbeluran                                                                      \nkeningau                                                                     \nkota belud                                                                   \nkota kinabalu                                                                \nkinabatangan                                                                 \nkota marudu                                                                  \nkudat                                                                        \nkunak                                                                        \nlahad datu                                                                   \npapar                                                                        \npenampang                                                                    \nranau                                                                        \nsandakan                                                                     \nsemporna                                                                     \nsipitang           69.60647                                                  \ntawau              74.61467  41.92122                                        \ntenom              74.83431  36.36192  53.59521                              \ntuaran             69.64722  22.98485  55.32645  25.71237                    \nbau                44.13235  50.31544  76.00157  59.36444  41.90655          \nbelaga            184.12102 247.38831 239.70146 250.98736 251.88803 223.80825\nbetong             91.57601 153.99312 141.55314 158.89220 156.77870 129.96572\nbintulu            46.75682 109.30521 101.72314 113.22234 113.23420  90.48348\ndalat              20.47628  73.48145  82.86588  78.22903  74.69144  51.06503\njulau              94.29033 132.75941 156.09502 145.48549 130.80372  93.70190\nkanowit            77.79904 100.04891 124.04286 112.25052  92.61231  55.64521\nkapit              81.72080 144.88203 142.45198 148.88134 148.43238 121.28682\nkuching           100.08278 139.57528 119.06833 153.10271 146.20678 126.49280\nlawas              56.74359  40.49364  70.90362  64.88058  45.77159  33.89280\nlimbang            10.23285  71.68172  75.85197  75.42412  70.53086  44.91181\nlubok antu        172.41111 233.24319 240.69392 243.46483 233.19071 193.63703\nlundu              66.24391 126.60270 125.55208 139.38808 131.27013  98.89453\nmarudi            257.38551 317.13755 324.66237 327.93961 317.12209 277.21737\nmatu               93.16922  38.35315  70.57562  35.49770  25.63985  61.88947\nmiri              178.09718 233.42934 227.16378 247.37833 236.40715 201.86306\nmukah              52.26255  36.40008  58.33934  57.35688  36.88883  26.48927\nsaratok            44.78213 107.17787 110.77344 112.16763 109.64044  82.09404\nsarikei           111.10621 166.77738 151.04875 175.59035 175.28168 153.08134\nserian             60.95684  46.83649  44.24037  37.64272  42.40828  57.13464\nsibu              194.42719 231.99453 214.78277 248.08022 237.58516 214.01639\nsimunjan          113.32011  85.22754 121.59148 105.05707  82.56441  76.43886\nsong              123.24933 181.75585 192.04803 191.53423 183.01211 146.20007\nsri aman          103.99084 105.24930 140.30297 119.00992  98.97563  73.98390\ntatau              45.03439  42.45312  38.85793  57.33673  55.61541  58.08670\ngombak            242.78305 267.19719 243.68593 284.01656 274.60817 259.23648\nkuala langat      179.30750 221.63888 211.88952 235.39743 222.93421 194.00485\nkuala selangor     95.01749 145.03645 133.68114 153.63682 145.26703 117.52552\npetaling          146.80852 147.72494 119.60814 162.02391 155.23143 154.60177\nsabak bernam      202.87935 230.89193 221.49812 255.18712 241.00909 217.71579\nsepang            171.05453 200.89436 186.34686 217.29353 204.89212 183.18743\nbesut              79.22697 119.09064 126.55801 130.77904 114.82639  79.12622\ndungun             74.14519  36.68802  54.74630  56.06437  36.06753  47.41503\nhulu terengganu   106.53368 170.38784 161.87938 178.47560 173.48267 142.15483\nkemaman            41.95830  94.97227  86.97064 102.39374  95.65507  70.07809\nkuala terengganu  149.25881 197.72605 190.83991 216.60849 206.46154 176.66854\nmarang             61.73190 107.01132  92.11887 119.61891 112.63309  90.71741\nsetiu              63.05647  39.58706  70.16658  66.72571  46.88822  39.86399\n                     belaga    betong   bintulu     dalat     julau   kanowit\nklang                                                                        \nbatu pahat                                                                   \nkluang                                                                       \nkota tinggi                                                                  \nkulaijaya                                                                    \nmersing                                                                      \nmuar                                                                         \npontian                                                                      \nsegamat                                                                      \nbaling                                                                       \nbandar baharu                                                                \nkota setar                                                                   \nkuala muda                                                                   \nkubang pasu                                                                  \nkulim                                                                        \nlangkawi                                                                     \npadang terap                                                                 \npendang                                                                      \nsik                                                                          \nyan                                                                          \nbachok                                                                       \ngua musang                                                                   \njeli                                                                         \nkota bharu                                                                   \nkuala krai                                                                   \nmachang                                                                      \npasir mas                                                                    \npasir puteh                                                                  \ntanah merah                                                                  \ntumpat                                                                       \nalor gajah                                                                   \njasin                                                                        \nmelaka tengah                                                                \njelebu                                                                       \njempol                                                                       \nkuala pilah                                                                  \nport dickson                                                                 \nrembau                                                                       \nseremban                                                                     \ntampin                                                                       \nbentong                                                                      \nbera                                                                         \ncameron highlands                                                            \njerantut                                                                     \nlipis                                                                        \nkuantan                                                                      \nmaran                                                                        \npekan                                                                        \nraub                                                                         \nrompin                                                                       \ntemerloh                                                                     \nhilir perak                                                                  \nkampar                                                                       \nkerian                                                                       \nkuala kangsar                                                                \nperak tengah                                                                 \nbarat daya                                                                   \ntimur laut                                                                   \nbeaufort                                                                     \nbeluran                                                                      \nkeningau                                                                     \nkota belud                                                                   \nkota kinabalu                                                                \nkinabatangan                                                                 \nkota marudu                                                                  \nkudat                                                                        \nkunak                                                                        \nlahad datu                                                                   \npapar                                                                        \npenampang                                                                    \nranau                                                                        \nsandakan                                                                     \nsemporna                                                                     \nsipitang                                                                     \ntawau                                                                        \ntenom                                                                        \ntuaran                                                                       \nbau                                                                          \nbelaga                                                                       \nbetong            124.85875                                                  \nbintulu           141.25650  59.79480                                        \ndalat             178.29426  99.58845  47.10890                              \njulau             188.59805 128.03410 110.34688  90.74293                    \nkanowit           225.55190 132.88976 113.21030  85.53042  64.80486          \nkapit             103.78634  67.49350  43.62687  74.50837 109.03726 133.26149\nkuching           180.86421  69.18257  89.11355 115.00990 151.09345 132.12155\nlawas             228.95066 137.83393  98.07194  59.60905  94.39556  68.10434\nlimbang           184.75187  93.54729  47.69112  23.19644  98.58107  79.63140\nlubok antu        130.54794 129.68599 154.56453 171.60077 120.58122 162.93161\nlundu             138.31919  51.88951  48.58525  70.00199  84.67084  97.36743\nmarudi            176.20367 206.45864 237.78071 256.42218 197.90865 241.54244\nmatu              273.63278 181.70443 136.16310  95.80868 147.98493 108.66674\nmiri              160.78775 110.38317 158.68079 186.91353 164.26201 175.12324\nmukah             232.97557 132.55487  96.07113  62.67473 107.95961  67.31654\nsaratok           143.48282  77.81865  29.60799  35.32255  87.43303 100.69912\nsarikei            98.90354  56.20864  67.48869 111.36988 149.26895 165.23748\nserian            233.85937 139.52549  94.68256  68.39113 145.55650 109.51826\nsibu              222.28440 137.76810 182.19211 209.19057 211.76791 197.93743\nsimunjan          277.45615 187.00969 155.58912 116.21315 106.98788  74.33596\nsong              120.18504 104.91673 107.39455 117.63201  75.78600 127.54322\nsri aman          249.30079 169.77094 141.42737 103.91904  67.37101  50.38126\ntatau             208.73297 119.78642  71.87953  47.64420 124.43641 105.24033\ngombak            280.89003 195.52425 233.49849 258.85558 273.08633 250.31795\nkuala langat      218.74223 129.54930 172.94625 194.40402 184.23619 168.12503\nkuala selangor    178.31314  62.53189  89.61419 111.15603 132.58416 110.86711\npetaling          264.09079 150.57922 155.11788 164.26732 209.36475 169.00377\nsabak bernam      232.93947 161.33870 194.91516 213.61060 196.74423 196.76798\nsepang            237.56356 134.78977 169.43639 187.89953 192.25393 166.58467\nbesut             205.48759 100.67530  99.95637  93.77197  89.83018  51.63567\ndungun            255.22316 149.60330 116.49681  85.79500 129.96867  83.12423\nhulu terengganu   112.47365  29.07514  75.54131 112.40204 122.72202 136.00971\nkemaman           179.74380  69.33963  51.52180  59.56629 110.46533  85.98890\nkuala terengganu  142.87062  92.39767 126.94051 154.36063 140.51654 161.27192\nmarang            175.21101  62.91402  57.83852  76.76800 122.91545 103.67250\nsetiu             234.46183 142.20609 103.64408  66.54075  99.01133  71.60202\n                      kapit   kuching     lawas   limbang lubok antu     lundu\nklang                                                                         \nbatu pahat                                                                    \nkluang                                                                        \nkota tinggi                                                                   \nkulaijaya                                                                     \nmersing                                                                       \nmuar                                                                          \npontian                                                                       \nsegamat                                                                       \nbaling                                                                        \nbandar baharu                                                                 \nkota setar                                                                    \nkuala muda                                                                    \nkubang pasu                                                                   \nkulim                                                                         \nlangkawi                                                                      \npadang terap                                                                  \npendang                                                                       \nsik                                                                           \nyan                                                                           \nbachok                                                                        \ngua musang                                                                    \njeli                                                                          \nkota bharu                                                                    \nkuala krai                                                                    \nmachang                                                                       \npasir mas                                                                     \npasir puteh                                                                   \ntanah merah                                                                   \ntumpat                                                                        \nalor gajah                                                                    \njasin                                                                         \nmelaka tengah                                                                 \njelebu                                                                        \njempol                                                                        \nkuala pilah                                                                   \nport dickson                                                                  \nrembau                                                                        \nseremban                                                                      \ntampin                                                                        \nbentong                                                                       \nbera                                                                          \ncameron highlands                                                             \njerantut                                                                      \nlipis                                                                         \nkuantan                                                                       \nmaran                                                                         \npekan                                                                         \nraub                                                                          \nrompin                                                                        \ntemerloh                                                                      \nhilir perak                                                                   \nkampar                                                                        \nkerian                                                                        \nkuala kangsar                                                                 \nperak tengah                                                                  \nbarat daya                                                                    \ntimur laut                                                                    \nbeaufort                                                                      \nbeluran                                                                       \nkeningau                                                                      \nkota belud                                                                    \nkota kinabalu                                                                 \nkinabatangan                                                                  \nkota marudu                                                                   \nkudat                                                                         \nkunak                                                                         \nlahad datu                                                                    \npapar                                                                         \npenampang                                                                     \nranau                                                                         \nsandakan                                                                      \nsemporna                                                                      \nsipitang                                                                      \ntawau                                                                         \ntenom                                                                         \ntuaran                                                                        \nbau                                                                           \nbelaga                                                                        \nbetong                                                                        \nbintulu                                                                       \ndalat                                                                         \njulau                                                                         \nkanowit                                                                       \nkapit                                                                         \nkuching           116.79804                                                   \nlawas             127.40449 130.61188                                         \nlimbang            82.74190 100.71643  61.74718                               \nlubok antu        128.39960 172.66903 199.53982 174.51174                     \nlundu              55.71775  79.17871 101.70580  69.66748  117.64823          \nmarudi            208.44794 247.01833 282.06589 259.51930   85.05776 200.68595\nmatu              170.01427 169.34377  64.47985  92.98926  254.58476 155.11778\nmiri              152.90019 120.79561 206.91833 179.78620  101.45829 119.70878\nmukah             131.27088 117.38378  27.36154  54.60907  205.21223 102.96311\nsaratok            39.93264 110.44847  88.88918  46.78044  144.37245  49.26656\nsarikei            59.86500  92.13029 154.06815 112.71870  145.30626  70.13511\nserian            133.64087 128.00801  71.41557  57.47160  231.44838 123.53782\nsibu              195.90082 102.29645 216.39498 195.80647  188.83821 154.14727\nsimunjan          179.64305 175.96744  62.31780 117.37910  222.38090 147.78175\nsong               79.54345 151.59749 148.99606 126.40623   63.73175  77.33878\nsri aman          156.49637 173.21052  71.40193 107.63820  184.82542 128.26412\ntatau             108.65246 112.36508  51.41337  48.15668  208.99737  95.86180\ngombak            253.46587 145.65803 259.59481 243.65373  259.93941 213.08134\nkuala langat      185.03767 105.38332 201.51931 180.04246  161.46014 140.73609\nkuala selangor    112.88008  44.31573 130.14897  94.58120  149.91607  73.31579\npetaling          192.71041  86.21434 155.24020 146.77930  253.24781 155.39128\nsabak bernam      203.65152 132.39054 208.12722 207.26102  183.95296 156.71643\nsepang            190.76366  87.06807 186.74792 172.11813  193.92795 143.17762\nbesut             122.52124  91.35958  94.38696  79.33251  147.64233  77.89429\ndungun            154.18131 126.54425  45.53382  76.05634  227.26989 124.53206\nhulu terengganu    70.00164  80.28369 149.18015 108.25422  104.39935  50.85288\nkemaman            88.51644  62.97460  84.02732  40.88984  164.76921  58.02356\nkuala terengganu  121.01886 102.53873 171.34419 153.45780  111.07142  86.86461\nmarang             92.35678  38.58998  96.69281  62.39386  165.61650  56.14040\nsetiu             133.44654 132.14120   7.78859  68.15034  204.29076 106.22764\n                     marudi      matu      miri     mukah   saratok   sarikei\nklang                                                                        \nbatu pahat                                                                   \nkluang                                                                       \nkota tinggi                                                                  \nkulaijaya                                                                    \nmersing                                                                      \nmuar                                                                         \npontian                                                                      \nsegamat                                                                      \nbaling                                                                       \nbandar baharu                                                                \nkota setar                                                                   \nkuala muda                                                                   \nkubang pasu                                                                  \nkulim                                                                        \nlangkawi                                                                     \npadang terap                                                                 \npendang                                                                      \nsik                                                                          \nyan                                                                          \nbachok                                                                       \ngua musang                                                                   \njeli                                                                         \nkota bharu                                                                   \nkuala krai                                                                   \nmachang                                                                      \npasir mas                                                                    \npasir puteh                                                                  \ntanah merah                                                                  \ntumpat                                                                       \nalor gajah                                                                   \njasin                                                                        \nmelaka tengah                                                                \njelebu                                                                       \njempol                                                                       \nkuala pilah                                                                  \nport dickson                                                                 \nrembau                                                                       \nseremban                                                                     \ntampin                                                                       \nbentong                                                                      \nbera                                                                         \ncameron highlands                                                            \njerantut                                                                     \nlipis                                                                        \nkuantan                                                                      \nmaran                                                                        \npekan                                                                        \nraub                                                                         \nrompin                                                                       \ntemerloh                                                                     \nhilir perak                                                                  \nkampar                                                                       \nkerian                                                                       \nkuala kangsar                                                                \nperak tengah                                                                 \nbarat daya                                                                   \ntimur laut                                                                   \nbeaufort                                                                     \nbeluran                                                                      \nkeningau                                                                     \nkota belud                                                                   \nkota kinabalu                                                                \nkinabatangan                                                                 \nkota marudu                                                                  \nkudat                                                                        \nkunak                                                                        \nlahad datu                                                                   \npapar                                                                        \npenampang                                                                    \nranau                                                                        \nsandakan                                                                     \nsemporna                                                                     \nsipitang                                                                     \ntawau                                                                        \ntenom                                                                        \ntuaran                                                                       \nbau                                                                          \nbelaga                                                                       \nbetong                                                                       \nbintulu                                                                      \ndalat                                                                        \njulau                                                                        \nkanowit                                                                      \nkapit                                                                        \nkuching                                                                      \nlawas                                                                        \nlimbang                                                                      \nlubok antu                                                                   \nlundu                                                                        \nmarudi                                                                       \nmatu              338.13235                                                  \nmiri              145.25231 260.10527                                        \nmukah             288.44998  58.69339 202.82514                              \nsaratok           228.42475 131.11980 165.48366  93.28557                    \nsarikei           217.52685 198.50512 134.05275 153.64496  84.58884          \nserian            316.32195  56.77424 227.65490  54.40138  99.55713 155.31282\nsibu              235.63620 259.95208  92.04297 204.83271 198.92786 161.07805\nsimunjan          298.39449  86.14013 234.86852  74.00628 142.16302 209.01617\nsong              143.43961 203.70038 130.62338 159.01662  90.18990 113.63636\nsri aman          259.60560 107.78644 212.66688  85.09641 122.18668 194.34910\ntatau             293.29544  76.24682 207.60657  49.21378  75.08450 126.04892\ngombak            304.02008 294.45019 162.43481 244.98349 253.77480 212.28587\nkuala langat      210.09764 244.83212  74.01452 189.64134 184.80774 165.32364\nkuala selangor    224.97111 168.52651 106.22445 115.92501 105.15254 105.78946\npetaling          325.91639 171.13386 191.41925 135.04807 175.63763 169.87581\nsabak bernam      225.77088 262.53936 110.80032 206.01723 203.79918 172.61693\nsepang            250.33391 225.68080 109.90028 172.54408 184.71161 165.74072\nbesut             225.93742 135.20899 135.02075  83.27011  99.09851 140.16453\ndungun            309.76103  52.42277 218.16332  25.54397 116.90227 172.18908\nhulu terengganu   179.95053 198.05617  88.04494 146.21483  86.29275  59.47863\nkemaman           247.77363 119.41657 149.20762  70.16058  65.11886  99.68287\nkuala terengganu  169.75659 230.36508  72.41648 173.61162 132.63869  94.69720\nmarang            246.37229 136.39971 137.39435  84.60816  76.55994  86.72382\nsetiu             286.36801  64.41554 209.62515  28.80167  95.38684 158.06230\n                     serian      sibu  simunjan      song  sri aman     tatau\nklang                                                                        \nbatu pahat                                                                   \nkluang                                                                       \nkota tinggi                                                                  \nkulaijaya                                                                    \nmersing                                                                      \nmuar                                                                         \npontian                                                                      \nsegamat                                                                      \nbaling                                                                       \nbandar baharu                                                                \nkota setar                                                                   \nkuala muda                                                                   \nkubang pasu                                                                  \nkulim                                                                        \nlangkawi                                                                     \npadang terap                                                                 \npendang                                                                      \nsik                                                                          \nyan                                                                          \nbachok                                                                       \ngua musang                                                                   \njeli                                                                         \nkota bharu                                                                   \nkuala krai                                                                   \nmachang                                                                      \npasir mas                                                                    \npasir puteh                                                                  \ntanah merah                                                                  \ntumpat                                                                       \nalor gajah                                                                   \njasin                                                                        \nmelaka tengah                                                                \njelebu                                                                       \njempol                                                                       \nkuala pilah                                                                  \nport dickson                                                                 \nrembau                                                                       \nseremban                                                                     \ntampin                                                                       \nbentong                                                                      \nbera                                                                         \ncameron highlands                                                            \njerantut                                                                     \nlipis                                                                        \nkuantan                                                                      \nmaran                                                                        \npekan                                                                        \nraub                                                                         \nrompin                                                                       \ntemerloh                                                                     \nhilir perak                                                                  \nkampar                                                                       \nkerian                                                                       \nkuala kangsar                                                                \nperak tengah                                                                 \nbarat daya                                                                   \ntimur laut                                                                   \nbeaufort                                                                     \nbeluran                                                                      \nkeningau                                                                     \nkota belud                                                                   \nkota kinabalu                                                                \nkinabatangan                                                                 \nkota marudu                                                                  \nkudat                                                                        \nkunak                                                                        \nlahad datu                                                                   \npapar                                                                        \npenampang                                                                    \nranau                                                                        \nsandakan                                                                     \nsemporna                                                                     \nsipitang                                                                     \ntawau                                                                        \ntenom                                                                        \ntuaran                                                                       \nbau                                                                          \nbelaga                                                                       \nbetong                                                                       \nbintulu                                                                      \ndalat                                                                        \njulau                                                                        \nkanowit                                                                      \nkapit                                                                        \nkuching                                                                      \nlawas                                                                        \nlimbang                                                                      \nlubok antu                                                                   \nlundu                                                                        \nmarudi                                                                       \nmatu                                                                         \nmiri                                                                         \nmukah                                                                        \nsaratok                                                                      \nsarikei                                                                      \nserian                                                                       \nsibu              225.52796                                                  \nsimunjan          120.49944 244.82647                                        \nsong              183.24599 200.30584 178.68893                              \nsri aman          129.38747 239.54264  47.61219 142.62750                    \ntatau              48.50308 210.44028 112.44769 156.67867 119.91160          \ngombak            260.50924  71.75823 286.70381 267.81364 290.93577 249.15549\nkuala langat      214.00956  52.11640 223.59909 178.11548 211.91597 204.07613\nkuala selangor    129.77436 108.16885 169.08142 135.12044 157.62943 122.64962\npetaling          139.80918 133.68754 188.59770 230.37206 205.21316 138.71746\nsabak bernam      240.81217  85.41973 226.77259 190.42595 224.19903 212.19174\nsepang            195.84478  46.01485 210.16773 197.00347 208.94504 185.89930\nbesut             115.24054 151.15957 117.20085 124.47342 100.88281 111.47539\ndungun             57.72713 210.83430  75.89503 182.99153  98.22748  62.45063\nhulu terengganu   159.01912 132.18616 193.95990  88.05027 172.31513 137.18469\nkemaman            78.80249 156.55881 134.26891 128.27070 126.09657  70.27950\nkuala terengganu  201.03126 113.26013 205.42809 108.51506 189.17185 168.11932\nmarang             95.50128 136.79746 147.13446 132.63620 142.42381  78.27499\nsetiu              74.40593 216.71284  59.18234 154.30809  73.20045  53.90452\n                     gombak kuala langat kuala selangor  petaling sabak bernam\nklang                                                                         \nbatu pahat                                                                    \nkluang                                                                        \nkota tinggi                                                                   \nkulaijaya                                                                     \nmersing                                                                       \nmuar                                                                          \npontian                                                                       \nsegamat                                                                       \nbaling                                                                        \nbandar baharu                                                                 \nkota setar                                                                    \nkuala muda                                                                    \nkubang pasu                                                                   \nkulim                                                                         \nlangkawi                                                                      \npadang terap                                                                  \npendang                                                                       \nsik                                                                           \nyan                                                                           \nbachok                                                                        \ngua musang                                                                    \njeli                                                                          \nkota bharu                                                                    \nkuala krai                                                                    \nmachang                                                                       \npasir mas                                                                     \npasir puteh                                                                   \ntanah merah                                                                   \ntumpat                                                                        \nalor gajah                                                                    \njasin                                                                         \nmelaka tengah                                                                 \njelebu                                                                        \njempol                                                                        \nkuala pilah                                                                   \nport dickson                                                                  \nrembau                                                                        \nseremban                                                                      \ntampin                                                                        \nbentong                                                                       \nbera                                                                          \ncameron highlands                                                             \njerantut                                                                      \nlipis                                                                         \nkuantan                                                                       \nmaran                                                                         \npekan                                                                         \nraub                                                                          \nrompin                                                                        \ntemerloh                                                                      \nhilir perak                                                                   \nkampar                                                                        \nkerian                                                                        \nkuala kangsar                                                                 \nperak tengah                                                                  \nbarat daya                                                                    \ntimur laut                                                                    \nbeaufort                                                                      \nbeluran                                                                       \nkeningau                                                                      \nkota belud                                                                    \nkota kinabalu                                                                 \nkinabatangan                                                                  \nkota marudu                                                                   \nkudat                                                                         \nkunak                                                                         \nlahad datu                                                                    \npapar                                                                         \npenampang                                                                     \nranau                                                                         \nsandakan                                                                      \nsemporna                                                                      \nsipitang                                                                      \ntawau                                                                         \ntenom                                                                         \ntuaran                                                                        \nbau                                                                           \nbelaga                                                                        \nbetong                                                                        \nbintulu                                                                       \ndalat                                                                         \njulau                                                                         \nkanowit                                                                       \nkapit                                                                         \nkuching                                                                       \nlawas                                                                         \nlimbang                                                                       \nlubok antu                                                                    \nlundu                                                                         \nmarudi                                                                        \nmatu                                                                          \nmiri                                                                          \nmukah                                                                         \nsaratok                                                                       \nsarikei                                                                       \nserian                                                                        \nsibu                                                                          \nsimunjan                                                                      \nsong                                                                          \nsri aman                                                                      \ntatau                                                                         \ngombak                                                                        \nkuala langat      114.31224                                                   \nkuala selangor    162.33952     89.75157                                      \npetaling          136.24071    146.37487      111.64824                       \nsabak bernam      123.06799    105.81050      145.35920 164.34091             \nsepang             86.74377     49.21159       88.50720 103.51138     96.67886\nbesut             205.03826    120.62568       62.95757 137.16621    165.28191\ndungun            244.97468    197.39039      127.48481 127.46729    213.26403\nhulu terengganu   195.50703    120.85616       69.52608 165.73391    151.16991\nkemaman           204.44984    142.22769       55.23244 117.44745    176.86447\nkuala terengganu  175.12465    115.83862      108.70345 175.98756     92.98180\nmarang            182.82977    130.31839       49.12650 102.57419    155.77287\nsetiu             258.50947    202.75424      133.15936 153.28301    206.78123\n                     sepang     besut    dungun hulu terengganu   kemaman\nklang                                                                    \nbatu pahat                                                               \nkluang                                                                   \nkota tinggi                                                              \nkulaijaya                                                                \nmersing                                                                  \nmuar                                                                     \npontian                                                                  \nsegamat                                                                  \nbaling                                                                   \nbandar baharu                                                            \nkota setar                                                               \nkuala muda                                                               \nkubang pasu                                                              \nkulim                                                                    \nlangkawi                                                                 \npadang terap                                                             \npendang                                                                  \nsik                                                                      \nyan                                                                      \nbachok                                                                   \ngua musang                                                               \njeli                                                                     \nkota bharu                                                               \nkuala krai                                                               \nmachang                                                                  \npasir mas                                                                \npasir puteh                                                              \ntanah merah                                                              \ntumpat                                                                   \nalor gajah                                                               \njasin                                                                    \nmelaka tengah                                                            \njelebu                                                                   \njempol                                                                   \nkuala pilah                                                              \nport dickson                                                             \nrembau                                                                   \nseremban                                                                 \ntampin                                                                   \nbentong                                                                  \nbera                                                                     \ncameron highlands                                                        \njerantut                                                                 \nlipis                                                                    \nkuantan                                                                  \nmaran                                                                    \npekan                                                                    \nraub                                                                     \nrompin                                                                   \ntemerloh                                                                 \nhilir perak                                                              \nkampar                                                                   \nkerian                                                                   \nkuala kangsar                                                            \nperak tengah                                                             \nbarat daya                                                               \ntimur laut                                                               \nbeaufort                                                                 \nbeluran                                                                  \nkeningau                                                                 \nkota belud                                                               \nkota kinabalu                                                            \nkinabatangan                                                             \nkota marudu                                                              \nkudat                                                                    \nkunak                                                                    \nlahad datu                                                               \npapar                                                                    \npenampang                                                                \nranau                                                                    \nsandakan                                                                 \nsemporna                                                                 \nsipitang                                                                 \ntawau                                                                    \ntenom                                                                    \ntuaran                                                                   \nbau                                                                      \nbelaga                                                                   \nbetong                                                                   \nbintulu                                                                  \ndalat                                                                    \njulau                                                                    \nkanowit                                                                  \nkapit                                                                    \nkuching                                                                  \nlawas                                                                    \nlimbang                                                                  \nlubok antu                                                               \nlundu                                                                    \nmarudi                                                                   \nmatu                                                                     \nmiri                                                                     \nmukah                                                                    \nsaratok                                                                  \nsarikei                                                                  \nserian                                                                   \nsibu                                                                     \nsimunjan                                                                 \nsong                                                                     \nsri aman                                                                 \ntatau                                                                    \ngombak                                                                   \nkuala langat                                                             \nkuala selangor                                                           \npetaling                                                                 \nsabak bernam                                                             \nsepang                                                                   \nbesut             120.90029                                              \ndungun            175.52268  97.18774                                    \nhulu terengganu   133.85488 102.89911 165.09584                          \nkemaman           133.23412  60.25485  86.11067        85.11330          \nkuala terengganu  125.03449 132.28920 190.20046        74.01743 129.92238\nmarang            116.87380  72.36139  98.21829        77.70957  27.87853\nsetiu             186.49125  97.59022  43.21109       153.59977  88.25915\n                  kuala terengganu    marang\nklang                                       \nbatu pahat                                  \nkluang                                      \nkota tinggi                                 \nkulaijaya                                   \nmersing                                     \nmuar                                        \npontian                                     \nsegamat                                     \nbaling                                      \nbandar baharu                               \nkota setar                                  \nkuala muda                                  \nkubang pasu                                 \nkulim                                       \nlangkawi                                    \npadang terap                                \npendang                                     \nsik                                         \nyan                                         \nbachok                                      \ngua musang                                  \njeli                                        \nkota bharu                                  \nkuala krai                                  \nmachang                                     \npasir mas                                   \npasir puteh                                 \ntanah merah                                 \ntumpat                                      \nalor gajah                                  \njasin                                       \nmelaka tengah                               \njelebu                                      \njempol                                      \nkuala pilah                                 \nport dickson                                \nrembau                                      \nseremban                                    \ntampin                                      \nbentong                                     \nbera                                        \ncameron highlands                           \njerantut                                    \nlipis                                       \nkuantan                                     \nmaran                                       \npekan                                       \nraub                                        \nrompin                                      \ntemerloh                                    \nhilir perak                                 \nkampar                                      \nkerian                                      \nkuala kangsar                               \nperak tengah                                \nbarat daya                                  \ntimur laut                                  \nbeaufort                                    \nbeluran                                     \nkeningau                                    \nkota belud                                  \nkota kinabalu                               \nkinabatangan                                \nkota marudu                                 \nkudat                                       \nkunak                                       \nlahad datu                                  \npapar                                       \npenampang                                   \nranau                                       \nsandakan                                    \nsemporna                                    \nsipitang                                    \ntawau                                       \ntenom                                       \ntuaran                                      \nbau                                         \nbelaga                                      \nbetong                                      \nbintulu                                     \ndalat                                       \njulau                                       \nkanowit                                     \nkapit                                       \nkuching                                     \nlawas                                       \nlimbang                                     \nlubok antu                                  \nlundu                                       \nmarudi                                      \nmatu                                        \nmiri                                        \nmukah                                       \nsaratok                                     \nsarikei                                     \nserian                                      \nsibu                                        \nsimunjan                                    \nsong                                        \nsri aman                                    \ntatau                                       \ngombak                                      \nkuala langat                                \nkuala selangor                              \npetaling                                    \nsabak bernam                                \nsepang                                      \nbesut                                       \ndungun                                      \nhulu terengganu                             \nkemaman                                     \nkuala terengganu                            \nmarang                   112.43940          \nsetiu                    173.12838  99.43623\n\n\nNext, I used hclust(), also from the stats package to derive the dendrogram. rect.hclust() was also used to highlight the clusters.\n\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 4, \n            border = 2:5)\n\n\n\n\n\n\n\n\nI also used the sample code below to derive an interactive heatmap of the clusters.\n\nrate_crime_data.std &lt;- rate_crime_data.std %&gt;%  drop_na()\nheatmaply(rate_crime_data.std,\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Purples,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Malaysia by Crime Type\",\n          xlab = \"Crime Type\",\n          ylab = \"Districts\"\n          )\n\n\n\n\n\n\n10.4.1 Shiny Board\n\nThe user can input the year, the method used in computing the proximity matrix, as well as the hierarchical clusters, and also have the option to choose how the clusters differe with different number of “optimal clusters”.\nThe “Generate Dendrogram” button will generate the dendrogram.\n\nThe “Generate Heatmap” button will generate an Interactive Heatmap."
  }
]