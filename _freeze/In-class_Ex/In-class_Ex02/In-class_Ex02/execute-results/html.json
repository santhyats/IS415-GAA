{
  "hash": "8c9d64a44c50795839fa2d3cc0d898cb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 2\"\nauthor: \"Santhya Selvan\"\ndate: \"August 26, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n## Getting Started\n\nFirst and foremost, we will load the needed packages into our Rstudio using paccman's `p_load` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse)\n```\n:::\n\n\nWe can now load our data into our R environment as new data frames.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz14_shp <- st_read(dsn=\"data\", layer=\"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\santhyats\\IS415-GAA\\In-class_Ex\\In-class_Ex02\\data' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\nchecking to make sure that th\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(mpsz14_shp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"data.frame\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz14_shp, \"data/MP14_SUBZONE_WEB_PL.kml\", delete_dsn=TRUE)\n```\n:::\n\n\nchanging the crs of the data files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_kml = st_read (\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\") %>% \n  st_transform(crs=3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\santhyats\\IS415-GAA\\In-class_Ex\\In-class_Ex02\\data\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 2 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 3 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 4 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 5 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 2 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 3 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 4 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 5 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 6 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 7 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 2 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 3 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 2 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 3 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 4 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 5 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 6 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 7 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 8 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 2 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 3 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 4 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 5 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 6 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 7 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 2 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 3 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 2 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 2 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 3 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 0 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 1 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Message 1: Sub-geometry 2 has coordinate dimension 2, but container has 3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp = st_read(dsn = \"data/\", layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\santhyats\\IS415-GAA\\In-class_Ex\\In-class_Ex02\\data' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nchecking the crs of the data files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz19_shp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz19_kml)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata23 <- read_csv(\"data/respopagesextod2023.csv\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata_2023 <- read_csv(\"data/respopagesextod2023.csv\") %>% \n  group_by(PA, SZ, AG) %>% \n  summarise('POP'= sum(`Pop`)) %>% \n  ungroup() %>% \n  pivot_wider(names_from=AG, \n              values_from=POP)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata_2023 <- popdata_2023 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_pop2020 <- left_join(popdata_2023, mpsz19_shp,\n                          by = c(\"SZ\" = \"SUBZONE_N\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}