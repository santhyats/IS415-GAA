{
  "hash": "98d1fd3c20fe1ff6f5352957a2def024",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 12\"\nauthor: \"Santhya Selvan\"\ndate: \"11 November 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n## 12.0 Loading in the packages \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, tmap, rsample, yardstick, tidyverse, knitr, kableExtra, spatialRF)\n```\n:::\n\n\n## 12.1 Getting Started \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/rds/mdata.rds\")\n```\n:::\n\n\n12.1.1 Preparing Data\n\nFirst, we will take a sample of 1500 data points from our original data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nHDB_sample <- mdata %>% \n  sample_n(1500)\n```\n:::\n\n\ncheck for overlapping points\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverlapping_points <- HDB_sample %>% \n  mutate(overlap = lengths(st_equals(., .)) > 1)\nsummary(overlapping_points$overlap)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Mode   FALSE    TRUE \nlogical    1047     453 \n```\n\n\n:::\n:::\n\n\nWe will then use the st_jitter() function to reduce the overlapping of the points.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHDB_sample <- HDB_sample %>% \n  st_jitter(amount = 5)\n```\n:::\n\n\nPerform train test split\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(234)\n\nresale_split <- initial_split(HDB_sample,\n                              prop = 0.67/10,)\n\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n\nwrite_rds(train_data, \"data/rds/train_data.rds\")\nwrite_rds(test_data, \"data/rds/test_data.rds\")\n```\n:::\n\n\nChecking for multicollinearity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata_nogeo <- mdata %>% \n  st_drop_geometry()\n\nggstatsplot::ggcorrmat(mdata_nogeo[, 2:17])\n```\n\n::: {.cell-output-display}\n![](In-class_Ex12_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nolsrr::ols_regress(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                              Model Summary                                \n--------------------------------------------------------------------------\nR                           0.870       RMSE                    52475.337 \nR-Squared                   0.757       MSE                3239601145.732 \nAdj. R-Squared              0.717       Coef. Var                  13.784 \nPred R-Squared              0.659       AIC                      2489.407 \nMAE                     38998.031       SBC                      2531.090 \n--------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                        Sum of                                                  \n                       Squares        DF        Mean Square      F         Sig. \n--------------------------------------------------------------------------------\nRegression    857197466443.816        14    61228390460.273      18.9    0.0000 \nResidual      275366097387.224        85     3239601145.732                     \nTotal             1.132564e+12        99                                        \n--------------------------------------------------------------------------------\n\n                                                Parameter Estimates                                                 \n-------------------------------------------------------------------------------------------------------------------\n                   model           Beta    Std. Error    Std. Beta      t        Sig           lower         upper \n-------------------------------------------------------------------------------------------------------------------\n             (Intercept)     178398.723    102690.646                  1.737    0.086     -25777.793    382575.239 \n          floor_area_sqm       2768.499       837.742        0.204     3.305    0.001       1102.843      4434.155 \n            storey_order      13889.364      3777.770        0.214     3.677    0.000       6378.146     21400.583 \n    remaining_lease_mths        285.257        45.155        0.394     6.317    0.000        195.477       375.036 \n                PROX_CBD     -15389.844      1844.524       -0.594    -8.344    0.000     -19057.252    -11722.436 \n        PROX_ELDERLYCARE     -19916.480      9064.946       -0.138    -2.197    0.031     -37940.022     -1892.938 \n             PROX_HAWKER     -19647.309     12363.057       -0.091    -1.589    0.116     -44228.378      4933.759 \n                PROX_MRT     -32446.674     21192.725       -0.099    -1.531    0.129     -74583.489      9690.140 \n               PROX_PARK       5109.320     14384.073        0.024     0.355    0.723     -23490.072     33708.711 \n               PROX_MALL     -16207.051     23447.175       -0.046    -0.691    0.491     -62826.316     30412.214 \n        PROX_SUPERMARKET    -136220.920     50013.048       -0.161    -2.724    0.008    -235660.259    -36781.582 \nWITHIN_350M_KINDERGARTEN        352.104      7134.358        0.003     0.049    0.961     -13832.911     14537.119 \n   WITHIN_350M_CHILDCARE      -9442.160      3870.903       -0.169    -2.439    0.017     -17138.553     -1745.768 \n         WITHIN_350M_BUS       1704.606      2294.796        0.045     0.743    0.460      -2858.063      6267.274 \n       WITHIN_1KM_PRISCH      -6989.618      4624.279       -0.103    -1.512    0.134     -16183.924      2204.688 \n-------------------------------------------------------------------------------------------------------------------\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_train_ad <- bw.gwr(resale_price ~ floor_area_sqm + \n                            storey_order + remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data = train_data,\n                          approach = 'CV',\n                          kernel = 'gaussian',\n                          adaptive = TRUE,\n                          longlat = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth: 69 CV score: 345003108502 \nAdaptive bandwidth: 51 CV score: 339293433196 \nAdaptive bandwidth: 38 CV score: 331652737746 \nAdaptive bandwidth: 32 CV score: 329670850941 \nAdaptive bandwidth: 26 CV score: 326082675199 \nAdaptive bandwidth: 24 CV score: 3.30843e+11 \nAdaptive bandwidth: 28 CV score: 3.26346e+11 \nAdaptive bandwidth: 25 CV score: 331353120596 \nAdaptive bandwidth: 27 CV score: 325960781495 \nAdaptive bandwidth: 27 CV score: 325960781495 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred <- gwr.predict(formula = resale_price ~ floor_area_sqm + \n                            storey_order + remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                        data = test_data, \n                        bw = 20,\n                        kernel = 'gaussian',\n                        adaptive = TRUE,\n                        longlat = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in gwr.predict(formula = resale_price ~ floor_area_sqm + storey_order +\n: Data for prediction is not given and the same data as fitting data will be\nused!\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred_df <- as.data.frame(\n  gwr_pred$SDF$prediction) %>% \n  rename(gwr_pred = \"gwr_pred$SDF$prediction\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(HDB_sample)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_nogeom <- train_data %>% \n  st_drop_geometry()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(8932)\n\nrf <- ranger(resale_price ~ floor_area_sqm + \n                            storey_order + remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n             data = train_data_nogeom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_nogeom <- cbind(\n    test_data, coords_test) %>% st_drop_geometry()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred <- predict(\n    rf,\n    data = test_data_nogeom\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred_df <- as.data.frame(rf_pred$predictions) %>% \n  rename(rf_pred = \"rf_pred$predictions\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2342)\n\ngrf_ad <- grf(\n    formula = resale_price ~ floor_area_sqm +\n        storey_order + remaining_lease_mths +\n        PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n        PROX_MRT + PROX_PARK + PROX_MALL + \n        PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n        WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n        WITHIN_1KM_PRISCH,\n    dframe = train_data_nogeom,\n    bw=20,\n    kernel = 'adaptive',\n    coords = coords_train)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nNumber of Observations: 100\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNumber of Independent Variables: 14\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nKernel: Adaptive\nNeightbours: 20\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n--------------- Global ML Model Summary ---------------\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom, num.trees = 500, mtry = 4, importance = \"impurity\",      num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      100 \nNumber of independent variables:  14 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       4655071162 \nR squared (OOB):                  0.5930895 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nImportance:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          floor_area_sqm             storey_order     remaining_lease_mths \n             40652608898              81026177640             187278675453 \n                PROX_CBD         PROX_ELDERLYCARE              PROX_HAWKER \n            316442627229             107962273447              53961006835 \n                PROX_MRT                PROX_PARK                PROX_MALL \n             41776621260              43769444150              34108349923 \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n             86594092202              11096082213              11053750870 \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n             22754843605              49531427987 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nMean Square Error (Not OOB): 866239673.312\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared (Not OOB) %: 92.352\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC (Not OOB): 2087.967\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc (Not OOB): 2093.682\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n--------------- Local Model Summary ---------------\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nResiduals OOB:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-115869  -28896   -2765    3749   28399  183299 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nResiduals Predicted (Not OOB):\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-19560.2  -3650.2   -122.8   -103.5   3025.4  35195.4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nLocal Variable Importance:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                               Min          Max        Mean         StD\nfloor_area_sqm           396022969  42390559421  6608246007  8290296008\nstorey_order             127578869 134762787372  8984041403 24348831332\nremaining_lease_mths     227584479 166815129636 23288287749 37940269460\nPROX_CBD                 266835035  92426553829 10969332237 16868380993\nPROX_ELDERLYCARE         210833916  73877755292  8466726982 14370468929\nPROX_HAWKER              202030149  98137851151  8250851134 16422476448\nPROX_MRT                 148685748  22499330730  4492436027  5070363459\nPROX_PARK                155307928  80052877390  8228455794 11442676213\nPROX_MALL                198018391  30211885228  6651069501  7675812268\nPROX_SUPERMARKET         185094175 115325321842 13401927564 25137103904\nWITHIN_350M_KINDERGARTEN  32433807  20777001330  2019420700  3818348651\nWITHIN_350M_CHILDCARE    241773817  82704987064  6017964250 13135041484\nWITHIN_350M_BUS           79830187  27200068272  4086126471  5134769064\nWITHIN_1KM_PRISCH         65427424  15054837171  2786289847  2983462974\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nMean squared error (OOB): 3295323412.833\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared (OOB) %: 70.904\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC (OOB): 2221.577\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc (OOB): 2227.291\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMean squared error Predicted (Not OOB): 61786843.293\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared Predicted (Not OOB) %: 99.454\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC Predicted (Not OOB): 1823.92\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc Predicted (Not OOB): 1829.634\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nCalculation time (in seconds): 1.6559\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pred <- predict.grf(\n    grf_ad,\n    test_data_nogeom,\n    x.var.name = 'X',\n    y.var.name = 'Y',\n    local.w = 1,\n    global.w = 0\n)\n\ngrf_pred_df <- as.data.frame(grf_pred)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_pred <- test_data %>% \n    select(resale_price) %>% \n    cbind(gwr_pred_df) %>% \n    cbind(rf_pred_df) %>% \n    cbind(grf_pred_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# transpose data\ntest_longer <- test_data_pred %>% \n    st_drop_geometry() %>% \n    pivot_longer(\n        cols = ends_with('pred'),\n        names_to = 'model',\n        values_to = 'predicted'\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# renaming\nmodel_labels <- c(\n    gwr_pred = \"gwr\",\n    rf_pred = \"Random Forest\",\n    grf_pred = \"gwRF\")\n\ntest_longer <- test_longer %>% \n    mutate(\n        model = recode(model, !!!model_labels))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrmse_results <- test_longer %>% \n    group_by(model) %>% \n    rmse(truth = resale_price, estimate = predicted) %>% \n    rename(rmse = .estimate) %>% \n    select(model, rmse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rmse_results,\n    aes(x=reorder(model, rmse),\n        y=rmse,\n        fill='skyblue'))+\n    geom_bar(\n        stat='identity',\n        fill='skyblue',\n        width=.7) +\n    labs(title = \"RMSE Comparison of Mod\", y=\"RMSE\", x=\"Model\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex12_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# scatter\ntest_longer <- test_longer %>% left_join(rmse_results, by = 'model')\nggplot(data=test_longer,\n    aes(x=predicted, y=resale_price)) +\n    facet_wrap(~model) +\n    geom_point() +\n    geom_text(data = test_longer, x=Inf, y=Inf, label=paste(\"RMSE:\", round(rmse, 2)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# variable importance\nvar_imp <- data.frame(\n    Variable=names(grf_ad$Global.Model$variable.importance),\n    Importance= grf_ad$Global.Model$variable.importance\n)\n\nggplot(var_imp, aes(x=reorder(Variable, Importance), y=Importance)) +\n    geom_bar(stat = 'identity', fill='skyblue') +\n    coord_flip() +  # for readability\n    labs(\n        title = \"Variable Importance from Ranger Model\",\n        x = \"Variables\", y = \"Importance\"\n    ) +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex12_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-class_Ex12_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}