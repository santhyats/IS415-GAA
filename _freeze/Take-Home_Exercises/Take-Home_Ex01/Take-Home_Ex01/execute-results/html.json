{
  "hash": "0a0ce0a95abaa0dccb6746438265918a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar\"\nauthor: \"Santhya Selvan\"\ndate: \"September 4, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n## 1.0 Overview\n\nMyanmar has been going through civil wars and internal conflicts for decades now. These conflicts have mainly been due to ethnic tensions and general unhappiness in the governing party. Conflicts range from battles, riots, violence against civilians, strategic developments and more. In this exercise, I will be analysing the distribution of conflicts in Myanmar.\n\nTo do this, I will mainly be performing quarterly KDE analysis on 4 main types of conflicts: Battles, Explosions, Violence against Civillians and Strategic Developments through the years of 2021-2024. I will also be performing the second order spatial point pattern process as well as the spatio temporal point process analysis for these segments. Let's get started.\n\n#### 1.1 Loading R packages\n\nThese are the packages that I will be using in this exercise.\n\n**sf**: Used in spatial data wrangling\n\n**tidyverse**: Used in data wrangling for non-spatial data\n\n**raster**: For reading, writing and manipulating raster data\n\n**tmap**: For functions relating to mapping point patterns\n\n**spatstat**: Provides functions for spatial point process analysis\n\n**sparr**: Provides functions for spatio-temporal point process analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, tidyverse, spatstat, sparr, tmap)\n```\n:::\n\n\n## 2.0 Data Preparation\n\nIn this section, I will be retrieving the required data and performing the necessary data wrangling methods in order to transform the data into a form that is best suitable for our analytic needs for this exercise. The datasets used in this exercise are:\n\n-   `Myanmar_All_2021-24.csv`: A csv file downloaded from ACLED, which contains all the details of the internal conflicts in Myanmar from 2021-2024. Note that the file name has been renamed for ease of use.\n\n-   `MBoundary`: A shapefile downloaded from Myanmar Information Management Unit, MIMU. This shapefile maps out the boundary of Myanmar. I have also renamed this file for ease of use.\n\n#### 2.1 Importing the Data\n\nFirstly, I will be importing the base map of Myanmar in shapefile format. I will also transform the crs to that of Myanmar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboundary <- st_read(dsn=\"data/raw\",\n                    layer = \"MBoundary\") %>% \n  st_transform(crs=32646)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MBoundary' from data source \n  `C:\\santhyats\\IS415-GAA\\Take-Home_Exercises\\Take-Home_Ex01\\data\\raw' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(boundary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32646 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 46N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 46N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",93,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 90°E and 96°E, northern hemisphere between equator and 84°N, onshore and offshore. Bangladesh. Bhutan. China. Indonesia. Mongolia. Myanmar (Burma). Russian Federation.\"],\n        BBOX[0,90,84,96]],\n    ID[\"EPSG\",32646]]\n```\n\n\n:::\n:::\n\n\nNext, I will also be Importing the regional boundaries of Myanmar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregions_sf <- st_read(dsn=\"data/raw\",\n                      layer=\"regions\") %>% \n  st_transform(crs = 32646)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `regions' from data source \n  `C:\\santhyats\\IS415-GAA\\Take-Home_Exercises\\Take-Home_Ex01\\data\\raw' \n  using driver `ESRI Shapefile'\nSimple feature collection with 18 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nLastly, I will be importing and reading the csv file containing the data about the conflicts into a dataframe. I will once again ensure that the crs of the data is transformed to that of Myanmar's.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_sf <- read_csv('data/raw/Myanmar_All_2021-24.csv')%>% \n  st_as_sf(coords = c('longitude', 'latitude'),\n           crs=4326) %>% \n  st_transform(crs=32646)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 51553 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): event_id_cnty, event_date, disorder_type, event_type, sub_event_ty...\ndbl (11): year, time_precision, inter1, inter2, interaction, iso, latitude, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(all_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32646 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 46N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 46N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",93,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 90°E and 96°E, northern hemisphere between equator and 84°N, onshore and offshore. Bangladesh. Bhutan. China. Indonesia. Mongolia. Myanmar (Burma). Russian Federation.\"],\n        BBOX[0,90,84,96]],\n    ID[\"EPSG\",32646]]\n```\n\n\n:::\n:::\n\n\n#### 2.2 Preparing the Data\n\nBefore we can start deriving our KDE layers, we will make sure our data is in a suitable form and is processed in a way that we need it in. I will start off by converting the date column in the aspatial data to a format that can be handled during computations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_sf$event_date <- as.Date(all_sf$event_date, format = \"%d %B %Y\")\n```\n:::\n\n\nBefore we can filter out the data that we need, I will be visualising the data according to the event types to observe for any patterns or similarity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(boundary) + tm_polygons() + tm_shape(regions_sf) + tm_polygons() + tm_shape(all_sf) + tm_dots() + tm_facets(by='event_type', free.coords = FALSE, drop.units= TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nFrom the patterns observed above, we see that Battles, Strategic Developments, Explosions and Violence against civilians all have similar distribution of conflicts across the space and that Riots and Protests do not have that many spatial points even over the aggregated 4 year dataset. As such, I will be focusing my analysis on these four main categories of conflicts: **Battles, Strategic Developments, Violence against Civilians and Explosions.**\n\nI will filter out the data according to these event types and save them in separate sf objects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbattles_sf <- all_sf %>%  filter(event_type == 'Battles')\nbattles_sf\n\nexp_sf <- all_sf %>%  filter(event_type == \"Explosions/Remote violence\")\n\ncivViolence_sf <- all_sf %>%  filter(event_type == \"Violence against civilians\")\n\nstrat_dev_sf <- all_sf %>%  filter(event_type == 'Strategic developments')\n```\n:::\n\n\nFinally, I will further split the datasets into quarterly periods. For ease of use, I will write these sf objects into rds files and save them in a compiled folder so I won't mix them up with the unprocessed data.\n\n::: panel-tabset\n## Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq1_21_battles_sf <- battles_sf %>% \n  filter(year == '2021' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Battles/2021/q1.rds\")\n\nq2_21_battles_sf <-battles_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Battles/2021/q2.rds\")\n\nq3_21_battles_sf <-battles_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Battles/2021/q3.rds\")\n\nq4_21_battles_sf <-battles_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Battles/2021/q4.rds\")\n\n#2022\n\nq1_22_battles_sf <- battles_sf %>% \n  filter(year == '2022' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Battles/2022/q1.rds\")\n\nq2_22_battles_sf <-battles_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Battles/2022/q2.rds\")\n\nq3_22_battles_sf <-battles_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Battles/2022/q3.rds\")\n\nq4_22_battles_sf <-battles_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Battles/2022/q4.rds\")\n\n#2023\n\nq1_23_battles_sf <- battles_sf %>% \n  filter(year == '2023' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Battles/2023/q1.rds\")\n\nq2_23_battles_sf <-battles_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Battles/2023/q2.rds\")\n\nq3_23_battles_sf <-battles_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Battles/2023/q3.rds\")\n\nq4_23_battles_sf <-battles_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Battles/2023/q4.rds\")\n\n#2024\n\nq1_24_battles_sf <- battles_sf %>% \n  filter(year == '2024' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Battles/2024/q1.rds\")\n\nq2_24_battles_sf <-battles_sf %>% \n  filter(year == '2024') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Battles/2024/q2.rds\")\n```\n:::\n\n\n## Explosions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq1_21_exp_sf <- exp_sf %>% \n  filter(year == '2021' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Explosions/2021/q1.rds\")\n\nq2_21_exp_sf <-exp_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Explosions/2021/q2.rds\")\n\nq3_21_exp_sf <-exp_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Explosions/2021/q3.rds\")\n\nq4_21_exp_sf <-exp_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Explosions/2021/q4.rds\")\n\n#2022\n\nq1_22_exp_sf <- exp_sf %>% \n  filter(year == '2022' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Explosions/2022/q1.rds\")\n\nq2_22_exp_sf <-exp_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Explosions/2022/q2.rds\")\n\nq3_22_exp_sf <-exp_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Explosions/2022/q3.rds\")\n\nq4_22_exp_sf <-exp_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Explosions/2022/q4.rds\")\n\n#2023\n\nq1_23_exp_sf <-exp_sf %>% \n  filter(year == '2023' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Explosions/2023/q1.rds\")\n\nq2_23_exp_sf <-exp_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Explosions/2023/q2.rds\")\n\nq3_23_exp_sf <-exp_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Explosions/2023/q3.rds\")\n\nq4_23_exp_sf <-battles_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Explosions/2023/q4.rds\")\n\n#2024\n\nq1_24_exp_sf <- exp_sf %>% \n  filter(year == '2024' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Explosions/2024/q1.rds\")\n\nq2_24_exp_sf <-exp_sf %>% \n  filter(year == '2024') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Explosions/2024/q2.rds\")\n```\n:::\n\n\n## Violence against civillians\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq1_21_civViolence_sf <- civViolence_sf %>% \n  filter(year == '2021' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Violence/2021/q1.rds\")\n\nq2_21_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Violence/2021/q2.rds\")\n\nq3_21_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Violence/2021/q3.rds\")\n\nq4_21_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Violence/2021/q4.rds\")\n\n#2022\n\nq1_22_civViolence_sf <- civViolence_sf %>% \n  filter(year == '2022' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Violence/2022/q1.rds\")\n\nq2_22_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Violence/2022/q2.rds\")\n\nq3_22_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Violence/2022/q3.rds\")\n\nq4_22_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Violence/2022/q4.rds\")\n\n#2023\n\nq1_23_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2023' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Violence/2023/q1.rds\")\n\nq2_23_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Violence/2023/q2.rds\")\n\nq3_23_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Violence/2023/q3.rds\")\n\nq4_23_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Violence/2023/q4.rds\")\n\n#2024\n\nq1_24_civViolence_sf <- civViolence_sf %>% \n  filter(year == '2024' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Violence/2024/q1.rds\")\n\nq2_24_civViolence_sf <-civViolence_sf %>% \n  filter(year == '2024') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Violence/2024/q2.rds\")\n```\n:::\n\n\n## Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq1_21_strat_dev_sf <- strat_dev_sf %>% \n  filter(year == '2021' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Strat_Dev/2021/q1.rds\")\n\nq2_21_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Strat_Dev/2021/q2.rds\")\n\nq3_21_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Strat_Dev/2021/q3.rds\")\n\nq4_21_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2021') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Strat_Dev/2021/q4.rds\")\n\n#2022\n\nq1_22_strat_dev_sf <- strat_dev_sf %>% \n  filter(year == '2022' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Strat_Dev/2022/q1.rds\")\n\nq2_22_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Strat_Dev/2022/q2.rds\")\n\nq3_22_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Strat_Dev/2022/q3.rds\")\n\nq4_22_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2022') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Strat_Dev/2022/q4.rds\")\n\n#2023\n\nq1_23_strat_dev_sf <-civViolence_sf %>% \n  filter(year == '2023' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Strat_Dev/2023/q1.rds\")\n\nq2_23_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Strat_Dev/2023/q2.rds\")\n\nq3_23_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 3)%>%  \n  write_rds(\"data/rds/Strat_Dev/2023/q3.rds\")\n\nq4_23_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2023') %>% \n  filter(quarter(event_date) == 4)%>%  \n  write_rds(\"data/rds/Strat_Dev/2023/q4.rds\")\n\n#2024\n\nq1_24_strat_dev_sf <- strat_dev_sf %>% \n  filter(year == '2024' ) %>% \n  filter(quarter(event_date) == 1) %>%  \n  write_rds(\"data/rds/Strat_Dev/2024/q1.rds\")\n\nq2_24_strat_dev_sf <-strat_dev_sf %>% \n  filter(year == '2024') %>% \n  filter(quarter(event_date) == 2)%>%  \n  write_rds(\"data/rds/Strat_Dev/2024/q2.rds\")\n```\n:::\n\n:::\n\n\n::: {.cell}\n\n:::\n\n\n#### 2.2 Data Wrangling\n\n##### 2.2.1 Converting the sf objects to ppp objects\n\nTo derive our KDE layers, we would need the sf objects to be converted to ppp objects. We will do this using the *as.ppp()* function.\n\n::: panel-tabset\n## Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbattlesQ121_ppp <- as.ppp(st_coordinates(q1_21_battles_sf), st_bbox(q1_21_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ221_ppp <- as.ppp(st_coordinates(q2_21_battles_sf), st_bbox(q2_21_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ321_ppp<- as.ppp(st_coordinates(q3_21_battles_sf), st_bbox(q3_21_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ421_ppp<-as.ppp(st_coordinates(q4_21_battles_sf), st_bbox(q4_21_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2022\n\nbattlesQ122_ppp <- as.ppp(st_coordinates(q1_22_battles_sf), st_bbox(q1_22_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ222_ppp <- as.ppp(st_coordinates(q2_22_battles_sf), st_bbox(q2_22_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ322_ppp<- as.ppp(st_coordinates(q3_22_battles_sf), st_bbox(q3_22_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ422_ppp<-as.ppp(st_coordinates(q4_22_battles_sf), st_bbox(q4_22_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2023\nbattlesQ123_ppp <- as.ppp(st_coordinates(q1_23_battles_sf), st_bbox(q1_23_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ223_ppp <- as.ppp(st_coordinates(q2_23_battles_sf), st_bbox(q2_23_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ323_ppp<- as.ppp(st_coordinates(q3_23_battles_sf), st_bbox(q3_23_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ423_ppp<-as.ppp(st_coordinates(q4_23_battles_sf), st_bbox(q4_23_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2024\nbattlesQ124_ppp <- as.ppp(st_coordinates(q1_24_battles_sf), st_bbox(q1_24_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nbattlesQ224_ppp <- as.ppp(st_coordinates(q2_24_battles_sf), st_bbox(q2_24_battles_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n:::\n\n\n## Explosions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpQ121_ppp <- as.ppp(st_coordinates(q1_21_exp_sf), st_bbox(q1_21_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ221_ppp <- as.ppp(st_coordinates(q2_21_exp_sf), st_bbox(q2_21_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ321_ppp<- as.ppp(st_coordinates(q3_21_exp_sf), st_bbox(q3_21_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ421_ppp<-as.ppp(st_coordinates(q4_21_exp_sf), st_bbox(q4_21_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2022\n\nexpQ122_ppp <- as.ppp(st_coordinates(q1_22_exp_sf), st_bbox(q1_22_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ222_ppp <- as.ppp(st_coordinates(q2_22_exp_sf), st_bbox(q2_22_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ322_ppp<- as.ppp(st_coordinates(q3_22_exp_sf), st_bbox(q3_22_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ422_ppp<-as.ppp(st_coordinates(q4_22_exp_sf), st_bbox(q4_22_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2023\nexpQ123_ppp <- as.ppp(st_coordinates(q1_23_exp_sf), st_bbox(q1_23_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ223_ppp <- as.ppp(st_coordinates(q2_23_exp_sf), st_bbox(q2_23_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ323_ppp<- as.ppp(st_coordinates(q3_23_exp_sf), st_bbox(q3_23_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ423_ppp<-as.ppp(st_coordinates(q4_23_exp_sf), st_bbox(q4_23_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2024\nexpQ124_ppp <- as.ppp(st_coordinates(q1_24_exp_sf), st_bbox(q1_24_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nexpQ224_ppp <- as.ppp(st_coordinates(q2_24_exp_sf), st_bbox(q2_24_exp_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n:::\n\n\n## Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstrat_devQ121_ppp <- as.ppp(st_coordinates(q1_21_strat_dev_sf), st_bbox(q1_21_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ221_ppp <- as.ppp(st_coordinates(q2_21_strat_dev_sf), st_bbox(q2_21_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ321_ppp<- as.ppp(st_coordinates(q3_21_strat_dev_sf), st_bbox(q3_21_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ421_ppp<-as.ppp(st_coordinates(q4_21_strat_dev_sf), st_bbox(q4_21_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2022\nstrat_devQ122_ppp <- as.ppp(st_coordinates(q1_22_strat_dev_sf), st_bbox(q1_22_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ222_ppp <- as.ppp(st_coordinates(q2_22_strat_dev_sf), st_bbox(q2_22_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ322_ppp<- as.ppp(st_coordinates(q3_22_strat_dev_sf), st_bbox(q3_22_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ422_ppp<-as.ppp(st_coordinates(q4_22_strat_dev_sf), st_bbox(q4_22_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2023\nstrat_devQ123_ppp <- as.ppp(st_coordinates(q1_23_strat_dev_sf), st_bbox(q1_23_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ223_ppp <- as.ppp(st_coordinates(q2_23_strat_dev_sf), st_bbox(q2_23_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ323_ppp<- as.ppp(st_coordinates(q3_23_strat_dev_sf), st_bbox(q3_23_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ423_ppp<-as.ppp(st_coordinates(q4_23_strat_dev_sf), st_bbox(q4_23_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2024\nstrat_devQ124_ppp <- as.ppp(st_coordinates(q1_24_strat_dev_sf), st_bbox(q1_24_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nstrat_devQ224_ppp <- as.ppp(st_coordinates(q2_24_strat_dev_sf), st_bbox(q2_24_strat_dev_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n:::\n\n\n## Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncivViolenceQ121_ppp <- as.ppp(st_coordinates(q1_21_civViolence_sf), st_bbox(q1_21_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ221_ppp <- as.ppp(st_coordinates(q2_21_civViolence_sf), st_bbox(q2_21_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ321_ppp<- as.ppp(st_coordinates(q3_21_civViolence_sf), st_bbox(q3_21_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ421_ppp<-as.ppp(st_coordinates(q4_21_civViolence_sf), st_bbox(q4_21_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2022\n\ncivViolenceQ122_ppp <- as.ppp(st_coordinates(q1_22_civViolence_sf), st_bbox(q1_22_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ222_ppp <- as.ppp(st_coordinates(q2_22_civViolence_sf), st_bbox(q2_22_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ322_ppp<- as.ppp(st_coordinates(q3_22_civViolence_sf), st_bbox(q3_22_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ422_ppp<-as.ppp(st_coordinates(q4_22_civViolence_sf), st_bbox(q4_22_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2023\ncivViolenceQ123_ppp <- as.ppp(st_coordinates(q1_23_civViolence_sf), st_bbox(q1_23_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ223_ppp <- as.ppp(st_coordinates(q2_23_civViolence_sf), st_bbox(q2_23_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ323_ppp<- as.ppp(st_coordinates(q3_23_civViolence_sf), st_bbox(q3_23_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ423_ppp<-as.ppp(st_coordinates(q4_23_civViolence_sf), st_bbox(q4_23_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\n#2024\ncivViolenceQ124_ppp <- as.ppp(st_coordinates(q1_24_civViolence_sf), st_bbox(q1_24_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\ncivViolenceQ224_ppp <- as.ppp(st_coordinates(q2_24_civViolence_sf), st_bbox(q2_24_civViolence_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n:::\n\n:::\n\n#### 2.2.2 Converting the boundary to an owin object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboundary_owin <- as.owin(boundary)\n```\n:::\n\n\nOnce we have our ppp object and owin object, we can start combining them to one object that can be passed through the *density()* function.\n\n::: panel-tabset\n## Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbattlesQ121_ppp<- rescale(battlesQ121_ppp, 1000, \"km\") \nbattlesQ121_ppp_com<- battlesQ121_ppp[boundary_owin]\n\nbattlesQ221_ppp<- rescale(battlesQ221_ppp, 1000, \"km\") \nbattlesQ221_ppp_com<- battlesQ221_ppp[boundary_owin]\n\nbattlesQ321_ppp<- rescale(battlesQ321_ppp, 1000, \"km\") \nbattlesQ3121_ppp_com<- battlesQ321_ppp[boundary_owin]\n\nbattlesQ421_ppp<- rescale(battlesQ421_ppp, 1000, \"km\") \nbattlesQ421_ppp_com<- battlesQ421_ppp[boundary_owin]\n\n#2022\nbattlesQ122_ppp<- rescale(battlesQ122_ppp, 1000, \"km\") \nbattlesQ122_ppp_com<- battlesQ122_ppp[boundary_owin]\n\nbattlesQ222_ppp<- rescale(battlesQ222_ppp, 1000, \"km\") \nbattlesQ222_ppp_com<- battlesQ222_ppp[boundary_owin]\n\nbattlesQ322_ppp<- rescale(battlesQ322_ppp, 1000, \"km\") \nbattlesQ3122_ppp_com<- battlesQ322_ppp[boundary_owin]\n\nbattlesQ422_ppp<- rescale(battlesQ422_ppp, 1000, \"km\") \nbattlesQ422_ppp_com<- battlesQ422_ppp[boundary_owin]\n                                                                                #2023\n                                      \nbattlesQ123_ppp<- rescale(battlesQ123_ppp, 1000, \"km\") \nbattlesQ123_ppp_com<- battlesQ123_ppp[boundary_owin]\n\nbattlesQ223_ppp<- rescale(battlesQ223_ppp, 1000, \"km\") \nbattlesQ223_ppp_com<- battlesQ223_ppp[boundary_owin]\n\nbattlesQ323_ppp<- rescale(battlesQ323_ppp, 1000, \"km\") \nbattlesQ3123_ppp_com<- battlesQ323_ppp[boundary_owin]\n\nbattlesQ423_ppp<- rescale(battlesQ423_ppp, 1000, \"km\") \nbattlesQ423_ppp_com<- battlesQ423_ppp[boundary_owin]\n\n#2024\n\nbattlesQ124_ppp<- rescale(battlesQ124_ppp, 1000, \"km\") \nbattlesQ124_ppp_com<- battlesQ124_ppp[boundary_owin]\n\nbattlesQ224_ppp<- rescale(battlesQ224_ppp, 1000, \"km\") \nbattlesQ224_ppp_com<- battlesQ224_ppp[boundary_owin]\n```\n:::\n\n\n## Explosions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpQ121_ppp<- rescale(expQ121_ppp, 1000, \"km\") \nexpQ121_ppp_com<- expQ121_ppp[boundary_owin]\n\nexpQ221_ppp<- rescale(expQ221_ppp, 1000, \"km\") \nexpQ221_ppp_com<- expQ221_ppp[boundary_owin]\n\nexpQ321_ppp<- rescale(expQ321_ppp, 1000, \"km\") \nexpQ3121_ppp_com<- expQ321_ppp[boundary_owin]\n\nexpQ421_ppp<- rescale(expQ421_ppp, 1000, \"km\") \nexpQ421_ppp_com<- expQ421_ppp[boundary_owin]\n\n#2022\nexpQ122_ppp<- rescale(expQ122_ppp, 1000, \"km\") \nexpQ122_ppp_com<- expQ122_ppp[boundary_owin]\n\nexpQ222_ppp<- rescale(expQ222_ppp, 1000, \"km\") \nexpQ222_ppp_com<- expQ222_ppp[boundary_owin]\n\nexpQ322_ppp<- rescale(expQ322_ppp, 1000, \"km\") \nexpQ3122_ppp_com<- expQ322_ppp[boundary_owin]\n\nexpQ422_ppp<- rescale(expQ422_ppp, 1000, \"km\") \nexpQ422_ppp_com<- expQ422_ppp[boundary_owin]\n                                      \n#2023\n                                      \nexpQ123_ppp<- rescale(expQ123_ppp, 1000, \"km\") \nexpQ123_ppp_com<- expQ123_ppp[boundary_owin]\n\nexpQ223_ppp<- rescale(expQ223_ppp, 1000, \"km\") \nexpQ223_ppp_com<- expQ223_ppp[boundary_owin]\n\nexpQ323_ppp<- rescale(expQ323_ppp, 1000, \"km\") \nexpQ3123_ppp_com<- expQ323_ppp[boundary_owin]\n\nexpQ423_ppp<- rescale(expQ423_ppp, 1000, \"km\") \nexpQ423_ppp_com<- expQ423_ppp[boundary_owin]\n\n#2024\n\nexpQ124_ppp<- rescale(expQ124_ppp, 1000, \"km\") \nexpQ124_ppp_com<- expQ124_ppp[boundary_owin]\n```\n:::\n\n\n## Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstrat_devQ121_ppp<- rescale(strat_devQ121_ppp, 1000, \"km\") \nstrat_devQ121_ppp_com<- strat_devQ121_ppp[boundary_owin]\n\nstrat_devQ221_ppp<- rescale(strat_devQ221_ppp, 1000, \"km\") \nstrat_devQ221_ppp_com<- strat_devQ221_ppp[boundary_owin]\n\nstrat_devQ321_ppp<- rescale(strat_devQ321_ppp, 1000, \"km\") \nstrat_devQ3121_ppp_com<- strat_devQ321_ppp[boundary_owin]\n\nstrat_devQ421_ppp<- rescale(strat_devQ421_ppp, 1000, \"km\") \nstrat_devQ421_ppp_com<- strat_devQ421_ppp[boundary_owin]\n\n#2022\nstrat_devQ122_ppp<- rescale(strat_devQ122_ppp, 1000, \"km\") \nstrat_devQ122_ppp_com<- strat_devQ122_ppp[boundary_owin]\n\nstrat_devQ222_ppp<- rescale(strat_devQ222_ppp, 1000, \"km\") \nstrat_devQ222_ppp_com<- strat_devQ222_ppp[boundary_owin]\n\nstrat_devQ322_ppp<- rescale(strat_devQ322_ppp, 1000, \"km\") \nstrat_devQ3122_ppp_com<- strat_devQ322_ppp[boundary_owin]\n\nstrat_devQ422_ppp<- rescale(strat_devQ422_ppp, 1000, \"km\") \nstrat_devQ422_ppp_com<- strat_devQ422_ppp[boundary_owin]\n\n#2023\n                                      \nstrat_devQ123_ppp<- rescale(strat_devQ123_ppp, 1000, \"km\") \nstrat_devQ123_ppp_com<- strat_devQ123_ppp[boundary_owin]\n\nstrat_devQ223_ppp<- rescale(strat_devQ223_ppp, 1000, \"km\") \nstrat_devQ223_ppp_com<- strat_devQ223_ppp[boundary_owin]\n\nstrat_devQ323_ppp<- rescale(strat_devQ323_ppp, 1000, \"km\") \nstrat_devQ3123_ppp_com<- strat_devQ323_ppp[boundary_owin]\n\nstrat_devQ423_ppp<- rescale(strat_devQ423_ppp, 1000, \"km\") \nstrat_devQ423_ppp_com<- strat_devQ423_ppp[boundary_owin]\n\n#2024\n\nstrat_devQ124_ppp<- rescale(strat_devQ124_ppp, 1000, \"km\") \nstrat_devQ124_ppp_com<- strat_devQ124_ppp[boundary_owin]\n```\n:::\n\n\n## Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncivViolenceQ121_ppp<- rescale(civViolenceQ121_ppp, 1000, \"km\") \ncivViolenceQ121_ppp_com<- civViolenceQ121_ppp[boundary_owin]\n\ncivViolenceQ221_ppp<- rescale(civViolenceQ221_ppp, 1000, \"km\") \ncivViolenceQ221_ppp_com<- civViolenceQ221_ppp[boundary_owin]\n\ncivViolenceQ321_ppp<- rescale(civViolenceQ321_ppp, 1000, \"km\") \ncivViolenceQ3121_ppp_com<- civViolenceQ321_ppp[boundary_owin]\n\ncivViolenceQ421_ppp<- rescale(civViolenceQ421_ppp, 1000, \"km\") \ncivViolenceQ421_ppp_com<- civViolenceQ421_ppp[boundary_owin]\n\n#2022\ncivViolenceQ122_ppp<- rescale(civViolenceQ122_ppp, 1000, \"km\") \ncivViolenceQ122_ppp_com<- civViolenceQ122_ppp[boundary_owin]\n\ncivViolenceQ222_ppp<- rescale(civViolenceQ222_ppp, 1000, \"km\") \ncivViolenceQ222_ppp_com<- civViolenceQ222_ppp[boundary_owin]\n\ncivViolenceQ322_ppp<- rescale(civViolenceQ322_ppp, 1000, \"km\") \ncivViolenceQ3122_ppp_com<- civViolenceQ322_ppp[boundary_owin]\n\ncivViolenceQ422_ppp<- rescale(civViolenceQ422_ppp, 1000, \"km\") \ncivViolenceQ422_ppp_com<- civViolenceQ422_ppp[boundary_owin]\n\n#2023\n                                      \ncivViolenceQ123_ppp<- rescale(civViolenceQ123_ppp, 1000, \"km\") \ncivViolenceQ123_ppp_com<- civViolenceQ123_ppp[boundary_owin]\n\ncivViolenceQ223_ppp<- rescale(civViolenceQ223_ppp, 1000, \"km\") \ncivViolenceQ223_ppp_com<- civViolenceQ223_ppp[boundary_owin]\n\ncivViolenceQ323_ppp<- rescale(civViolenceQ323_ppp, 1000, \"km\") \ncivViolenceQ3123_ppp_com<- civViolenceQ323_ppp[boundary_owin]\n\ncivViolenceQ423_ppp<- rescale(civViolenceQ423_ppp, 1000, \"km\") \ncivViolenceQ423_ppp_com<- civViolenceQ423_ppp[boundary_owin]\n\n#2024\n\ncivViolenceQ124_ppp<- rescale(civViolenceQ124_ppp, 1000, \"km\") \ncivViolenceQ124_ppp_com<- civViolenceQ124_ppp[boundary_owin]\n```\n:::\n\n:::\n\n## 3.0 Computing the quarterly KDE Layers\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#battles_kde <- density(battles_ppp_com, sigma=bw.CvL(battles_ppp_com), edge=TRUE, kernel=\"gaussian\") \n\n#plot(battles_kde)\n```\n:::\n",
    "supporting": [
      "Take-Home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}